ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_hal_i2c.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  23              	I2C_Flush_TXDR:
  24              	.LVL0:
  25              	.LFB105:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @file    stm32f0xx_hal_i2c.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   ******************************************************************************
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @attention
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * Copyright (c) 2016 STMicroelectronics.
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * All rights reserved.
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * in the root directory of this software component.
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   ******************************************************************************
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   @verbatim
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   ==============================================================================
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                         ##### How to use this driver #####
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   ==============================================================================
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the HAL_I2C_MspInit() API:
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (##) I2C pins configuration
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   the transmit or receive channel
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx channel
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   the DMA Tx or Rx channel
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the HAL_I2C_Init(), configures also the low level H
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized HAL_I2C_MspInit(&hi2c) API.
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function HAL_I2C_IsDeviceRead
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** Polling mode IO operation ***
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     =================================
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using HAL_I2C_Master_Transmit(
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using HAL_I2C_Master_Receive()
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Transmit()
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Receive()
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     =====================================
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using HAL_I2C_Mem_W
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using HAL_I2C_Mem_
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     ===================================
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Trans
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and users can
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Receiv
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and users can
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Transmi
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and users can
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Receive_
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and users can
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and users can
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_ErrorCallback()
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and users can
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_AbortCpltCallback()
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** Interrupt mode or DMA mode IO sequential operation ***
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     ==========================================================
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           when a direction change during transfer
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Option field values are defined through I2C_XFEROPTIONS and are listed below:
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functional is same as associated interfac
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            no sequential mode
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             and data to transfer without a final stop condition
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             start condition, address and data to transfer without a final stop cond
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             an then permit a call the same master sequential interface several time
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             (like HAL_I2C_Master_Seq_Transmit_IT() then HAL_I2C_Master_Seq_Transmit
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             or HAL_I2C_Master_Seq_Transmit_DMA() then HAL_I2C_Master_Seq_Transmit_D
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             transfer
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             transfer
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_LAST_FRAME_NO_STOP: Sequential usage (Master only), this option allow to manage a re
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             after several call of the same master sequential interface several time
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             (link with option I2C_FIRST_AND_NEXT_FRAME).
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one using
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               HAL_I2C_Master_Seq_Transmit_IT
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               with option I2C_FIRST_AND_NEXT_FRAME then I2C_NEXT_FRAME.
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              Then usage of this option I2C_LAST_FRAME_NO_STOP at the last Transmit 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               Receive sequence permit to call the opposite interface Receive or Tra
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               without stopping the communication and so generate a restart conditio
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_OTHER_FRAME: Sequential usage (Master only), this option allow to manage a restart c
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             each call of the same master sequential
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             interface.
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one with a restart with slave 
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             each bytes using
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               HAL_I2C_Master_Seq_Transmit_IT
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                               with option I2C_FIRST_FRAME then I2C_OTHER_FRAME.
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             Then usage of this option I2C_OTHER_AND_LAST_FRAME at the last frame to
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             generation of STOP condition.
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Different sequential I2C interfaces are listed below:
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             HAL_I2C_Master_Seq_Transmit_IT() or using HAL_I2C_Master_Seq_Transmit_DMA()
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_MasterTxCpltCallback() is execut
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             users can add their own code by customization of function pointer HAL_I2C_MasterTxCpltC
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             HAL_I2C_Master_Seq_Receive_IT() or using HAL_I2C_Master_Seq_Receive_DMA()
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_MasterRxCpltCallback() is executed 
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Abort a master IT or DMA I2C process communication with Interrupt using HAL_I2C_Master_A
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) End of abort process, HAL_I2C_AbortCpltCallback() is executed and users can
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using HAL_I2C_EnableListen_IT()
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             HAL_I2C_DisableListen_IT()
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) When address slave I2C match, HAL_I2C_AddrCallback() is executed and users can
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code to check the Address Match Code and the transmission direction reques
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (Write/Read).
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) At Listen mode end HAL_I2C_ListenCpltCallback() is executed and users can
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           add their own code by customization of function pointer HAL_I2C_ListenCpltCallback()
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             HAL_I2C_Slave_Seq_Transmit_IT() or using HAL_I2C_Slave_Seq_Transmit_DMA()
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_SlaveTxCpltCallback() is execute
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             users can add their own code by customization of function pointer HAL_I2C_SlaveTxCpltCa
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             HAL_I2C_Slave_Seq_Receive_IT() or using HAL_I2C_Slave_Seq_Receive_DMA()
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_SlaveRxCpltCallback() is executed a
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and users can
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_ErrorCallback()
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     =======================================
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Mem_Write_IT()
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and users can
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Mem_Read_IT()
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and users can
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and users can
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_ErrorCallback()
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** DMA mode IO operation ***
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     ==============================
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Master_Transmit_DMA()
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and users can
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 5


 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Master_Receive_DMA()
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and users can
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Slave_Transmit_DMA()
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and users can
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Slave_Receive_DMA()
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and users can
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and users can
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_ErrorCallback()
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and users can
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     =================================
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Mem_Write_DMA()
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and users can
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Mem_Read_DMA()
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and users can
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and users can
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add their own code by customization of function pointer HAL_I2C_ErrorCallback()
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      ==================================
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      [..]
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE: Enable the I2C peripheral
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE: Disable the I2C peripheral
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      *** Callback registration ***
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      =============================================
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      The compilation flag USE_HAL_I2C_REGISTER_CALLBACKS when set to 1
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      allows the user to configure dynamically the driver callbacks.
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      Use Functions HAL_I2C_RegisterCallback() or HAL_I2C_RegisterAddrCallback()
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      to register an interrupt callback.
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      Function HAL_I2C_RegisterCallback() allows to register following callbacks:
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 6


 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      and a pointer to the user callback function.
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      For specific callback AddrCallback use dedicated register callbacks : HAL_I2C_RegisterAddrCall
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      Use function HAL_I2C_UnRegisterCallback to reset a callback to the default
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      weak function.
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      HAL_I2C_UnRegisterCallback takes as parameters the HAL peripheral handle,
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      and the Callback ID.
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      This function allows to reset following callbacks:
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      For callback AddrCallback use dedicated register callbacks : HAL_I2C_UnRegisterAddrCallback().
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      By default, after the HAL_I2C_Init() and when the state is HAL_I2C_STATE_RESET
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      all callbacks are set to the corresponding weak functions:
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      examples HAL_I2C_MasterTxCpltCallback(), HAL_I2C_MasterRxCpltCallback().
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      Exception done for MspInit and MspDeInit functions that are
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      reset to the legacy weak functions in the HAL_I2C_Init()/ HAL_I2C_DeInit() only when
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      these callbacks are null (not registered beforehand).
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      If MspInit or MspDeInit are not null, the HAL_I2C_Init()/ HAL_I2C_DeInit()
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      Callbacks can be registered/unregistered in HAL_I2C_STATE_READY state only.
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      in HAL_I2C_STATE_READY or HAL_I2C_STATE_RESET state,
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      using HAL_I2C_RegisterCallback() before calling HAL_I2C_DeInit()
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      or HAL_I2C_Init() function.
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      When the compilation flag USE_HAL_I2C_REGISTER_CALLBACKS is set to 0 or
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      not defined, the callback registration feature is not available and all callbacks
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      are set to the corresponding weak functions.
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      [..]
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 7


 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   @endverbatim
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #include "stm32f0xx_hal.h"
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @addtogroup STM32F0xx_HAL_Driver
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C I2C
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief I2C HAL module driver
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define SLAVE_ADDR_SHIFT     7U
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define SLAVE_ADDR_MSK       0x06U
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((uint32_t)((uint32_t)HAL_I2C_STATE_BUSY_TX | \
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                          (uint32_t)HAL_I2C_STATE_BUSY_RX) & \
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                               (uint32_t)(~((uint32_t)HAL_I2C_STATE_READY))))
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /*!< Mask State define, keep only RX and TX bits */
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /*!< Default Value */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | \
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                               (uint32_t)HAL_I2C_MODE_MASTER))
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /*!< Master Busy TX, combinaison of State LSB and Mode enum */
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | \
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                               (uint32_t)HAL_I2C_MODE_MASTER))
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /*!< Master Busy RX, combinaison of State LSB and Mode enum */
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | \
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                               (uint32_t)HAL_I2C_MODE_SLAVE))
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /*!< Slave Busy TX, combinaison of State LSB and Mode enum */
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | \
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                               (uint32_t)HAL_I2C_MODE_SLAVE))
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 8


 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /*!< Slave Busy RX, combinaison of State LSB and Mode enum  */
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | \
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                               (uint32_t)HAL_I2C_MODE_MEM))
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /*!< Memory Busy TX, combinaison of State LSB and Mode enum */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | \
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                               (uint32_t)HAL_I2C_MODE_MEM))
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /*!< Memory Busy RX, combinaison of State LSB and Mode enum */
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (uint16_t)(0x0001U)   /*!< Bit field can be combinated with
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                          @ref I2C_XFER_LISTEN_IT */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (uint16_t)(0x0002U)   /*!< Bit field can be combinated with
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                          @ref I2C_XFER_LISTEN_IT */
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (uint16_t)(0x8000U)   /*!< Bit field can be combinated with @ref I2
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                          and @ref I2C_XFER_RX_IT */
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (uint16_t)(0x0010U)   /*!< Bit definition to manage addition of glo
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                          and NACK treatment */
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (uint16_t)(0x0020U)   /*!< Bit definition to manage only STOP evene
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (uint16_t)(0x0040U)   /*!< Bit definition to manage only Reload of 
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private macros ------------------------------------------------------------*/
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @addtogroup I2C_Private_Macro
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Macro to get remaining data to transfer on DMA side */
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_GET_DMA_REMAIN_DATA(__HANDLE__)     __HAL_DMA_GET_COUNTER(__HANDLE__)
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c);
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 9


 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                 uint16_t MemAddress, uint16_t MemAddSize, uint32_t 
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                 uint32_t Tickstart);
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                uint16_t MemAddress, uint16_t MemAddSize, uint32_t T
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                uint32_t Tickstart);
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                            uint32_t ITSources);
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Mem_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                         uint32_t ITSources);
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                           uint32_t ITSources);
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                             uint32_t ITSources);
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Mem_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                          uint32_t ITSources);
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                            uint32_t ITSources);
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                     uint32_t Timeout, uint32_t Tickstart);
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                         uint32_t Tickstart);
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                         uint32_t Tickstart);
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                         uint32_t Tickstart);
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsErrorOccurred(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                              uint32_t Tickstart);
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private function to treat different error callback */
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c);
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private function to flush TXDR register */
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private function to handle  start, restart or stop a transfer */
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                uint32_t Request);
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private function to Convert Specific options */
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c);
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 10


 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *  @brief    Initialization and Configuration functions
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @verbatim
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           the selected configuration:
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Clock Timing
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Own Address 1
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Dual Addressing mode
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Own Address 2
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Own Address 2 Mask
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) General call mode
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Nostretch mode
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @endverbatim
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c == NULL)
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 11


 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_RESET)
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init the I2C Callback settings */
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallback 
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallback 
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback  = HAL_I2C_SlaveTxCpltCallback;  /* Legacy weak SlaveTxCpltCallback  
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback  = HAL_I2C_SlaveRxCpltCallback;  /* Legacy weak SlaveRxCpltCallback  
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ListenCpltCallback   = HAL_I2C_ListenCpltCallback;   /* Legacy weak ListenCpltCallback   
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->MemTxCpltCallback    = HAL_I2C_MemTxCpltCallback;    /* Legacy weak MemTxCpltCallback    
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->MemRxCpltCallback    = HAL_I2C_MemRxCpltCallback;    /* Legacy weak MemRxCpltCallback    
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCallback        = HAL_I2C_ErrorCallback;        /* Legacy weak ErrorCallback        
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->AbortCpltCallback    = HAL_I2C_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->AddrCallback         = HAL_I2C_AddrCallback;         /* Legacy weak AddrCallback         
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->MspInitCallback == NULL)
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->MspInitCallback = HAL_I2C_MspInit; /* Legacy weak MspInit  */
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->MspInitCallback(hi2c);
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 12


 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                           (hi2c->Init.OwnAddress2Masks << 8));
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c == NULL)
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 13


 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->MspDeInitCallback == NULL)
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->MspDeInitCallback = HAL_I2C_MspDeInit; /* Legacy weak MspDeInit  */
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->MspDeInitCallback(hi2c);
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Release Lock */
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 14


 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Register a User I2C Callback
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         To be used instead of the weak predefined callback
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   The HAL_I2C_RegisterCallback() may be called before HAL_I2C_Init() in HAL_I2C_STATE_RES
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         to register callbacks for HAL_I2C_MSPINIT_CB_ID and HAL_I2C_MSPDEINIT_CB_ID.
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be registered
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pCallback pointer to the Callback function
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Callb
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                            pI2C_CallbackTypeDef pCallback)
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (pCallback == NULL)
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update the error code */
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     switch (CallbackID)
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = pCallback;
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = pCallback;
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = pCallback;
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = pCallback;
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 15


 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ListenCpltCallback = pCallback;
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = pCallback;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = pCallback;
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCallback = pCallback;
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->AbortCpltCallback = pCallback;
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       default :
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update the error code */
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Return error status */
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         status =  HAL_ERROR;
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     switch (CallbackID)
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       default :
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update the error code */
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Return error status */
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         status =  HAL_ERROR;
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 16


 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update the error code */
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Return error status */
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     status =  HAL_ERROR;
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return status;
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Unregister an I2C Callback
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         I2C callback is redirected to the weak predefined callback
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   The HAL_I2C_UnRegisterCallback() may be called before HAL_I2C_Init() in HAL_I2C_STATE_R
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         to un-register callbacks for HAL_I2C_MSPINIT_CB_ID and HAL_I2C_MSPDEINIT_CB_ID.
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be unregistered
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Cal
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     switch (CallbackID)
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallb
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallb
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = HAL_I2C_SlaveTxCpltCallback;   /* Legacy weak SlaveTxCpltCallba
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 17


 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = HAL_I2C_SlaveRxCpltCallback;   /* Legacy weak SlaveRxCpltCallba
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ListenCpltCallback = HAL_I2C_ListenCpltCallback;     /* Legacy weak ListenCpltCallbac
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = HAL_I2C_MemTxCpltCallback;       /* Legacy weak MemTxCpltCallback
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = HAL_I2C_MemRxCpltCallback;       /* Legacy weak MemRxCpltCallback
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCallback = HAL_I2C_ErrorCallback;               /* Legacy weak ErrorCallback    
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->AbortCpltCallback = HAL_I2C_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       default :
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update the error code */
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Return error status */
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         status =  HAL_ERROR;
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     switch (CallbackID)
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       default :
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update the error code */
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Return error status */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 18


 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         status =  HAL_ERROR;
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         break;
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update the error code */
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Return error status */
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     status =  HAL_ERROR;
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return status;
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Register the Slave Address Match I2C Callback
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         To be used instead of the weak HAL_I2C_AddrCallback() predefined callback
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pCallback pointer to the Address Match Callback function
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterAddrCallback(I2C_HandleTypeDef *hi2c, pI2C_AddrCallbackTypeDef pC
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (pCallback == NULL)
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update the error code */
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->AddrCallback = pCallback;
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update the error code */
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Return error status */
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     status =  HAL_ERROR;
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return status;
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  UnRegister the Slave Address Match I2C Callback
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         Info Ready I2C Callback is redirected to the weak HAL_I2C_AddrCallback() predefined cal
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 19


1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterAddrCallback(I2C_HandleTypeDef *hi2c)
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->AddrCallback = HAL_I2C_AddrCallback; /* Legacy weak AddrCallback  */
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update the error code */
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Return error status */
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     status =  HAL_ERROR;
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return status;
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *  @brief   Data transfers functions
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @verbatim
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                       ##### IO operation functions #####
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     transfers.
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) There are two modes of transfer:
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             The status of all data processing is returned by the same function
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             after finishing transfer.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             The end of the data processing will be indicated through the
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             using DMA mode.
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) Blocking mode functions are :
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 20


1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_IT()
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_IT()
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_IT()
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_IT()
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_EnableListen_IT()
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_DisableListen_IT()
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Abort_IT()
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_DMA()
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_DMA()
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_DMA()
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_DMA()
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_AddrCallback()
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_ListenCpltCallback()
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_AbortCpltCallback()
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @endverbatim
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                           uint16_t Size, uint32_t Timeout)
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 21


1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address */
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_WRITE);
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_WRITE);
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 22


1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP Flag */
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 23


1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                          uint16_t Size, uint32_t Timeout)
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address */
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_READ);
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_READ);
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Read data from RXDR */
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 24


1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP Flag */
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode.
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 25


1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size,
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                          uint32_t Timeout)
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Preload TX data if no stretch enable */
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Init.NoStretchMode == I2C_NOSTRETCH_ENABLE)
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Preload TX register */
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 26


1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear ADDR flag */
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear ADDR flag */
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until AF flag is set */
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_AF, RESET, Timeout, tickstart) != HAL_OK)
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Flush TX register */
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 27


1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear AF flag */
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP flag */
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size,
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                         uint32_t Timeout)
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 28


1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize = hi2c->XferCount;
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear ADDR flag */
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Store Last receive data if any */
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Read data from RXDR */
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Increment Buffer pointer */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 29


1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferCount--;
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize--;
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Read data from RXDR */
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP flag */
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 30


1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                              uint16_t Size)
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address */
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_WRIT
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 31


1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                             uint16_t Size)
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 32


1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address */
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Preload TX data if no stretch enable */
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Init.NoStretchMode == I2C_NOSTRETCH_ENABLE)
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 33


1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Preload TX register */
1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 34


1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                               uint16_t Size)
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 35


1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the DMA error callback */
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable the DMA channel */
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                          hi2c->XferSize);
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C state */
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C error code */
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Send Slave Address */
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART 
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update XferCount value */
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 36


1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   process unlock */
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable DMA Request */
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C state */
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C error code */
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Send Slave Address */
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_WRITE);
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 process unlock */
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* possible to enable all of these */
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 37


2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                              uint16_t Size)
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the DMA error callback */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 38


2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable the DMA channel */
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                          hi2c->XferSize);
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C state */
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C error code */
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Send Slave Address */
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART *
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update XferCount value */
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   process unlock */
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable DMA Request */
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C state */
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C error code */
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 39


2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Send Slave Address */
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_READ);
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 process unlock */
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* possible to enable all of these */
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 40


2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Preload TX data if no stretch enable */
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Init.NoStretchMode == I2C_NOSTRETCH_ENABLE)
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Preload TX register */
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the DMA error callback */
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable the DMA channel */
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx,
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                          (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR,
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                          hi2c->XferSize);
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C state */
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_LISTEN;
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C error code */
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 41


2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable Address Acknowledge */
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   process unlock */
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable ERR, STOP, NACK, ADDR interrupts */
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable DMA Request */
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C state */
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_LISTEN;
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C error code */
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       to avoid the risk of I2C interrupt handle execution before current
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       process unlock */
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 42


2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the DMA error callback */
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable the DMA channel */
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                        hi2c->XferSize);
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C state */
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C error code */
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 43


2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 process unlock */
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable DMA Request */
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C state */
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C error code */
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 44


2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                     uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Ti
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 45


2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     do
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     } while (hi2c->XferCount > 0U);
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP Flag */
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 46


2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                    uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Tim
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 47


2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address */
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_READ);
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_READ);
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     do
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Read data from RXDR */
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 48


2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     } while (hi2c->XferCount > 0U);
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP Flag */
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                        uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 49


2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Mem_ISR_IT;
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If Memory address size is 8Bit */
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prefetch Memory Address */
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Reset Memaddress content */
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Memaddress = 0xFFFFFFFFU;
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If Memory address size is 16Bit */
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prefetch Memory Address (MSB part, LSB will be manage through interrupt) */
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prepare Memaddress buffer for LSB part */
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Memaddress = I2C_MEM_ADD_LSB(MemAddress);
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_W
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 50


2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                       uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
2794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
2803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
2808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Mem_ISR_IT;
2822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
2823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If Memory address size is 8Bit */
2825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 51


2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prefetch Memory Address */
2828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
2829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Reset Memaddress content */
2831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Memaddress = 0xFFFFFFFFU;
2832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If Memory address size is 16Bit */
2834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prefetch Memory Address (MSB part, LSB will be manage through interrupt) */
2837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
2838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prepare Memaddress buffer for LSB part */
2840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Memaddress = I2C_MEM_ADD_LSB(MemAddress);
2841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_
2844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
2851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
2854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
2855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
2856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, (I2C_XFER_TX_IT | I2C_XFER_RX_IT));
2857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
2859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
2863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
2865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                         uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
2881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 52


2883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
2892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
2897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Mem_ISR_DMA;
2911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
2912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If Memory address size is 8Bit */
2923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
2924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prefetch Memory Address */
2926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
2927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Reset Memaddress content */
2929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Memaddress = 0xFFFFFFFFU;
2930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If Memory address size is 16Bit */
2932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prefetch Memory Address (MSB part, LSB will be manage through interrupt) */
2935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
2936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prepare Memaddress buffer for LSB part */
2938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Memaddress = I2C_MEM_ADD_LSB(MemAddress);
2939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 53


2940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
2945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the DMA error callback */
2947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable the DMA channel */
2954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                        hi2c->XferSize);
2956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C state */
2960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C error code */
2964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
2967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
2970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Send Slave Address and Memory Address */
2975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START
2976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
2978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 process unlock */
2983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* possible to enable all of these */
2985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
2987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C state */
2992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C error code */
2996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 54


2997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
2999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
3002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
3005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
3009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
3011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
3014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
3019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
3020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be read
3022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
3025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                        uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
3026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
3027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
3030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
3031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
3038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
3041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
3043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
3046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
3050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
3051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
3053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 55


3054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
3056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Mem_ISR_DMA;
3057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
3058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If Memory address size is 8Bit */
3069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
3070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prefetch Memory Address */
3072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Reset Memaddress content */
3075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Memaddress = 0xFFFFFFFFU;
3076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If Memory address size is 16Bit */
3078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prefetch Memory Address (MSB part, LSB will be manage through interrupt) */
3081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
3082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prepare Memaddress buffer for LSB part */
3084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Memaddress = I2C_MEM_ADD_LSB(MemAddress);
3085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
3088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
3090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the DMA error callback */
3093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
3094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
3096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
3097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
3098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable the DMA channel */
3100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
3101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                        hi2c->XferSize);
3102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C state */
3106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
3107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C error code */
3110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 56


3111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
3113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
3116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
3119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Send Slave Address and Memory Address */
3121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_STAR
3122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
3124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 process unlock */
3129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* possible to enable all of these */
3131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
3132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
3133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C state */
3138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
3139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C error code */
3142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
3145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
3148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
3151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
3155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
3157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
3160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This function is used with Memory devices
3161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Trials Number of trials
3166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 57


3168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
3170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                         uint32_t Timeout)
3171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
3172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
3173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0UL;
3175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   FlagStatus tmp1;
3177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   FlagStatus tmp2;
3178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
3182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
3184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
3187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
3190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     do
3193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Generate Start */
3195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
3196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
3198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
3199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tickstart = HAL_GetTick();
3200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       while ((tmp1 == RESET) && (tmp2 == RESET))
3205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (Timeout != HAL_MAX_DELAY)
3207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
3209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
3210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Update I2C state */
3211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
3212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Update I2C error code */
3214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Process Unlocked */
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
3218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             return HAL_ERROR;
3220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
3221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 58


3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
3228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
3229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
3234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear STOP Flag */
3237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Device is ready */
3240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
3241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
3243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_OK;
3246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
3253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear NACK Flag */
3256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
3259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_Trials == Trials)
3264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Generate Stop */
3266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
3267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
3272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear STOP Flag */
3275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Trials */
3279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Trials++;
3280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     } while (I2C_Trials < Trials);
3281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 59


3282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update I2C state */
3283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update I2C error code */
3286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
3289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
3292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
3296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
3298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
3301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                  uint16_t Size, uint32_t XferOptions)
3313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
3314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
3315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
3318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
3323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
3330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 60


3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame,
3348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        do not generate Restart Condition */
3349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && \
3351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(XferOptions) == 0))
3352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
3368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
3378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
3379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
3380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
3383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
3387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
3389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with DMA.
3392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 61


3396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uin
3403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                   uint16_t Size, uint32_t XferOptions)
3404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
3405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
3406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
3410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
3415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
3422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame,
3440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        do not generate Restart Condition */
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && \
3443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(XferOptions) == 0))
3444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 62


3453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
3462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
3465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the DMA error callback */
3467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
3471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable the DMA channel */
3474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
3475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                          hi2c->XferSize);
3476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C state */
3480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C error code */
3484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
3487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
3490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to write */
3495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update XferCount value */
3498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
3501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   process unlock */
3506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable DMA Request */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 63


3510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C state */
3515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C error code */
3519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
3522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
3525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Send Slave Address */
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
3534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
3535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_WRITE);
3536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
3538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 process unlock */
3543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* possible to enable all of these */
3545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
3546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
3547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
3551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
3555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
3557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
3560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 64


3567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8
3571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                 uint16_t Size, uint32_t XferOptions)
3572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
3573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
3574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
3577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
3582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
3589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame,
3607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        do not generate Restart Condition */
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && \
3610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(XferOptions) == 0))
3611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 65


3624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
3627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
3630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
3635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
3636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
3638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
3642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
3644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with DMA
3647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                  uint16_t Size, uint32_t XferOptions)
3659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
3660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
3665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
3670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
3677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 66


3681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame,
3695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        do not generate Restart Condition */
3696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && \
3698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(XferOptions) == 0))
3699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
3717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
3720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the DMA error callback */
3722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
3723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
3726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
3727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable the DMA channel */
3729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
3730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                          hi2c->XferSize);
3731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C state */
3735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 67


3738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C error code */
3739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
3742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
3745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to read */
3750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update XferCount value */
3753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
3756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   process unlock */
3761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Enable DMA Request */
3765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
3766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C state */
3770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Update I2C error code */
3774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
3777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
3780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Send Slave Address */
3788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
3789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
3790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_READ);
3791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
3793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 68


3795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 process unlock */
3798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* possible to enable all of these */
3800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI |
3801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TXI */
3802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
3806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
3810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
3812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
3824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                 uint32_t XferOptions)
3825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
3826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
3827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   FlagStatus tmp;
3828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
3830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
3838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
3844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable associated Interrupts */
3851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 69


3852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Abort DMA Xfer if any */
3854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Abort DMA RX */
3865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
3867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
3870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
3882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmp = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
3889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE) && (tmp != RESET))
3890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
3897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     process unlock */
3902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
3904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
3906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 70


3909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
3910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
3912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t 
3924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                  uint32_t XferOptions)
3925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
3926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
3927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   FlagStatus tmp;
3928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
3931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
3939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
3942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable associated Interrupts */
3952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Abort DMA RX */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 71


3966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
3968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
3971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Abort DMA TX */
3988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
3990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
3993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Nothing to do */
3999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
4002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
4006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
4007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
4009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
4014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
4016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
4018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
4019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the DMA error callback */
4021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
4022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 72


4023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
4024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
4025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
4026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable the DMA channel */
4028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
4029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                        hi2c->XferSize);
4030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
4032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C state */
4034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C error code */
4038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
4041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
4044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
4047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update XferCount value */
4049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Reset XferSize */
4052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = 0;
4053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
4055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C state */
4057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C error code */
4061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
4064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
4067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmp = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
4070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE) && (tmp != RESET))
4071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 73


4080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable DMA Request */
4081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
4082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     process unlock */
4086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
4087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
4090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
4094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
4099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
4105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Si
4108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                uint32_t XferOptions)
4109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
4111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   FlagStatus tmp;
4112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
4114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
4117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
4121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
4122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
4125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
4126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
4128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
4131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
4132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
4133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable associated Interrupts */
4135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 74


4137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
4139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
4143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
4144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Abort DMA TX */
4149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
4151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
4154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
4155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
4156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
4159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
4163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
4164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
4166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
4171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmp = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
4173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT) && (tmp != RESET))
4174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     process unlock */
4186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* REnable ADDR interrupt */
4187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
4190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 75


4194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
4199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
4205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
4208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                 uint32_t XferOptions)
4209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
4211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   FlagStatus tmp;
4212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
4213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
4215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
4218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
4222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
4223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
4226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
4227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
4229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
4232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
4233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
4234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable associated Interrupts */
4236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
4240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
4242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
4243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Abort DMA TX */
4250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 76


4251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
4252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
4255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
4256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
4257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
4259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
4262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
4266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
4267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Abort DMA RX */
4272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
4274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
4277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
4278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
4279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
4281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Nothing to do */
4283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
4286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
4290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
4291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
4293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
4298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
4300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
4302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
4303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the DMA error callback */
4305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
4306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 77


4308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
4309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
4310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable the DMA channel */
4312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR,
4313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                        (uint32_t)pData, hi2c->XferSize);
4314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
4316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C state */
4318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C error code */
4322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
4325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
4328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
4331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update XferCount value */
4333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Reset XferSize */
4336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = 0;
4337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
4339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C state */
4341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update I2C error code */
4345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
4348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
4351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmp = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
4354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT) && (tmp != RESET))
4355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable DMA Request */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 78


4365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     process unlock */
4370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* REnable ADDR interrupt */
4371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
4374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
4378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
4383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
4388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
4390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
4392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
4393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
4395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
4398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
4402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
4407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C
4409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
4412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
4414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmp;
4415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
4417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_LISTEN)
4418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
4420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
4421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 79


4422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR = NULL;
4424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
4426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
4429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
4433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
4438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
4441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
4442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
4445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
4447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
4449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts and Store Previous state */
4452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
4453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
4456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
4460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
4461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
4463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Do nothing */
4465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
4468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
4469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
4471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
4472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
4473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 80


4479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
4480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
4483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wrong usage of abort function */
4487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
4488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
4489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
4494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
4497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
4498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
4502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c) /* Derogation MISRAC2012-Rule-8.13 */
4507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
4509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
4513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->XferISR != NULL)
4514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
4516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
4521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
4526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmperror;
4530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
4532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_BERR) != RESET) && \
4533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ERRI) != RESET))
4534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 81


4536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear BERR flag */
4538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
4539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
4542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_OVR) != RESET) && \
4543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ERRI) != RESET))
4544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
4546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear OVR flag */
4548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
4549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
4552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_ARLO) != RESET) && \
4553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ERRI) != RESET))
4554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
4556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear ARLO flag */
4558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
4559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
4562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
4563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
4565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((tmperror & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_ERROR_
4566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITError(hi2c, tmperror);
4568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
4573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
4578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
4581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
4584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
4585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
4589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 82


4593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
4594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
4597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
4600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
4601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
4604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
4609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
4612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
4615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
4616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
4620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
4625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
4628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
4631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
4632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
4636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_XFE
4639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  AddrMatchCode Address Match Code
4640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
4643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
4646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(TransferDirection);
4647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
4648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 83


4650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
4651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
4652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Listen Complete callback.
4656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
4661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
4664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
4667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
4668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
4672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
4677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
4680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
4683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
4684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
4688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
4693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
4696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
4699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
4700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C error callback.
4704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 84


4707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
4709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
4712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
4715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
4716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C abort callback.
4720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
4725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
4728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
4731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
4732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
4736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
4739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *  @brief   Peripheral State, Mode and Error functions
4740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
4741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @verbatim
4742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
4743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
4744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
4745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
4746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
4747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     and the data flow.
4748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @endverbatim
4750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
4751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
4755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL state
4758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(const I2C_HandleTypeDef *hi2c)
4760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Return I2C handle state */
4762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return hi2c->State;
4763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 85


4764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
4767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         the configuration information for I2C module
4769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL mode
4770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(const I2C_HandleTypeDef *hi2c)
4772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return hi2c->Mode;
4774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Return the I2C error code.
4778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
4780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval I2C Error Code
4781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(const I2C_HandleTypeDef *hi2c)
4783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return hi2c->ErrorCode;
4785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
4789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
4793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
4796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
4797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
4801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
4808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                            uint32_t ITSources)
4809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint16_t devaddress;
4811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Locked */
4814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && \
4817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NACKI) != RESET))
4818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear NACK Flag */
4820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 86


4821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set corresponding Error Code */
4823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Flush TX register */
4828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && \
4831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_RXI) != RESET))
4832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
4834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
4835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Read data from RXDR */
4837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Increment Buffer pointer */
4840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize--;
4843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount--;
4844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && \
4846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TXI) != RESET))
4847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Write data to TXDR */
4849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Increment Buffer pointer */
4852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize--;
4855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount--;
4856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TCR) != RESET) && \
4858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TCI) != RESET))
4859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
4861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
4866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
4868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
4869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
4870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
4871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
4874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize,
4875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              hi2c->XferOptions, I2C_NO_STARTSTOP);
4876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
4877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 87


4878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
4879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize,
4880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
4881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
4882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
4883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
4885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
4889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
4892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
4893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
4894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
4898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TC) != RESET) && \
4901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TCI) != RESET))
4902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
4907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
4910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Generate Stop */
4911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
4913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
4914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
4915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
4918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
4919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
4921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Nothing to do */
4930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && \
4933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_STOPI) != RESET))
4934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 88


4935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Master complete process */
4936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, tmpITFlags);
4937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
4940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
4943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
4944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Memory Mode with Interrupt.
4947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Mem_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
4954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                         uint32_t ITSources)
4955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
4956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t direction = I2C_GENERATE_START_WRITE;
4957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Locked */
4960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && \
4963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NACKI) != RESET))
4964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear NACK Flag */
4966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set corresponding Error Code */
4969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Flush TX register */
4974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && \
4977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_RXI) != RESET))
4978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
4980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
4981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Read data from RXDR */
4983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Increment Buffer pointer */
4986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize--;
4989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount--;
4990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && \
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 89


4992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TXI) != RESET))
4993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Memaddress == 0xFFFFFFFFU)
4995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
4997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
5000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
5001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
5003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
5004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write LSB part of Memory Address */
5008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = hi2c->Memaddress;
5009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Reset Memaddress content */
5011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Memaddress = 0xFFFFFFFFU;
5012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TCR) != RESET) && \
5015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TCI) != RESET))
5016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
5018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
5020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
5022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, (uint16_t)hi2c->Devaddress, (uint8_t)hi2c->XferSize,
5023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                            I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
5024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
5026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
5028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, (uint16_t)hi2c->Devaddress, (uint8_t)hi2c->XferSize,
5029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                            I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
5030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wrong size Status regarding TCR flag event */
5035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
5037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TC) != RESET) && \
5040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TCI) != RESET))
5041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       direction = I2C_GENERATE_START_READ;
5045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
5048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 90


5049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
5050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
5052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, (uint16_t)hi2c->Devaddress, (uint8_t)hi2c->XferSize,
5053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_RELOAD_MODE, direction);
5054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
5058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to write and generate RESTART */
5060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, (uint16_t)hi2c->Devaddress, (uint8_t)hi2c->XferSize,
5061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_AUTOEND_MODE, direction);
5062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
5065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Nothing to do */
5067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && \
5070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_STOPI) != RESET))
5071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Master complete process */
5073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, tmpITFlags);
5074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
5077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
5080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
5081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
5083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
5084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
5088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
5089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
5090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
5091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                           uint32_t ITSources)
5092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
5093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
5094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process locked */
5097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
5098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check if STOPF is set */
5100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && \
5101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_STOPI) != RESET))
5102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Slave complete process */
5104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, tmpITFlags);
5105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 91


5106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && \
5108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NACKI) != RESET))
5109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check that I2C transfer finished */
5111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
5112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean XferCount == 0*/
5113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* So clear Flag NACKF only */
5114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
5115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME))
5117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Same action must be done for (tmpoptions == I2C_LAST_FRAME) which removed for
5118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            Warning[Pa134]: left and right operands are identical */
5119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call I2C Listen complete process */
5121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, tmpITFlags);
5122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAME)
5124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear NACK Flag */
5126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Flush TX register */
5129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
5130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Last Byte is Transmitted */
5132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
5133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
5134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
5136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear NACK Flag */
5138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
5144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear NACK Flag */
5145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
5148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
5151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
5153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITError(hi2c, hi2c->ErrorCode);
5154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && \
5158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_RXI) != RESET))
5159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
5161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Read data from RXDR */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 92


5163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
5166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
5167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
5169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
5170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && \
5173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
5174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
5176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITSlaveSeqCplt(hi2c);
5177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_ADDR) != RESET) && \
5180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
5181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, tmpITFlags);
5183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && \
5185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TXI) != RESET))
5186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
5188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
5189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check if all Data have already been sent */
5190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
5191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
5192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
5194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
5195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Increment Buffer pointer */
5197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->pBuffPtr++;
5198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
5200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
5201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
5205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Last Byte is Transmitted */
5207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
5208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
5209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
5213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Nothing to do */
5215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
5218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 93


5220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
5221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
5222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
5224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
5225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
5229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
5230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
5231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
5232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                             uint32_t ITSources)
5233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
5234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint16_t devaddress;
5235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
5236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Locked */
5238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
5239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && \
5241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NACKI) != RESET))
5242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear NACK Flag */
5244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set corresponding Error Code */
5247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
5250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
5251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
5252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
5253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Flush TX register */
5255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
5256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TCR) != RESET) && \
5258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TCI) != RESET))
5259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable TC interrupt */
5261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
5262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
5264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Recover Slave address */
5266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
5267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
5269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
5270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
5272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
5273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
5275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 94


5277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
5278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
5279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           xfermode = hi2c->XferOptions;
5280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
5281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
5282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
5283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           xfermode = I2C_AUTOEND_MODE;
5284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
5285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
5288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
5289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update XferCount value */
5291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
5292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable DMA Request */
5294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
5297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
5299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
5301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
5306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
5307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
5309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
5310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
5312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
5314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
5315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
5316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TC) != RESET) && \
5320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TCI) != RESET))
5321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
5323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
5325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
5327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
5328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
5329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Generate Stop */
5330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
5331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
5332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
5333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 95


5334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
5335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
5336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
5337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
5342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
5344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && \
5347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_STOPI) != RESET))
5348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Master complete process */
5350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
5351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
5353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Nothing to do */
5355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
5358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
5361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
5362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
5364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Memory Mode with DMA.
5365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
5369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
5370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
5371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Mem_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
5372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                          uint32_t ITSources)
5373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
5374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t direction = I2C_GENERATE_START_WRITE;
5375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Locked */
5377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
5378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && \
5380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NACKI) != RESET))
5381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear NACK Flag */
5383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set corresponding Error Code */
5386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
5389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
5390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 96


5391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
5392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Flush TX register */
5394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
5395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TXIS) != RESET) && \
5397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TXI) != RESET))
5398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Write LSB part of Memory Address */
5400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = hi2c->Memaddress;
5401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Reset Memaddress content */
5403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Memaddress = 0xFFFFFFFFU;
5404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TCR) != RESET) && \
5406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TCI) != RESET))
5407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable only Error interrupt */
5409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
5410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
5412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
5414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
5415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
5417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, (uint16_t)hi2c->Devaddress, (uint8_t)hi2c->XferSize,
5418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                            I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
5419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
5421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
5423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, (uint16_t)hi2c->Devaddress, (uint8_t)hi2c->XferSize,
5424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                            I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
5425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update XferCount value */
5428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
5429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable DMA Request */
5431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
5434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
5436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
5438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wrong size Status regarding TCR flag event */
5443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
5445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TC) != RESET) && \
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 97


5448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TCI) != RESET))
5449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       direction = I2C_GENERATE_START_READ;
5453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
5456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
5458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
5460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, (uint16_t)hi2c->Devaddress, (uint8_t)hi2c->XferSize,
5461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_RELOAD_MODE, direction);
5462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
5466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to write and generate RESTART */
5468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, (uint16_t)hi2c->Devaddress, (uint8_t)hi2c->XferSize,
5469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_AUTOEND_MODE, direction);
5470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update XferCount value */
5473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
5474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable DMA Request */
5476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
5479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
5483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && \
5486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_STOPI) != RESET))
5487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Master complete process */
5489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
5490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
5492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Nothing to do */
5494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
5497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
5500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
5501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
5503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
5504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 98


5505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
5508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
5509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
5510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
5511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                            uint32_t ITSources)
5512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
5513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
5514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
5515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
5516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process locked */
5518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
5519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check if STOPF is set */
5521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && \
5522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_STOPI) != RESET))
5523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Slave complete process */
5525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
5526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && \
5529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NACKI) != RESET))
5530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check that I2C transfer finished */
5532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
5533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean XferCount == 0 */
5534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* So clear Flag NACKF only */
5535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET) ||
5536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
5537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Split check of hdmarx, for MISRA compliance */
5539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
5540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET)
5542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
5543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if (I2C_GET_DMA_REMAIN_DATA(hi2c->hdmarx) == 0U)
5544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
5545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             treatdmanack = 1U;
5546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
5547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
5548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Split check of hdmatx, for MISRA compliance  */
5551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
5552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET)
5554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
5555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if (I2C_GET_DMA_REMAIN_DATA(hi2c->hdmatx) == 0U)
5556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
5557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             treatdmanack = 1U;
5558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
5559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
5560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 99


5562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (treatdmanack == 1U)
5563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME))
5565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Same action must be done for (tmpoptions == I2C_LAST_FRAME) which removed for
5566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****              Warning[Pa134]: left and right operands are identical */
5567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
5568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Call I2C Listen complete process */
5569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_ITListenCplt(hi2c, ITFlags);
5570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
5571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAM
5572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
5573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Clear NACK Flag */
5574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Flush TX register */
5577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_Flush_TXDR(hi2c);
5578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Last Byte is Transmitted */
5580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Call I2C Slave Sequential complete process */
5581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_ITSlaveSeqCplt(hi2c);
5582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
5583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
5584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
5585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Clear NACK Flag */
5586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
5588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
5590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
5592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear NACK Flag */
5593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Set ErrorCode corresponding to a Non-Acknowledge */
5596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Store current hi2c->State, solve MISRA2012-Rule-13.5 */
5599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         tmpstate = hi2c->State;
5600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
5602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
5603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
5604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
5605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
5607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN
5608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
5609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
5611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           else
5612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
5613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Do nothing */
5614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
5615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Call the corresponding callback to inform upper layer of End of Transfer */
5617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_ITError(hi2c, hi2c->ErrorCode);
5618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 100


5619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Only Clear NACK Flag, no DMA treatment is pending */
5624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_ADDR) != RESET) && \
5628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
5629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
5631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
5633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Nothing to do */
5635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
5638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
5641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
5642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
5644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
5645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
5654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
5655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
5656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                 uint16_t MemAddress, uint16_t MemAddSize, uint32_t 
5657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                 uint32_t Tickstart)
5658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
5659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
5660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
5665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Memory Address */
5671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
5675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 101


5676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
5683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Wait until TCR flag is set */
5690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
5691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
5693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
5696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
5697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
5699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
5700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
5709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
5710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
5711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                uint16_t MemAddress, uint16_t MemAddSize, uint32_t T
5712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                uint32_t Tickstart)
5713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
5714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
5715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
5720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Memory Address */
5726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
5730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 102


5733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
5738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Wait until TC flag is set */
5745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
5746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
5748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
5751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
5752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
5754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
5755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
5758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
5759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
5761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint8_t transferdirection;
5762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint16_t slaveaddrcode;
5763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint16_t ownadd1code;
5764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint16_t ownadd2code;
5765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(ITFlags);
5768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
5770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
5771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
5773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
5774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
5775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
5776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
5778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
5779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((slaveaddrcode & SLAVE_ADDR_MSK) == ((ownadd1code >> SLAVE_ADDR_SHIFT) & SLAVE_ADDR_MSK))
5781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
5783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->AddrEventCount++;
5784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
5785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
5786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Reset Address Event counter */
5787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
5788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Clear ADDR flag */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 103


5790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Process Unlocked */
5793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
5794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Call Slave Addr callback */
5796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
5799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
5802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
5804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
5805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
5806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
5808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
5811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
5812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call Slave Addr callback */
5814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
5817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
5820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
5822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
5823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
5824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
5825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
5828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call Slave Addr callback */
5831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
5834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
5837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Else clear address flag only */
5839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
5840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear ADDR flag */
5842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
5845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 104


5847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
5848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
5850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
5851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
5853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
5854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c)
5855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
5856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset I2C handle mode */
5857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
5860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
5861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts */
5868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
5871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback(hi2c);
5876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
5877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
5878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
5882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts */
5888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
5891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback(hi2c);
5896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
5897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
5898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
5901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
5903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 105


5904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
5906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
5907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c)
5908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
5909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset I2C handle mode */
5912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable DMA Request */
5918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable DMA Request */
5923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
5926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Do nothing */
5928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
5931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
5933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts */
5937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
5940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
5946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
5951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
5953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts */
5957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
5960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 106


5961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
5966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
5970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Nothing to do */
5972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
5974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
5976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Master complete process.
5977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
5980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
5981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
5983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmperror;
5984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __IO uint32_t tmpreg;
5986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Clear STOP Flag */
5988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
5990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
5991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
5996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
5998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
6000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Do nothing */
6004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
6007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
6008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset handle parameters */
6010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
6011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
6012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET)
6014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear NACK Flag */
6016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 107


6018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set acknowledge error code */
6019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Fetch Last receive data if any */
6023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) && (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET))
6024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Read data from RXDR */
6026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpreg = (uint8_t)hi2c->Instance->RXDR;
6027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     UNUSED(tmpreg);
6028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Flush TX register */
6031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
6032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
6034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
6035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
6037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) || (tmperror != HAL_I2C_ERROR_NONE))
6038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
6041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
6043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
6044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
6047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
6049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
6053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->MemTxCpltCallback(hi2c);
6058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
6059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
6060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
6063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
6067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->MasterTxCpltCallback(hi2c);
6072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
6073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
6074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 108


6075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
6078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
6079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
6082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
6084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
6088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->MemRxCpltCallback(hi2c);
6093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
6094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
6095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
6098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
6102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->MasterRxCpltCallback(hi2c);
6107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
6108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
6109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Nothing to do */
6115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
6120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
6122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
6123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
6125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
6127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
6128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
6129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Clear STOP Flag */
6131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 109


6132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
6134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
6135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
6137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
6138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
6140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
6142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
6143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Do nothing */
6147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Address Acknowledge */
6150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
6151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
6153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
6154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Flush TX register */
6156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
6157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
6159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
6160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable DMA Request */
6162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
6165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)I2C_GET_DMA_REMAIN_DATA(hi2c->hdmatx);
6167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
6170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable DMA Request */
6172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
6175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)I2C_GET_DMA_REMAIN_DATA(hi2c->hdmarx);
6177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Do nothing */
6182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Store Last receive data if any */
6185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET)
6186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
6188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 110


6189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Read data from RXDR */
6191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
6192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Increment Buffer pointer */
6194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr++;
6195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
6197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
6199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
6200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
6204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
6205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
6207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
6211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferISR = NULL;
6212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
6214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
6217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
6219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_LISTEN)
6220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call I2C Listen complete process */
6222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, tmpITFlags);
6223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
6226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the Sequential Complete callback, to inform upper layer of the end of Transfer */
6228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
6231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
6233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
6235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
6238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ListenCpltCallback(hi2c);
6240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
6241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
6242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
6245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 111


6246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
6249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
6251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
6256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
6257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
6258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
6264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
6266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
6271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
6272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
6273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
6279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
6281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
6282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
6284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset handle parameters */
6286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
6287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
6288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
6289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
6290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferISR = NULL;
6291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Store Last receive data if any */
6293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(ITFlags, I2C_FLAG_RXNE) != RESET)
6294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Read data from RXDR */
6296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
6297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Increment Buffer pointer */
6299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr++;
6300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
6302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 112


6303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
6304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
6305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
6307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable all Interrupts*/
6312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
6313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Clear NACK Flag */
6315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
6318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
6319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
6321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->ListenCpltCallback(hi2c);
6323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
6324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
6325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
6330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
6332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
6333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
6335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
6337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmppreviousstate;
6339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset handle parameters */
6341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
6342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
6343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
6344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Set new error code */
6346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
6347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Interrupts */
6349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_LISTEN)         ||
6350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
6351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
6352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
6354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
6355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
6357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
6358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
6359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 113


6360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable all interrupts */
6363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
6364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Flush TX register */
6366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
6367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If state is an abort treatment on going, don't change state */
6369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* This change will be do later */
6370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State != HAL_I2C_STATE_ABORT)
6371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
6373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
6374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Check if a STOPF is detected */
6376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
6377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
6378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
6379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
6380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
6383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear STOP Flag */
6385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
6387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
6390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
6393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   tmppreviousstate = hi2c->PreviousState;
6394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || \
6396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                  (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
6397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
6399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
6404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
6406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
6407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
6408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
6410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Abort DMA TX */
6413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
6414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
6415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call Directly XferAbortCallback function in case of error */
6416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 114


6417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
6418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
6420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
6422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
6425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((hi2c->hdmarx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_RX) || \
6426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                       (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
6427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
6429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
6434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
6436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
6437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
6438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
6440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Abort DMA RX */
6443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
6444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
6445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
6446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
6447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
6448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
6450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
6452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TreatErrorCallback(hi2c);
6457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Error callback treatment.
6462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
6464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c)
6466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
6468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
6471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
6473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 115


6474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
6478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
6479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
6480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
6485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
6487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
6492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #else
6493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
6494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
6500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
6502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
6504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
  27              		.loc 1 6504 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
6505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
6506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
6507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
  32              		.loc 1 6507 3 view .LVU1
  33              		.loc 1 6507 7 is_stmt 0 view .LVU2
  34 0000 0268     		ldr	r2, [r0]
  35 0002 9369     		ldr	r3, [r2, #24]
  36              		.loc 1 6507 6 view .LVU3
  37 0004 9B07     		lsls	r3, r3, #30
  38 0006 01D5     		bpl	.L2
6508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = 0x00U;
  39              		.loc 1 6509 5 is_stmt 1 view .LVU4
  40              		.loc 1 6509 26 is_stmt 0 view .LVU5
  41 0008 0023     		movs	r3, #0
  42 000a 9362     		str	r3, [r2, #40]
  43              	.L2:
6510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Flush TX register if not empty */
6513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 116


  44              		.loc 1 6513 3 is_stmt 1 view .LVU6
  45              		.loc 1 6513 7 is_stmt 0 view .LVU7
  46 000c 0368     		ldr	r3, [r0]
  47 000e 9A69     		ldr	r2, [r3, #24]
  48              		.loc 1 6513 6 view .LVU8
  49 0010 D207     		lsls	r2, r2, #31
  50 0012 03D4     		bmi	.L1
6514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
  51              		.loc 1 6515 5 is_stmt 1 view .LVU9
  52 0014 9A69     		ldr	r2, [r3, #24]
  53 0016 0121     		movs	r1, #1
  54 0018 0A43     		orrs	r2, r1
  55 001a 9A61     		str	r2, [r3, #24]
  56              	.L1:
6516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
  57              		.loc 1 6517 1 is_stmt 0 view .LVU10
  58              		@ sp needed
  59 001c 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE105:
  63              		.section	.text.I2C_TransferConfig,"ax",%progbits
  64              		.align	1
  65              		.syntax unified
  66              		.code	16
  67              		.thumb_func
  69              	I2C_TransferConfig:
  70              	.LVL1:
  71              	.LFB117:
6518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
6521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hdma DMA handle
6522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
6523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
6525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Derogation MISRAC2012-Rule-11.5 */
6527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
6528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable DMA Request */
6530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable STOP interrupt */
6536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
6537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
6539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update Buffer pointer */
6542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the XferSize to transfer */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 117


6545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
6548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
6550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable the DMA channel */
6555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR,
6556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          hi2c->XferSize) != HAL_OK)
6557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
6562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable TC interrupts */
6564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
6572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hdma DMA handle
6573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
6574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
6576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Derogation MISRAC2012-Rule-11.5 */
6578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
6579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
6582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable DMA Request */
6584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Last Byte is Transmitted */
6587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
6601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hdma DMA handle
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 118


6602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
6603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
6605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Derogation MISRAC2012-Rule-11.5 */
6607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
6608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable DMA Request */
6610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable STOP interrupt */
6616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
6617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
6619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update Buffer pointer */
6622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the XferSize to transfer */
6625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
6628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
6630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable the DMA channel */
6635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr,
6636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          hi2c->XferSize) != HAL_OK)
6637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
6642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable TC interrupts */
6644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
6652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hdma DMA handle
6653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
6654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
6656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Derogation MISRAC2012-Rule-11.5 */
6658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 119


6659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((I2C_GET_DMA_REMAIN_DATA(hi2c->hdmarx) == 0U) && \
6662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
6663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable DMA Request */
6665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
6671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
6681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param hdma DMA handle
6682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
6683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
6685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Derogation MISRAC2012-Rule-11.5 */
6687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
6688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Acknowledge */
6690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
6691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
6693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
6699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
6700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param hdma DMA handle.
6701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
6702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
6704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Derogation MISRAC2012-Rule-11.5 */
6706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
6707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
6709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
6712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 120


6716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_TreatErrorCallback(hi2c);
6719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout. It waits
6724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                until a flag is no longer in the specified status.
6725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
6728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Status The actual Flag status (SET or RESET).
6729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
6732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
6734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                     uint32_t Timeout, uint32_t Tickstart)
6735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
6737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check for the Timeout */
6739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
6743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
6744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
6745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
6747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
6748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Process Unlocked */
6750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
6751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
6752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
6753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
6754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
6757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
6761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
6766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
6768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                         uint32_t Tickstart)
6769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
6771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check if an error is detected */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 121


6773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
6774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
6776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check for the Timeout */
6779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
6783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
6784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
6785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
6787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
6788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Process Unlocked */
6790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
6791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
6793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
6794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
6795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
6798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
6802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
6807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
6809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                         uint32_t Tickstart)
6810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check if an error is detected */
6814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
6815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
6817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check for the Timeout */
6820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
6823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
6824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
6829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 122


6830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
6832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
6833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
6836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
6840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
6845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
6847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                                         uint32_t Tickstart)
6848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
6850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check if an error is detected */
6852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
6853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
6855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check if a STOPF is detected */
6858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
6859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Check if an RXNE is pending */
6861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Store Last receive data if any */
6862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
6863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
6864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Return HAL_OK */
6865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* The Reading of data from RXDR will be done in caller function */
6866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_OK;
6867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
6868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
6869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
6870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
6871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
6872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->ErrorCode = HAL_I2C_ERROR_AF;
6874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
6875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
6876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
6877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
6878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
6879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear STOP Flag */
6881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear Configuration Register 2 */
6884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_RESET_CR2(hi2c);
6885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 123


6887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
6890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
6893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
6894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check for the Timeout */
6897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
6900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
6901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
6905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
6908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
6909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
6912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
6913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
6915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles errors detection during an I2C Communication.
6916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
6921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
6922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsErrorOccurred(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Ti
6923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
6924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
6925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itflag   = hi2c->Instance->ISR;
6926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t error_code = 0;
6927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = Tickstart;
6928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmp1;
6929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_I2C_ModeTypeDef tmp2;
6930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
6932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear NACKF Flag */
6934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOP Flag is set or timeout occurred */
6937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
6938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
6939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Check for the Timeout */
6941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (Timeout != HAL_MAX_DELAY)
6942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
6943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 124


6944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
6945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
6946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           tmp2 = hi2c->Mode;
6947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* In case of I2C still busy, try to regenerate a STOP manually */
6949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
6950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               (tmp1 != I2C_CR2_STOP) && \
6951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               (tmp2 != HAL_I2C_MODE_SLAVE))
6952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
6953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Generate Stop */
6954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->Instance->CR2 |= I2C_CR2_STOP;
6955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Update Tick with new reference */
6957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             tickstart = HAL_GetTick();
6958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
6959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
6962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Check for the Timeout */
6963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
6964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             {
6965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               error_code |= HAL_I2C_ERROR_TIMEOUT;
6966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               status = HAL_ERROR;
6968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               break;
6970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             }
6971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
6972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
6973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
6974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* In case STOP Flag is detected, clear it */
6977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (status == HAL_OK)
6978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
6979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear STOP Flag */
6980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
6982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     error_code |= HAL_I2C_ERROR_AF;
6984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     status = HAL_ERROR;
6986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
6987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Refresh Content of Status register */
6989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   itflag = hi2c->Instance->ISR;
6990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Then verify if an additional errors occurs */
6992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check if a Bus error occurred */
6993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
6994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
6995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     error_code |= HAL_I2C_ERROR_BERR;
6996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
6997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear BERR flag */
6998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
6999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     status = HAL_ERROR;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 125


7001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check if an Over-Run/Under-Run error occurred */
7004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
7005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     error_code |= HAL_I2C_ERROR_OVR;
7007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear OVR flag */
7009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
7010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     status = HAL_ERROR;
7012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check if an Arbitration Loss error occurred */
7015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
7016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     error_code |= HAL_I2C_ERROR_ARLO;
7018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear ARLO flag */
7020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
7021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     status = HAL_ERROR;
7023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (status != HAL_OK)
7026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Flush TX register */
7028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
7029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
7031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
7032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= error_code;
7034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
7035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
7036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
7038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
7039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return status;
7042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
7043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
7045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
7046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
7047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
7048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
7049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
7050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
7051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *   This parameter can be one of the following values:
7052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
7053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
7054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
7055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
7056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *   This parameter can be one of the following values:
7057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 126


7058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
7059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
7060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
7061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
7062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
7063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
7064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                uint32_t Request)
7065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
  72              		.loc 1 7065 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 4, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		.loc 1 7065 1 is_stmt 0 view .LVU12
  77 0000 10B5     		push	{r4, lr}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 4, -8
  81              		.cfi_offset 14, -4
7066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
7067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  82              		.loc 1 7067 3 is_stmt 1 view .LVU13
7068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
  83              		.loc 1 7068 3 view .LVU14
7069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
  84              		.loc 1 7069 3 view .LVU15
7070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
7072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
  85              		.loc 1 7072 3 view .LVU16
  86              		.loc 1 7072 52 is_stmt 0 view .LVU17
  87 0002 8905     		lsls	r1, r1, #22
  88              	.LVL2:
  89              		.loc 1 7072 52 view .LVU18
  90 0004 890D     		lsrs	r1, r1, #22
7073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
  91              		.loc 1 7073 70 view .LVU19
  92 0006 1204     		lsls	r2, r2, #16
  93              	.LVL3:
7072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
  94              		.loc 1 7072 68 view .LVU20
  95 0008 1143     		orrs	r1, r2
  96              		.loc 1 7073 88 view .LVU21
  97 000a 1943     		orrs	r1, r3
7072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
  98              		.loc 1 7072 19 view .LVU22
  99 000c 029B     		ldr	r3, [sp, #8]
 100              	.LVL4:
7072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 101              		.loc 1 7072 19 view .LVU23
 102 000e 1943     		orrs	r1, r3
7072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 103              		.loc 1 7072 12 view .LVU24
 104 0010 4900     		lsls	r1, r1, #1
 105 0012 4908     		lsrs	r1, r1, #1
 106              	.LVL5:
7074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));
7075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 127


7076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* update CR2 register */
7077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CR2, \
 107              		.loc 1 7077 3 is_stmt 1 view .LVU25
 108 0014 0468     		ldr	r4, [r0]
 109 0016 6268     		ldr	r2, [r4, #4]
 110 0018 5B0D     		lsrs	r3, r3, #21
 111 001a 8020     		movs	r0, #128
 112              	.LVL6:
 113              		.loc 1 7077 3 is_stmt 0 view .LVU26
 114 001c C000     		lsls	r0, r0, #3
 115 001e 0340     		ands	r3, r0
 116 0020 0348     		ldr	r0, .L7
 117 0022 0343     		orrs	r3, r0
 118 0024 9A43     		bics	r2, r3
 119 0026 1300     		movs	r3, r2
 120 0028 0B43     		orrs	r3, r1
 121 002a 6360     		str	r3, [r4, #4]
7078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****              ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
7079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
7080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                I2C_CR2_START | I2C_CR2_STOP)), tmp);
7081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 122              		.loc 1 7081 1 view .LVU27
 123              		@ sp needed
 124 002c 10BD     		pop	{r4, pc}
 125              	.L8:
 126 002e C046     		.align	2
 127              	.L7:
 128 0030 FF63FF03 		.word	67068927
 129              		.cfi_endproc
 130              	.LFE117:
 132              		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 133              		.align	1
 134              		.syntax unified
 135              		.code	16
 136              		.thumb_func
 138              	I2C_Enable_IRQ:
 139              	.LVL7:
 140              	.LFB118:
7082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
7084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
7085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
7086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
7087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
7088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
7089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
7090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
7091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 141              		.loc 1 7091 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		.loc 1 7091 1 is_stmt 0 view .LVU29
 146 0000 10B5     		push	{r4, lr}
 147              	.LCFI1:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 128


 150              		.cfi_offset 14, -4
7092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 151              		.loc 1 7092 3 is_stmt 1 view .LVU30
 152              	.LVL8:
7093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->XferISR != I2C_Master_ISR_DMA) && \
 153              		.loc 1 7094 3 view .LVU31
 154              		.loc 1 7094 12 is_stmt 0 view .LVU32
 155 0002 426B     		ldr	r2, [r0, #52]
 156              		.loc 1 7094 6 view .LVU33
 157 0004 224B     		ldr	r3, .L31
 158 0006 9A42     		cmp	r2, r3
 159 0008 1DD0     		beq	.L10
 160              		.loc 1 7094 45 discriminator 1 view .LVU34
 161 000a 224B     		ldr	r3, .L31+4
 162 000c 9A42     		cmp	r2, r3
 163 000e 1AD0     		beq	.L10
7095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (hi2c->XferISR != I2C_Slave_ISR_DMA) && \
 164              		.loc 1 7095 44 view .LVU35
 165 0010 214B     		ldr	r3, .L31+8
 166 0012 9A42     		cmp	r2, r3
 167 0014 17D0     		beq	.L10
7096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (hi2c->XferISR != I2C_Mem_ISR_DMA))
7097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 168              		.loc 1 7098 5 is_stmt 1 view .LVU36
 169              		.loc 1 7098 49 is_stmt 0 view .LVU37
 170 0016 0BB2     		sxth	r3, r1
 171              		.loc 1 7098 8 view .LVU38
 172 0018 002B     		cmp	r3, #0
 173 001a 0FDB     		blt	.L21
7092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 174              		.loc 1 7092 12 view .LVU39
 175 001c 0023     		movs	r3, #0
 176              	.L11:
 177              	.LVL9:
7099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
7101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
7102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 178              		.loc 1 7104 5 is_stmt 1 view .LVU40
 179              		.loc 1 7104 8 is_stmt 0 view .LVU41
 180 001e CA07     		lsls	r2, r1, #31
 181 0020 01D5     		bpl	.L12
7105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
7107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 182              		.loc 1 7107 7 is_stmt 1 view .LVU42
 183              		.loc 1 7107 14 is_stmt 0 view .LVU43
 184 0022 F222     		movs	r2, #242
 185 0024 1343     		orrs	r3, r2
 186              	.LVL10:
 187              	.L12:
7108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 129


7110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 188              		.loc 1 7110 5 is_stmt 1 view .LVU44
 189              		.loc 1 7110 8 is_stmt 0 view .LVU45
 190 0026 8A07     		lsls	r2, r1, #30
 191 0028 01D5     		bpl	.L13
7111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
7113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 192              		.loc 1 7113 7 is_stmt 1 view .LVU46
 193              		.loc 1 7113 14 is_stmt 0 view .LVU47
 194 002a F422     		movs	r2, #244
 195 002c 1343     		orrs	r3, r2
 196              	.LVL11:
 197              	.L13:
7114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_ERROR_IT)
 198              		.loc 1 7116 5 is_stmt 1 view .LVU48
 199              		.loc 1 7116 8 is_stmt 0 view .LVU49
 200 002e 1029     		cmp	r1, #16
 201 0030 06D0     		beq	.L27
 202              	.L14:
7117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
7119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
7120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
 203              		.loc 1 7122 5 is_stmt 1 view .LVU50
 204              		.loc 1 7122 8 is_stmt 0 view .LVU51
 205 0032 2029     		cmp	r1, #32
 206 0034 1CD1     		bne	.L15
7123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable STOP interrupts */
7125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 207              		.loc 1 7125 7 is_stmt 1 view .LVU52
 208              		.loc 1 7125 14 is_stmt 0 view .LVU53
 209 0036 2022     		movs	r2, #32
 210 0038 1343     		orrs	r3, r2
 211              	.LVL12:
 212              		.loc 1 7125 14 view .LVU54
 213 003a 19E0     		b	.L15
 214              	.LVL13:
 215              	.L21:
7101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 216              		.loc 1 7101 14 view .LVU55
 217 003c B823     		movs	r3, #184
 218 003e EEE7     		b	.L11
 219              	.LVL14:
 220              	.L27:
7119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 221              		.loc 1 7119 7 is_stmt 1 view .LVU56
7119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 222              		.loc 1 7119 14 is_stmt 0 view .LVU57
 223 0040 9022     		movs	r2, #144
 224 0042 1343     		orrs	r3, r2
 225              	.LVL15:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 130


7119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 226              		.loc 1 7119 14 view .LVU58
 227 0044 F5E7     		b	.L14
 228              	.LVL16:
 229              	.L10:
7126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
7130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 230              		.loc 1 7131 5 is_stmt 1 view .LVU59
 231              		.loc 1 7131 49 is_stmt 0 view .LVU60
 232 0046 0BB2     		sxth	r3, r1
 233              		.loc 1 7131 8 view .LVU61
 234 0048 002B     		cmp	r3, #0
 235 004a 16DB     		blt	.L22
7092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 236              		.loc 1 7092 12 view .LVU62
 237 004c 0023     		movs	r3, #0
 238              	.L16:
 239              	.LVL17:
7132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
7134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
7135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 240              		.loc 1 7137 5 is_stmt 1 view .LVU63
 241              		.loc 1 7137 8 is_stmt 0 view .LVU64
 242 004e CC07     		lsls	r4, r1, #31
 243 0050 01D5     		bpl	.L17
7138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
7140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 244              		.loc 1 7140 7 is_stmt 1 view .LVU65
 245              		.loc 1 7140 14 is_stmt 0 view .LVU66
 246 0052 F224     		movs	r4, #242
 247 0054 2343     		orrs	r3, r4
 248              	.LVL18:
 249              	.L17:
7141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 250              		.loc 1 7143 5 is_stmt 1 view .LVU67
 251              		.loc 1 7143 8 is_stmt 0 view .LVU68
 252 0056 8C07     		lsls	r4, r1, #30
 253 0058 01D5     		bpl	.L18
7144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
7146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 254              		.loc 1 7146 7 is_stmt 1 view .LVU69
 255              		.loc 1 7146 14 is_stmt 0 view .LVU70
 256 005a F424     		movs	r4, #244
 257 005c 2343     		orrs	r3, r4
 258              	.LVL19:
 259              	.L18:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 131


7147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_ERROR_IT)
 260              		.loc 1 7149 5 is_stmt 1 view .LVU71
 261              		.loc 1 7149 8 is_stmt 0 view .LVU72
 262 005e 1029     		cmp	r1, #16
 263 0060 0DD0     		beq	.L28
 264              	.L19:
7150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
7152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
7153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
 265              		.loc 1 7155 5 is_stmt 1 view .LVU73
 266              		.loc 1 7155 8 is_stmt 0 view .LVU74
 267 0062 2029     		cmp	r1, #32
 268 0064 0ED0     		beq	.L29
 269              	.L20:
7156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable STOP interrupts */
7158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= (I2C_IT_STOPI | I2C_IT_TCI);
7159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->XferISR != I2C_Mem_ISR_DMA) && (InterruptRequest == I2C_XFER_RELOAD_IT))
 270              		.loc 1 7161 5 is_stmt 1 view .LVU75
 271              		.loc 1 7161 8 is_stmt 0 view .LVU76
 272 0066 0C4C     		ldr	r4, .L31+8
 273 0068 A242     		cmp	r2, r4
 274 006a 01D0     		beq	.L15
 275              		.loc 1 7161 44 discriminator 1 view .LVU77
 276 006c 4029     		cmp	r1, #64
 277 006e 0CD0     		beq	.L30
 278              	.L15:
7162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable TC interrupts */
7164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
7165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Enable interrupts only at the end */
7169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
7170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* all interrupts requested done */
7171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 279              		.loc 1 7171 3 is_stmt 1 view .LVU78
 280 0070 0168     		ldr	r1, [r0]
 281              	.LVL20:
 282              		.loc 1 7171 3 is_stmt 0 view .LVU79
 283 0072 0A68     		ldr	r2, [r1]
 284 0074 1343     		orrs	r3, r2
 285              	.LVL21:
 286              		.loc 1 7171 3 view .LVU80
 287 0076 0B60     		str	r3, [r1]
7172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 288              		.loc 1 7172 1 view .LVU81
 289              		@ sp needed
 290 0078 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 132


 291              	.LVL22:
 292              	.L22:
7134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 293              		.loc 1 7134 14 view .LVU82
 294 007a B823     		movs	r3, #184
 295 007c E7E7     		b	.L16
 296              	.LVL23:
 297              	.L28:
7152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 298              		.loc 1 7152 7 is_stmt 1 view .LVU83
7152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 299              		.loc 1 7152 14 is_stmt 0 view .LVU84
 300 007e 9024     		movs	r4, #144
 301 0080 2343     		orrs	r3, r4
 302              	.LVL24:
7152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 303              		.loc 1 7152 14 view .LVU85
 304 0082 EEE7     		b	.L19
 305              	.L29:
7158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 306              		.loc 1 7158 7 is_stmt 1 view .LVU86
7158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 307              		.loc 1 7158 14 is_stmt 0 view .LVU87
 308 0084 6024     		movs	r4, #96
 309 0086 2343     		orrs	r3, r4
 310              	.LVL25:
7158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 311              		.loc 1 7158 14 view .LVU88
 312 0088 EDE7     		b	.L20
 313              	.L30:
7164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 314              		.loc 1 7164 7 is_stmt 1 view .LVU89
7164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 315              		.loc 1 7164 14 is_stmt 0 view .LVU90
 316 008a 4022     		movs	r2, #64
 317 008c 1343     		orrs	r3, r2
 318              	.LVL26:
7164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 319              		.loc 1 7164 14 view .LVU91
 320 008e EFE7     		b	.L15
 321              	.L32:
 322              		.align	2
 323              	.L31:
 324 0090 00000000 		.word	I2C_Master_ISR_DMA
 325 0094 00000000 		.word	I2C_Slave_ISR_DMA
 326 0098 00000000 		.word	I2C_Mem_ISR_DMA
 327              		.cfi_endproc
 328              	.LFE118:
 330              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
 331              		.align	1
 332              		.syntax unified
 333              		.code	16
 334              		.thumb_func
 336              	I2C_Disable_IRQ:
 337              	.LVL27:
 338              	.LFB119:
7173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 133


7174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
7175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
7176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
7177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
7178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
7179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
7180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
7181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
7182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 339              		.loc 1 7182 1 is_stmt 1 view -0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		.loc 1 7182 1 is_stmt 0 view .LVU93
 344 0000 30B5     		push	{r4, r5, lr}
 345              	.LCFI2:
 346              		.cfi_def_cfa_offset 12
 347              		.cfi_offset 4, -12
 348              		.cfi_offset 5, -8
 349              		.cfi_offset 14, -4
7183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 350              		.loc 1 7183 3 is_stmt 1 view .LVU94
 351              	.LVL28:
7184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 352              		.loc 1 7185 3 view .LVU95
 353              		.loc 1 7185 6 is_stmt 0 view .LVU96
 354 0002 CB07     		lsls	r3, r1, #31
 355 0004 09D5     		bpl	.L40
7186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
7188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
 356              		.loc 1 7188 5 is_stmt 1 view .LVU97
 357              	.LVL29:
7189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 358              		.loc 1 7190 5 view .LVU98
 359              		.loc 1 7190 24 is_stmt 0 view .LVU99
 360 0006 4123     		movs	r3, #65
 361 0008 C35C     		ldrb	r3, [r0, r3]
 362              		.loc 1 7190 8 view .LVU100
 363 000a 2822     		movs	r2, #40
 364 000c 1340     		ands	r3, r2
 365 000e 282B     		cmp	r3, #40
 366 0010 01D0     		beq	.L44
7191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
7193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 367              		.loc 1 7193 14 view .LVU101
 368 0012 F223     		movs	r3, #242
 369 0014 02E0     		b	.L34
 370              	.L44:
7188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 371              		.loc 1 7188 12 view .LVU102
 372 0016 1A33     		adds	r3, r3, #26
 373 0018 00E0     		b	.L34
 374              	.LVL30:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 134


 375              	.L40:
7183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 376              		.loc 1 7183 12 view .LVU103
 377 001a 0023     		movs	r3, #0
 378              	.LVL31:
 379              	.L34:
7194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 380              		.loc 1 7197 3 is_stmt 1 view .LVU104
 381              		.loc 1 7197 6 is_stmt 0 view .LVU105
 382 001c 8A07     		lsls	r2, r1, #30
 383 001e 09D5     		bpl	.L35
7198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
7200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 384              		.loc 1 7200 5 is_stmt 1 view .LVU106
 385              		.loc 1 7200 12 is_stmt 0 view .LVU107
 386 0020 4424     		movs	r4, #68
 387 0022 1C43     		orrs	r4, r3
 388              	.LVL32:
7201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 389              		.loc 1 7202 5 is_stmt 1 view .LVU108
 390              		.loc 1 7202 24 is_stmt 0 view .LVU109
 391 0024 4122     		movs	r2, #65
 392 0026 825C     		ldrb	r2, [r0, r2]
 393              		.loc 1 7202 8 view .LVU110
 394 0028 2825     		movs	r5, #40
 395 002a 2A40     		ands	r2, r5
 396 002c 282A     		cmp	r2, #40
 397 002e 0FD0     		beq	.L42
7203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
7204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
7205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 398              		.loc 1 7205 7 is_stmt 1 view .LVU111
 399              		.loc 1 7205 14 is_stmt 0 view .LVU112
 400 0030 F422     		movs	r2, #244
 401 0032 1343     		orrs	r3, r2
 402              	.LVL33:
 403              	.L35:
7206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
7207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 404              		.loc 1 7209 3 is_stmt 1 view .LVU113
 405              		.loc 1 7209 47 is_stmt 0 view .LVU114
 406 0034 0AB2     		sxth	r2, r1
 407              		.loc 1 7209 6 view .LVU115
 408 0036 002A     		cmp	r2, #0
 409 0038 0CDB     		blt	.L45
 410              	.L36:
7210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
7212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
7213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 135


7214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_ERROR_IT)
 411              		.loc 1 7215 3 is_stmt 1 view .LVU116
 412              		.loc 1 7215 6 is_stmt 0 view .LVU117
 413 003a 1029     		cmp	r1, #16
 414 003c 0DD0     		beq	.L46
 415              	.L37:
7216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
7218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
7219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_CPLT_IT)
 416              		.loc 1 7221 3 is_stmt 1 view .LVU118
 417              		.loc 1 7221 6 is_stmt 0 view .LVU119
 418 003e 2029     		cmp	r1, #32
 419 0040 0ED0     		beq	.L47
 420              	.L38:
7222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable STOP interrupts */
7224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
7225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_RELOAD_IT)
 421              		.loc 1 7227 3 is_stmt 1 view .LVU120
 422              		.loc 1 7227 6 is_stmt 0 view .LVU121
 423 0042 4029     		cmp	r1, #64
 424 0044 0FD0     		beq	.L48
 425              	.L39:
7228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable TC interrupts */
7230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
7231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable interrupts only at the end */
7234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
7235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* all disable interrupts request are not done */
7236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 426              		.loc 1 7236 3 is_stmt 1 view .LVU122
 427 0046 0168     		ldr	r1, [r0]
 428              	.LVL34:
 429              		.loc 1 7236 3 is_stmt 0 view .LVU123
 430 0048 0A68     		ldr	r2, [r1]
 431 004a 9A43     		bics	r2, r3
 432 004c 0A60     		str	r2, [r1]
7237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 433              		.loc 1 7237 1 view .LVU124
 434              		@ sp needed
 435 004e 30BD     		pop	{r4, r5, pc}
 436              	.LVL35:
 437              	.L42:
7200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 438              		.loc 1 7200 12 view .LVU125
 439 0050 2300     		movs	r3, r4
 440 0052 EFE7     		b	.L35
 441              	.LVL36:
 442              	.L45:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 136


7212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 443              		.loc 1 7212 5 is_stmt 1 view .LVU126
7212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 444              		.loc 1 7212 12 is_stmt 0 view .LVU127
 445 0054 B822     		movs	r2, #184
 446 0056 1343     		orrs	r3, r2
 447              	.LVL37:
7212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 448              		.loc 1 7212 12 view .LVU128
 449 0058 EFE7     		b	.L36
 450              	.L46:
7218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 451              		.loc 1 7218 5 is_stmt 1 view .LVU129
7218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 452              		.loc 1 7218 12 is_stmt 0 view .LVU130
 453 005a 9022     		movs	r2, #144
 454 005c 1343     		orrs	r3, r2
 455              	.LVL38:
7218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 456              		.loc 1 7218 12 view .LVU131
 457 005e EEE7     		b	.L37
 458              	.L47:
7224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 459              		.loc 1 7224 5 is_stmt 1 view .LVU132
7224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 460              		.loc 1 7224 12 is_stmt 0 view .LVU133
 461 0060 2022     		movs	r2, #32
 462 0062 1343     		orrs	r3, r2
 463              	.LVL39:
7224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 464              		.loc 1 7224 12 view .LVU134
 465 0064 EDE7     		b	.L38
 466              	.L48:
7230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 467              		.loc 1 7230 5 is_stmt 1 view .LVU135
7230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 468              		.loc 1 7230 12 is_stmt 0 view .LVU136
 469 0066 4022     		movs	r2, #64
 470 0068 1343     		orrs	r3, r2
 471              	.LVL40:
7230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 472              		.loc 1 7230 12 view .LVU137
 473 006a ECE7     		b	.L39
 474              		.cfi_endproc
 475              	.LFE119:
 477              		.section	.text.I2C_ConvertOtherXferOptions,"ax",%progbits
 478              		.align	1
 479              		.syntax unified
 480              		.code	16
 481              		.thumb_func
 483              	I2C_ConvertOtherXferOptions:
 484              	.LVL41:
 485              	.LFB120:
7238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
7239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
7240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Convert I2Cx OTHER_xxx XferOptions to functional XferOptions.
7241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 137


7242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
7243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
7244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
7245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 486              		.loc 1 7245 1 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		@ link register save eliminated.
7246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* if user set XferOptions to I2C_OTHER_FRAME            */
7247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition */
7248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_FRAME                    */
7249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->XferOptions == I2C_OTHER_FRAME)
 491              		.loc 1 7249 3 view .LVU139
 492              		.loc 1 7249 11 is_stmt 0 view .LVU140
 493 0000 C36A     		ldr	r3, [r0, #44]
 494              		.loc 1 7249 6 view .LVU141
 495 0002 AA2B     		cmp	r3, #170
 496 0004 05D0     		beq	.L52
7250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_FRAME;
7252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
7254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition    */
7255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* then generate a stop condition at the end of transfer    */
7256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
7257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 497              		.loc 1 7257 8 is_stmt 1 view .LVU142
 498              		.loc 1 7257 16 is_stmt 0 view .LVU143
 499 0006 C26A     		ldr	r2, [r0, #44]
 500              		.loc 1 7257 11 view .LVU144
 501 0008 AA23     		movs	r3, #170
 502 000a 1B02     		lsls	r3, r3, #8
 503 000c 9A42     		cmp	r2, r3
 504 000e 03D0     		beq	.L53
 505              	.L49:
7258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
7260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
7262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
7263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Nothing to do */
7264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
7265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 506              		.loc 1 7265 1 view .LVU145
 507              		@ sp needed
 508 0010 7047     		bx	lr
 509              	.L52:
7251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 510              		.loc 1 7251 5 is_stmt 1 view .LVU146
7251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 511              		.loc 1 7251 23 is_stmt 0 view .LVU147
 512 0012 0023     		movs	r3, #0
 513 0014 C362     		str	r3, [r0, #44]
 514 0016 FBE7     		b	.L49
 515              	.L53:
7259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 138


 516              		.loc 1 7259 5 is_stmt 1 view .LVU148
7259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 517              		.loc 1 7259 23 is_stmt 0 view .LVU149
 518 0018 8023     		movs	r3, #128
 519 001a 9B04     		lsls	r3, r3, #18
 520 001c C362     		str	r3, [r0, #44]
7264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 521              		.loc 1 7264 3 is_stmt 1 view .LVU150
 522              		.loc 1 7265 1 is_stmt 0 view .LVU151
 523 001e F7E7     		b	.L49
 524              		.cfi_endproc
 525              	.LFE120:
 527              		.section	.text.I2C_IsErrorOccurred,"ax",%progbits
 528              		.align	1
 529              		.syntax unified
 530              		.code	16
 531              		.thumb_func
 533              	I2C_IsErrorOccurred:
 534              	.LVL42:
 535              	.LFB116:
6923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 536              		.loc 1 6923 1 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
6923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 540              		.loc 1 6923 1 is_stmt 0 view .LVU153
 541 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 542              	.LCFI3:
 543              		.cfi_def_cfa_offset 20
 544              		.cfi_offset 4, -20
 545              		.cfi_offset 5, -16
 546              		.cfi_offset 6, -12
 547              		.cfi_offset 7, -8
 548              		.cfi_offset 14, -4
 549 0002 C646     		mov	lr, r8
 550 0004 00B5     		push	{lr}
 551              	.LCFI4:
 552              		.cfi_def_cfa_offset 24
 553              		.cfi_offset 8, -24
 554 0006 0400     		movs	r4, r0
 555 0008 0D00     		movs	r5, r1
 556 000a 1700     		movs	r7, r2
6924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itflag   = hi2c->Instance->ISR;
 557              		.loc 1 6924 3 is_stmt 1 view .LVU154
 558              	.LVL43:
6925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t error_code = 0;
 559              		.loc 1 6925 3 view .LVU155
6925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t error_code = 0;
 560              		.loc 1 6925 27 is_stmt 0 view .LVU156
 561 000c 0168     		ldr	r1, [r0]
 562              	.LVL44:
6925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t error_code = 0;
 563              		.loc 1 6925 12 view .LVU157
 564 000e 8B69     		ldr	r3, [r1, #24]
 565              	.LVL45:
6926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = Tickstart;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 139


 566              		.loc 1 6926 3 is_stmt 1 view .LVU158
6927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmp1;
 567              		.loc 1 6927 3 view .LVU159
6928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_I2C_ModeTypeDef tmp2;
 568              		.loc 1 6928 3 view .LVU160
6929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 569              		.loc 1 6929 3 view .LVU161
6931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 570              		.loc 1 6931 3 view .LVU162
6931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 571              		.loc 1 6931 7 is_stmt 0 view .LVU163
 572 0010 1022     		movs	r2, #16
 573              	.LVL46:
6931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 574              		.loc 1 6931 7 view .LVU164
 575 0012 1600     		movs	r6, r2
 576 0014 1E40     		ands	r6, r3
6931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 577              		.loc 1 6931 6 view .LVU165
 578 0016 1A42     		tst	r2, r3
 579 0018 00D1     		bne	.LCB570
 580 001a 75E0     		b	.L71	@long jump
 581              	.LCB570:
6934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 582              		.loc 1 6934 5 is_stmt 1 view .LVU166
 583 001c 1023     		movs	r3, #16
 584              	.LVL47:
6934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 585              		.loc 1 6934 5 is_stmt 0 view .LVU167
 586 001e CB61     		str	r3, [r1, #28]
6938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 587              		.loc 1 6938 5 is_stmt 1 view .LVU168
6926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = Tickstart;
 588              		.loc 1 6926 12 is_stmt 0 view .LVU169
 589 0020 0023     		movs	r3, #0
 590 0022 9846     		mov	r8, r3
6924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itflag   = hi2c->Instance->ISR;
 591              		.loc 1 6924 21 view .LVU170
 592 0024 0026     		movs	r6, #0
 593              	.LVL48:
 594              	.L57:
6938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 595              		.loc 1 6938 64 is_stmt 1 view .LVU171
6938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 596              		.loc 1 6938 13 is_stmt 0 view .LVU172
 597 0026 2068     		ldr	r0, [r4]
 598 0028 8369     		ldr	r3, [r0, #24]
6938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 599              		.loc 1 6938 64 view .LVU173
 600 002a 9B06     		lsls	r3, r3, #26
 601 002c 31D4     		bmi	.L63
6938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 602              		.loc 1 6938 64 discriminator 1 view .LVU174
 603 002e 002E     		cmp	r6, #0
 604 0030 2FD1     		bne	.L63
6941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 605              		.loc 1 6941 7 is_stmt 1 view .LVU175
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 140


6941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 606              		.loc 1 6941 10 is_stmt 0 view .LVU176
 607 0032 6B1C     		adds	r3, r5, #1
 608 0034 F7D0     		beq	.L57
6943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 609              		.loc 1 6943 9 is_stmt 1 view .LVU177
6943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 610              		.loc 1 6943 15 is_stmt 0 view .LVU178
 611 0036 FFF7FEFF 		bl	HAL_GetTick
 612              	.LVL49:
6943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 613              		.loc 1 6943 29 view .LVU179
 614 003a C01B     		subs	r0, r0, r7
6943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 615              		.loc 1 6943 12 view .LVU180
 616 003c A842     		cmp	r0, r5
 617 003e 01D8     		bhi	.L58
6943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 618              		.loc 1 6943 53 discriminator 1 view .LVU181
 619 0040 002D     		cmp	r5, #0
 620 0042 F0D1     		bne	.L57
 621              	.L58:
6945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           tmp2 = hi2c->Mode;
 622              		.loc 1 6945 11 is_stmt 1 view .LVU182
6945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           tmp2 = hi2c->Mode;
 623              		.loc 1 6945 33 is_stmt 0 view .LVU183
 624 0044 2168     		ldr	r1, [r4]
6945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           tmp2 = hi2c->Mode;
 625              		.loc 1 6945 43 view .LVU184
 626 0046 4B68     		ldr	r3, [r1, #4]
6945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           tmp2 = hi2c->Mode;
 627              		.loc 1 6945 16 view .LVU185
 628 0048 8022     		movs	r2, #128
 629 004a D201     		lsls	r2, r2, #7
 630 004c 1340     		ands	r3, r2
 631              	.LVL50:
6946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 632              		.loc 1 6946 11 is_stmt 1 view .LVU186
6946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 633              		.loc 1 6946 16 is_stmt 0 view .LVU187
 634 004e 4222     		movs	r2, #66
 635 0050 A25C     		ldrb	r2, [r4, r2]
 636 0052 D2B2     		uxtb	r2, r2
 637              	.LVL51:
6949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               (tmp1 != I2C_CR2_STOP) && \
 638              		.loc 1 6949 11 is_stmt 1 view .LVU188
6949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               (tmp1 != I2C_CR2_STOP) && \
 639              		.loc 1 6949 16 is_stmt 0 view .LVU189
 640 0054 8869     		ldr	r0, [r1, #24]
6949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               (tmp1 != I2C_CR2_STOP) && \
 641              		.loc 1 6949 14 view .LVU190
 642 0056 0004     		lsls	r0, r0, #16
 643 0058 03D5     		bpl	.L61
6949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               (tmp1 != I2C_CR2_STOP) && \
 644              		.loc 1 6949 66 discriminator 1 view .LVU191
 645 005a 002B     		cmp	r3, #0
 646 005c 01D1     		bne	.L61
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 141


6950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               (tmp2 != HAL_I2C_MODE_SLAVE))
 647              		.loc 1 6950 38 view .LVU192
 648 005e 202A     		cmp	r2, #32
 649 0060 0ED1     		bne	.L77
 650              	.LVL52:
 651              	.L61:
6960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
 652              		.loc 1 6960 59 is_stmt 1 view .LVU193
6960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
 653              		.loc 1 6960 18 is_stmt 0 view .LVU194
 654 0062 2368     		ldr	r3, [r4]
 655 0064 9B69     		ldr	r3, [r3, #24]
6960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
 656              		.loc 1 6960 59 view .LVU195
 657 0066 9B06     		lsls	r3, r3, #26
 658 0068 DDD4     		bmi	.L57
6963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             {
 659              		.loc 1 6963 13 is_stmt 1 view .LVU196
6963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             {
 660              		.loc 1 6963 18 is_stmt 0 view .LVU197
 661 006a FFF7FEFF 		bl	HAL_GetTick
 662              	.LVL53:
6963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             {
 663              		.loc 1 6963 32 view .LVU198
 664 006e C01B     		subs	r0, r0, r7
6963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             {
 665              		.loc 1 6963 16 view .LVU199
 666 0070 1928     		cmp	r0, #25
 667 0072 F6D9     		bls	.L61
6965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 668              		.loc 1 6965 15 is_stmt 1 view .LVU200
6965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 669              		.loc 1 6965 26 is_stmt 0 view .LVU201
 670 0074 2023     		movs	r3, #32
 671 0076 4246     		mov	r2, r8
 672 0078 1A43     		orrs	r2, r3
 673 007a 9046     		mov	r8, r2
 674              	.LVL54:
6967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 675              		.loc 1 6967 15 is_stmt 1 view .LVU202
6969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             }
 676              		.loc 1 6969 15 view .LVU203
6967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 677              		.loc 1 6967 22 is_stmt 0 view .LVU204
 678 007c 0126     		movs	r6, #1
6969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             }
 679              		.loc 1 6969 15 view .LVU205
 680 007e D2E7     		b	.L57
 681              	.LVL55:
 682              	.L77:
6954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 683              		.loc 1 6954 13 is_stmt 1 view .LVU206
6954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 684              		.loc 1 6954 33 is_stmt 0 view .LVU207
 685 0080 4A68     		ldr	r2, [r1, #4]
 686              	.LVL56:
6954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 142


 687              		.loc 1 6954 33 view .LVU208
 688 0082 8023     		movs	r3, #128
 689              	.LVL57:
6954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 690              		.loc 1 6954 33 view .LVU209
 691 0084 DB01     		lsls	r3, r3, #7
 692 0086 1343     		orrs	r3, r2
 693 0088 4B60     		str	r3, [r1, #4]
6957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
 694              		.loc 1 6957 13 is_stmt 1 view .LVU210
6957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
 695              		.loc 1 6957 25 is_stmt 0 view .LVU211
 696 008a FFF7FEFF 		bl	HAL_GetTick
 697              	.LVL58:
 698 008e 0700     		movs	r7, r0
 699              	.LVL59:
6957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
 700              		.loc 1 6957 25 view .LVU212
 701 0090 E7E7     		b	.L61
 702              	.LVL60:
 703              	.L63:
6977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 704              		.loc 1 6977 5 is_stmt 1 view .LVU213
6977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 705              		.loc 1 6977 8 is_stmt 0 view .LVU214
 706 0092 002E     		cmp	r6, #0
 707 0094 01D1     		bne	.L65
6980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 708              		.loc 1 6980 7 is_stmt 1 view .LVU215
 709 0096 2023     		movs	r3, #32
 710 0098 C361     		str	r3, [r0, #28]
 711              	.L65:
6983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 712              		.loc 1 6983 5 view .LVU216
6983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 713              		.loc 1 6983 16 is_stmt 0 view .LVU217
 714 009a 0426     		movs	r6, #4
 715              	.LVL61:
6983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 716              		.loc 1 6983 16 view .LVU218
 717 009c 4346     		mov	r3, r8
 718 009e 3343     		orrs	r3, r6
 719 00a0 1E00     		movs	r6, r3
 720              	.LVL62:
6985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 721              		.loc 1 6985 5 is_stmt 1 view .LVU219
6985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 722              		.loc 1 6985 12 is_stmt 0 view .LVU220
 723 00a2 0125     		movs	r5, #1
 724              	.LVL63:
 725              	.L55:
6989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 726              		.loc 1 6989 3 is_stmt 1 view .LVU221
6989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 727              		.loc 1 6989 16 is_stmt 0 view .LVU222
 728 00a4 2268     		ldr	r2, [r4]
6989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 143


 729              		.loc 1 6989 10 view .LVU223
 730 00a6 9369     		ldr	r3, [r2, #24]
 731              	.LVL64:
6993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 732              		.loc 1 6993 3 is_stmt 1 view .LVU224
6993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 733              		.loc 1 6993 6 is_stmt 0 view .LVU225
 734 00a8 D905     		lsls	r1, r3, #23
 735 00aa 04D5     		bpl	.L66
6995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 736              		.loc 1 6995 5 is_stmt 1 view .LVU226
6995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 737              		.loc 1 6995 16 is_stmt 0 view .LVU227
 738 00ac 0121     		movs	r1, #1
 739 00ae 0E43     		orrs	r6, r1
 740              	.LVL65:
6998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 741              		.loc 1 6998 5 is_stmt 1 view .LVU228
 742 00b0 FF31     		adds	r1, r1, #255
 743 00b2 D161     		str	r1, [r2, #28]
7000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 744              		.loc 1 7000 5 view .LVU229
 745              	.LVL66:
7000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 746              		.loc 1 7000 12 is_stmt 0 view .LVU230
 747 00b4 0125     		movs	r5, #1
 748              	.LVL67:
 749              	.L66:
7004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 750              		.loc 1 7004 3 is_stmt 1 view .LVU231
7004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 751              		.loc 1 7004 6 is_stmt 0 view .LVU232
 752 00b6 5A05     		lsls	r2, r3, #21
 753 00b8 06D5     		bpl	.L67
7006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 754              		.loc 1 7006 5 is_stmt 1 view .LVU233
7006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 755              		.loc 1 7006 16 is_stmt 0 view .LVU234
 756 00ba 0822     		movs	r2, #8
 757 00bc 1643     		orrs	r6, r2
 758              	.LVL68:
7009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 759              		.loc 1 7009 5 is_stmt 1 view .LVU235
 760 00be 2268     		ldr	r2, [r4]
 761 00c0 8021     		movs	r1, #128
 762 00c2 C900     		lsls	r1, r1, #3
 763 00c4 D161     		str	r1, [r2, #28]
7011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 764              		.loc 1 7011 5 view .LVU236
 765              	.LVL69:
7011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 766              		.loc 1 7011 12 is_stmt 0 view .LVU237
 767 00c6 0125     		movs	r5, #1
 768              	.LVL70:
 769              	.L67:
7015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 770              		.loc 1 7015 3 is_stmt 1 view .LVU238
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 144


7015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 771              		.loc 1 7015 6 is_stmt 0 view .LVU239
 772 00c8 9B05     		lsls	r3, r3, #22
 773 00ca 1FD5     		bpl	.L68
 774              	.LVL71:
7017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 775              		.loc 1 7017 5 is_stmt 1 view .LVU240
7017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 776              		.loc 1 7017 16 is_stmt 0 view .LVU241
 777 00cc 0223     		movs	r3, #2
 778 00ce 1E43     		orrs	r6, r3
 779              	.LVL72:
7020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 780              		.loc 1 7020 5 is_stmt 1 view .LVU242
 781 00d0 2368     		ldr	r3, [r4]
 782 00d2 8022     		movs	r2, #128
 783 00d4 9200     		lsls	r2, r2, #2
 784 00d6 DA61     		str	r2, [r3, #28]
7022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 785              		.loc 1 7022 5 view .LVU243
 786              	.LVL73:
7025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 787              		.loc 1 7025 3 view .LVU244
7022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 788              		.loc 1 7022 12 is_stmt 0 view .LVU245
 789 00d8 0125     		movs	r5, #1
 790              	.LVL74:
 791              	.L69:
7028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 792              		.loc 1 7028 5 is_stmt 1 view .LVU246
 793 00da 2000     		movs	r0, r4
 794 00dc FFF7FEFF 		bl	I2C_Flush_TXDR
 795              	.LVL75:
7031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 796              		.loc 1 7031 5 view .LVU247
 797 00e0 2268     		ldr	r2, [r4]
 798 00e2 5368     		ldr	r3, [r2, #4]
 799 00e4 0B49     		ldr	r1, .L78
 800 00e6 0B40     		ands	r3, r1
 801 00e8 5360     		str	r3, [r2, #4]
7033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 802              		.loc 1 7033 5 view .LVU248
7033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 803              		.loc 1 7033 21 is_stmt 0 view .LVU249
 804 00ea 636C     		ldr	r3, [r4, #68]
 805 00ec 3343     		orrs	r3, r6
 806 00ee 6364     		str	r3, [r4, #68]
7034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 807              		.loc 1 7034 5 is_stmt 1 view .LVU250
7034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 808              		.loc 1 7034 17 is_stmt 0 view .LVU251
 809 00f0 4123     		movs	r3, #65
 810 00f2 2022     		movs	r2, #32
 811 00f4 E254     		strb	r2, [r4, r3]
7035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 812              		.loc 1 7035 5 is_stmt 1 view .LVU252
7035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 145


 813              		.loc 1 7035 16 is_stmt 0 view .LVU253
 814 00f6 0023     		movs	r3, #0
 815 00f8 2232     		adds	r2, r2, #34
 816 00fa A354     		strb	r3, [r4, r2]
7038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 817              		.loc 1 7038 5 is_stmt 1 view .LVU254
7038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 818              		.loc 1 7038 5 view .LVU255
 819 00fc 023A     		subs	r2, r2, #2
 820 00fe A354     		strb	r3, [r4, r2]
 821              	.L70:
7038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 822              		.loc 1 7038 5 discriminator 1 view .LVU256
7041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 823              		.loc 1 7041 3 discriminator 1 view .LVU257
7042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 824              		.loc 1 7042 1 is_stmt 0 discriminator 1 view .LVU258
 825 0100 2800     		movs	r0, r5
 826              		@ sp needed
 827              	.LVL76:
 828              	.LVL77:
 829              	.LVL78:
7042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 830              		.loc 1 7042 1 discriminator 1 view .LVU259
 831 0102 80BC     		pop	{r7}
 832 0104 B846     		mov	r8, r7
 833 0106 F0BD     		pop	{r4, r5, r6, r7, pc}
 834              	.LVL79:
 835              	.L71:
6924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itflag   = hi2c->Instance->ISR;
 836              		.loc 1 6924 21 view .LVU260
 837 0108 0025     		movs	r5, #0
 838              	.LVL80:
6924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itflag   = hi2c->Instance->ISR;
 839              		.loc 1 6924 21 view .LVU261
 840 010a CBE7     		b	.L55
 841              	.LVL81:
 842              	.L68:
7025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 843              		.loc 1 7025 3 is_stmt 1 view .LVU262
7025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 844              		.loc 1 7025 6 is_stmt 0 view .LVU263
 845 010c 002D     		cmp	r5, #0
 846 010e F7D0     		beq	.L70
 847 0110 E3E7     		b	.L69
 848              	.L79:
 849 0112 C046     		.align	2
 850              	.L78:
 851 0114 00E800FE 		.word	-33495040
 852              		.cfi_endproc
 853              	.LFE116:
 855              		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 856              		.align	1
 857              		.syntax unified
 858              		.code	16
 859              		.thumb_func
 861              	I2C_WaitOnTXISFlagUntilTimeout:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 146


 862              	.LVL82:
 863              	.LFB113:
6769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 864              		.loc 1 6769 1 is_stmt 1 view -0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
6769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 868              		.loc 1 6769 1 is_stmt 0 view .LVU265
 869 0000 70B5     		push	{r4, r5, r6, lr}
 870              	.LCFI5:
 871              		.cfi_def_cfa_offset 16
 872              		.cfi_offset 4, -16
 873              		.cfi_offset 5, -12
 874              		.cfi_offset 6, -8
 875              		.cfi_offset 14, -4
 876 0002 0400     		movs	r4, r0
 877 0004 0D00     		movs	r5, r1
 878 0006 1600     		movs	r6, r2
6770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 879              		.loc 1 6770 3 is_stmt 1 view .LVU266
 880              	.LVL83:
 881              	.L83:
6770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 882              		.loc 1 6770 50 view .LVU267
6770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 883              		.loc 1 6770 10 is_stmt 0 view .LVU268
 884 0008 2368     		ldr	r3, [r4]
 885 000a 9B69     		ldr	r3, [r3, #24]
6770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 886              		.loc 1 6770 50 view .LVU269
 887 000c 9B07     		lsls	r3, r3, #30
 888 000e 20D4     		bmi	.L89
6773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 889              		.loc 1 6773 5 is_stmt 1 view .LVU270
6773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 890              		.loc 1 6773 9 is_stmt 0 view .LVU271
 891 0010 3200     		movs	r2, r6
 892 0012 2900     		movs	r1, r5
 893 0014 2000     		movs	r0, r4
 894 0016 FFF7FEFF 		bl	I2C_IsErrorOccurred
 895              	.LVL84:
6773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 896              		.loc 1 6773 8 view .LVU272
 897 001a 0028     		cmp	r0, #0
 898 001c 1BD1     		bne	.L86
6779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 899              		.loc 1 6779 5 is_stmt 1 view .LVU273
6779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 900              		.loc 1 6779 8 is_stmt 0 view .LVU274
 901 001e 6B1C     		adds	r3, r5, #1
 902 0020 F2D0     		beq	.L83
6781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 903              		.loc 1 6781 7 is_stmt 1 view .LVU275
6781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 904              		.loc 1 6781 13 is_stmt 0 view .LVU276
 905 0022 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 147


 906              	.LVL85:
6781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 907              		.loc 1 6781 27 view .LVU277
 908 0026 801B     		subs	r0, r0, r6
6781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 909              		.loc 1 6781 10 view .LVU278
 910 0028 A842     		cmp	r0, r5
 911 002a 01D8     		bhi	.L84
6781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 912              		.loc 1 6781 51 discriminator 1 view .LVU279
 913 002c 002D     		cmp	r5, #0
 914 002e EBD1     		bne	.L83
 915              	.L84:
6783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 916              		.loc 1 6783 9 is_stmt 1 view .LVU280
6783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 917              		.loc 1 6783 14 is_stmt 0 view .LVU281
 918 0030 2368     		ldr	r3, [r4]
 919 0032 9B69     		ldr	r3, [r3, #24]
6783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 920              		.loc 1 6783 12 view .LVU282
 921 0034 9B07     		lsls	r3, r3, #30
 922 0036 E7D4     		bmi	.L83
6785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 923              		.loc 1 6785 11 is_stmt 1 view .LVU283
6785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 924              		.loc 1 6785 27 is_stmt 0 view .LVU284
 925 0038 636C     		ldr	r3, [r4, #68]
 926 003a 2022     		movs	r2, #32
 927 003c 1343     		orrs	r3, r2
 928 003e 6364     		str	r3, [r4, #68]
6786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 929              		.loc 1 6786 11 is_stmt 1 view .LVU285
6786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 930              		.loc 1 6786 23 is_stmt 0 view .LVU286
 931 0040 4123     		movs	r3, #65
 932 0042 E254     		strb	r2, [r4, r3]
6787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 933              		.loc 1 6787 11 is_stmt 1 view .LVU287
6787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 934              		.loc 1 6787 22 is_stmt 0 view .LVU288
 935 0044 0023     		movs	r3, #0
 936 0046 2232     		adds	r2, r2, #34
 937 0048 A354     		strb	r3, [r4, r2]
6790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 938              		.loc 1 6790 11 is_stmt 1 view .LVU289
6790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 939              		.loc 1 6790 11 view .LVU290
 940 004a 023A     		subs	r2, r2, #2
 941 004c A354     		strb	r3, [r4, r2]
6790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 942              		.loc 1 6790 11 view .LVU291
6792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 943              		.loc 1 6792 11 view .LVU292
6792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 944              		.loc 1 6792 18 is_stmt 0 view .LVU293
 945 004e 0120     		movs	r0, #1
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 148


 946 0050 00E0     		b	.L82
 947              	.L89:
6797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 948              		.loc 1 6797 10 view .LVU294
 949 0052 0020     		movs	r0, #0
 950              	.L82:
6798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 951              		.loc 1 6798 1 view .LVU295
 952              		@ sp needed
 953              	.LVL86:
 954              	.LVL87:
 955              	.LVL88:
6798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 956              		.loc 1 6798 1 view .LVU296
 957 0054 70BD     		pop	{r4, r5, r6, pc}
 958              	.LVL89:
 959              	.L86:
6775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 960              		.loc 1 6775 14 view .LVU297
 961 0056 0120     		movs	r0, #1
 962 0058 FCE7     		b	.L82
 963              		.cfi_endproc
 964              	.LFE113:
 966              		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 967              		.align	1
 968              		.syntax unified
 969              		.code	16
 970              		.thumb_func
 972              	I2C_WaitOnFlagUntilTimeout:
 973              	.LVL90:
 974              	.LFB112:
6735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 975              		.loc 1 6735 1 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 4, pretend = 0, frame = 8
 978              		@ frame_needed = 0, uses_anonymous_args = 0
6735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 979              		.loc 1 6735 1 is_stmt 0 view .LVU299
 980 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 981              	.LCFI6:
 982              		.cfi_def_cfa_offset 20
 983              		.cfi_offset 4, -20
 984              		.cfi_offset 5, -16
 985              		.cfi_offset 6, -12
 986              		.cfi_offset 7, -8
 987              		.cfi_offset 14, -4
 988 0002 CE46     		mov	lr, r9
 989 0004 00B5     		push	{lr}
 990              	.LCFI7:
 991              		.cfi_def_cfa_offset 24
 992              		.cfi_offset 9, -24
 993 0006 82B0     		sub	sp, sp, #8
 994              	.LCFI8:
 995              		.cfi_def_cfa_offset 32
 996 0008 0700     		movs	r7, r0
 997 000a 0D00     		movs	r5, r1
 998 000c 1600     		movs	r6, r2
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 149


 999 000e 9946     		mov	r9, r3
6736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1000              		.loc 1 6736 3 is_stmt 1 view .LVU300
 1001              	.LVL91:
 1002              	.L92:
6736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1003              		.loc 1 6736 41 view .LVU301
6736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1004              		.loc 1 6736 10 is_stmt 0 view .LVU302
 1005 0010 3B68     		ldr	r3, [r7]
 1006 0012 9C69     		ldr	r4, [r3, #24]
 1007 0014 2C40     		ands	r4, r5
 1008 0016 641B     		subs	r4, r4, r5
 1009 0018 6342     		rsbs	r3, r4, #0
 1010 001a 5C41     		adcs	r4, r4, r3
6736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1011              		.loc 1 6736 41 view .LVU303
 1012 001c 0196     		str	r6, [sp, #4]
 1013 001e B442     		cmp	r4, r6
 1014 0020 21D1     		bne	.L97
6739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1015              		.loc 1 6739 5 is_stmt 1 view .LVU304
6739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1016              		.loc 1 6739 8 is_stmt 0 view .LVU305
 1017 0022 4B46     		mov	r3, r9
 1018 0024 0133     		adds	r3, r3, #1
 1019 0026 F3D0     		beq	.L92
6741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1020              		.loc 1 6741 7 is_stmt 1 view .LVU306
6741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1021              		.loc 1 6741 13 is_stmt 0 view .LVU307
 1022 0028 FFF7FEFF 		bl	HAL_GetTick
 1023              	.LVL92:
6741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1024              		.loc 1 6741 27 view .LVU308
 1025 002c 089B     		ldr	r3, [sp, #32]
 1026 002e C01A     		subs	r0, r0, r3
6741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1027              		.loc 1 6741 10 view .LVU309
 1028 0030 4845     		cmp	r0, r9
 1029 0032 02D8     		bhi	.L93
6741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1030              		.loc 1 6741 51 discriminator 1 view .LVU310
 1031 0034 4B46     		mov	r3, r9
 1032 0036 002B     		cmp	r3, #0
 1033 0038 EAD1     		bne	.L92
 1034              	.L93:
6743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 1035              		.loc 1 6743 9 is_stmt 1 view .LVU311
6743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 1036              		.loc 1 6743 14 is_stmt 0 view .LVU312
 1037 003a 3B68     		ldr	r3, [r7]
 1038 003c 9B69     		ldr	r3, [r3, #24]
 1039 003e 2B40     		ands	r3, r5
 1040 0040 5B1B     		subs	r3, r3, r5
 1041 0042 5A42     		rsbs	r2, r3, #0
 1042 0044 5341     		adcs	r3, r3, r2
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 150


6743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 1043              		.loc 1 6743 12 view .LVU313
 1044 0046 019A     		ldr	r2, [sp, #4]
 1045 0048 9342     		cmp	r3, r2
 1046 004a E1D1     		bne	.L92
6745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 1047              		.loc 1 6745 11 is_stmt 1 view .LVU314
6745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 1048              		.loc 1 6745 27 is_stmt 0 view .LVU315
 1049 004c 7B6C     		ldr	r3, [r7, #68]
 1050 004e 2022     		movs	r2, #32
 1051 0050 1343     		orrs	r3, r2
 1052 0052 7B64     		str	r3, [r7, #68]
6746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 1053              		.loc 1 6746 11 is_stmt 1 view .LVU316
6746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 1054              		.loc 1 6746 23 is_stmt 0 view .LVU317
 1055 0054 4123     		movs	r3, #65
 1056 0056 FA54     		strb	r2, [r7, r3]
6747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1057              		.loc 1 6747 11 is_stmt 1 view .LVU318
6747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1058              		.loc 1 6747 22 is_stmt 0 view .LVU319
 1059 0058 0023     		movs	r3, #0
 1060 005a 2232     		adds	r2, r2, #34
 1061 005c BB54     		strb	r3, [r7, r2]
6750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
 1062              		.loc 1 6750 11 is_stmt 1 view .LVU320
6750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
 1063              		.loc 1 6750 11 view .LVU321
 1064 005e 023A     		subs	r2, r2, #2
 1065 0060 BB54     		strb	r3, [r7, r2]
6750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
 1066              		.loc 1 6750 11 view .LVU322
6751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 1067              		.loc 1 6751 11 view .LVU323
6751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 1068              		.loc 1 6751 18 is_stmt 0 view .LVU324
 1069 0062 0120     		movs	r0, #1
 1070 0064 00E0     		b	.L94
 1071              	.L97:
6756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 1072              		.loc 1 6756 10 view .LVU325
 1073 0066 0020     		movs	r0, #0
 1074              	.L94:
6757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1075              		.loc 1 6757 1 view .LVU326
 1076 0068 02B0     		add	sp, sp, #8
 1077              		@ sp needed
 1078              	.LVL93:
 1079              	.LVL94:
 1080              	.LVL95:
6757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1081              		.loc 1 6757 1 view .LVU327
 1082 006a 80BC     		pop	{r7}
 1083 006c B946     		mov	r9, r7
 1084 006e F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 151


 1085              		.cfi_endproc
 1086              	.LFE112:
 1088              		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 1089              		.align	1
 1090              		.syntax unified
 1091              		.code	16
 1092              		.thumb_func
 1094              	I2C_RequestMemoryWrite:
 1095              	.LVL96:
 1096              	.LFB95:
5658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
 1097              		.loc 1 5658 1 is_stmt 1 view -0
 1098              		.cfi_startproc
 1099              		@ args = 8, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
5658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
 1101              		.loc 1 5658 1 is_stmt 0 view .LVU329
 1102 0000 70B5     		push	{r4, r5, r6, lr}
 1103              	.LCFI9:
 1104              		.cfi_def_cfa_offset 16
 1105              		.cfi_offset 4, -16
 1106              		.cfi_offset 5, -12
 1107              		.cfi_offset 6, -8
 1108              		.cfi_offset 14, -4
 1109 0002 82B0     		sub	sp, sp, #8
 1110              	.LCFI10:
 1111              		.cfi_def_cfa_offset 24
 1112 0004 0400     		movs	r4, r0
 1113 0006 1500     		movs	r5, r2
 1114 0008 1E00     		movs	r6, r3
5659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1115              		.loc 1 5659 3 is_stmt 1 view .LVU330
 1116 000a 8023     		movs	r3, #128
 1117              	.LVL97:
5659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1118              		.loc 1 5659 3 is_stmt 0 view .LVU331
 1119 000c F2B2     		uxtb	r2, r6
 1120              	.LVL98:
5659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1121              		.loc 1 5659 3 view .LVU332
 1122 000e 1948     		ldr	r0, .L106
 1123              	.LVL99:
5659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1124              		.loc 1 5659 3 view .LVU333
 1125 0010 0090     		str	r0, [sp]
 1126 0012 5B04     		lsls	r3, r3, #17
 1127 0014 2000     		movs	r0, r4
 1128 0016 FFF7FEFF 		bl	I2C_TransferConfig
 1129              	.LVL100:
5662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1130              		.loc 1 5662 3 is_stmt 1 view .LVU334
5662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1131              		.loc 1 5662 7 is_stmt 0 view .LVU335
 1132 001a 079A     		ldr	r2, [sp, #28]
 1133 001c 0699     		ldr	r1, [sp, #24]
 1134 001e 2000     		movs	r0, r4
 1135 0020 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 152


 1136              	.LVL101:
5662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1137              		.loc 1 5662 6 view .LVU336
 1138 0024 0028     		cmp	r0, #0
 1139 0026 1ED1     		bne	.L102
5668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1140              		.loc 1 5668 3 is_stmt 1 view .LVU337
5668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1141              		.loc 1 5668 6 is_stmt 0 view .LVU338
 1142 0028 012E     		cmp	r6, #1
 1143 002a 0ED1     		bne	.L100
5671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1144              		.loc 1 5671 5 is_stmt 1 view .LVU339
5671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1145              		.loc 1 5671 9 is_stmt 0 view .LVU340
 1146 002c 2368     		ldr	r3, [r4]
5671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1147              		.loc 1 5671 28 view .LVU341
 1148 002e EDB2     		uxtb	r5, r5
5671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1149              		.loc 1 5671 26 view .LVU342
 1150 0030 9D62     		str	r5, [r3, #40]
 1151              	.L101:
5690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1152              		.loc 1 5690 3 is_stmt 1 view .LVU343
5690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1153              		.loc 1 5690 7 is_stmt 0 view .LVU344
 1154 0032 079B     		ldr	r3, [sp, #28]
 1155 0034 0093     		str	r3, [sp]
 1156 0036 069B     		ldr	r3, [sp, #24]
 1157 0038 0022     		movs	r2, #0
 1158 003a 8021     		movs	r1, #128
 1159 003c 2000     		movs	r0, r4
 1160 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1161              	.LVL102:
5690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1162              		.loc 1 5690 6 view .LVU345
 1163 0042 0028     		cmp	r0, #0
 1164 0044 13D1     		bne	.L105
 1165              	.L99:
5696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1166              		.loc 1 5696 1 view .LVU346
 1167 0046 02B0     		add	sp, sp, #8
 1168              		@ sp needed
 1169              	.LVL103:
5696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1170              		.loc 1 5696 1 view .LVU347
 1171 0048 70BD     		pop	{r4, r5, r6, pc}
 1172              	.LVL104:
 1173              	.L100:
5677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1174              		.loc 1 5677 5 is_stmt 1 view .LVU348
5677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1175              		.loc 1 5677 9 is_stmt 0 view .LVU349
 1176 004a 2368     		ldr	r3, [r4]
5677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1177              		.loc 1 5677 28 view .LVU350
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 153


 1178 004c 2A0A     		lsrs	r2, r5, #8
5677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1179              		.loc 1 5677 26 view .LVU351
 1180 004e 9A62     		str	r2, [r3, #40]
5680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1181              		.loc 1 5680 5 is_stmt 1 view .LVU352
5680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1182              		.loc 1 5680 9 is_stmt 0 view .LVU353
 1183 0050 079A     		ldr	r2, [sp, #28]
 1184 0052 0699     		ldr	r1, [sp, #24]
 1185 0054 2000     		movs	r0, r4
 1186 0056 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1187              	.LVL105:
5680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1188              		.loc 1 5680 8 view .LVU354
 1189 005a 0028     		cmp	r0, #0
 1190 005c 05D1     		bne	.L103
5686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1191              		.loc 1 5686 5 is_stmt 1 view .LVU355
5686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1192              		.loc 1 5686 9 is_stmt 0 view .LVU356
 1193 005e 2368     		ldr	r3, [r4]
5686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1194              		.loc 1 5686 28 view .LVU357
 1195 0060 EDB2     		uxtb	r5, r5
5686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1196              		.loc 1 5686 26 view .LVU358
 1197 0062 9D62     		str	r5, [r3, #40]
 1198 0064 E5E7     		b	.L101
 1199              	.L102:
5664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1200              		.loc 1 5664 12 view .LVU359
 1201 0066 0120     		movs	r0, #1
 1202 0068 EDE7     		b	.L99
 1203              	.L103:
5682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 1204              		.loc 1 5682 14 view .LVU360
 1205 006a 0120     		movs	r0, #1
 1206 006c EBE7     		b	.L99
 1207              	.L105:
5692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1208              		.loc 1 5692 12 view .LVU361
 1209 006e 0120     		movs	r0, #1
 1210 0070 E9E7     		b	.L99
 1211              	.L107:
 1212 0072 C046     		.align	2
 1213              	.L106:
 1214 0074 00200080 		.word	-2147475456
 1215              		.cfi_endproc
 1216              	.LFE95:
 1218              		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 1219              		.align	1
 1220              		.syntax unified
 1221              		.code	16
 1222              		.thumb_func
 1224              	I2C_RequestMemoryRead:
 1225              	.LVL106:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 154


 1226              	.LFB96:
5713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
 1227              		.loc 1 5713 1 is_stmt 1 view -0
 1228              		.cfi_startproc
 1229              		@ args = 8, pretend = 0, frame = 0
 1230              		@ frame_needed = 0, uses_anonymous_args = 0
5713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
 1231              		.loc 1 5713 1 is_stmt 0 view .LVU363
 1232 0000 70B5     		push	{r4, r5, r6, lr}
 1233              	.LCFI11:
 1234              		.cfi_def_cfa_offset 16
 1235              		.cfi_offset 4, -16
 1236              		.cfi_offset 5, -12
 1237              		.cfi_offset 6, -8
 1238              		.cfi_offset 14, -4
 1239 0002 82B0     		sub	sp, sp, #8
 1240              	.LCFI12:
 1241              		.cfi_def_cfa_offset 24
 1242 0004 0400     		movs	r4, r0
 1243 0006 1500     		movs	r5, r2
 1244 0008 1E00     		movs	r6, r3
5714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1245              		.loc 1 5714 3 is_stmt 1 view .LVU364
 1246 000a DAB2     		uxtb	r2, r3
 1247              	.LVL107:
5714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1248              		.loc 1 5714 3 is_stmt 0 view .LVU365
 1249 000c 184B     		ldr	r3, .L116
 1250              	.LVL108:
5714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1251              		.loc 1 5714 3 view .LVU366
 1252 000e 0093     		str	r3, [sp]
 1253 0010 0023     		movs	r3, #0
 1254 0012 FFF7FEFF 		bl	I2C_TransferConfig
 1255              	.LVL109:
5717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1256              		.loc 1 5717 3 is_stmt 1 view .LVU367
5717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1257              		.loc 1 5717 7 is_stmt 0 view .LVU368
 1258 0016 079A     		ldr	r2, [sp, #28]
 1259 0018 0699     		ldr	r1, [sp, #24]
 1260 001a 2000     		movs	r0, r4
 1261 001c FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1262              	.LVL110:
5717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1263              		.loc 1 5717 6 view .LVU369
 1264 0020 0028     		cmp	r0, #0
 1265 0022 1ED1     		bne	.L112
5723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1266              		.loc 1 5723 3 is_stmt 1 view .LVU370
5723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1267              		.loc 1 5723 6 is_stmt 0 view .LVU371
 1268 0024 012E     		cmp	r6, #1
 1269 0026 0ED1     		bne	.L110
5726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1270              		.loc 1 5726 5 is_stmt 1 view .LVU372
5726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 155


 1271              		.loc 1 5726 9 is_stmt 0 view .LVU373
 1272 0028 2368     		ldr	r3, [r4]
5726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1273              		.loc 1 5726 28 view .LVU374
 1274 002a EDB2     		uxtb	r5, r5
5726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1275              		.loc 1 5726 26 view .LVU375
 1276 002c 9D62     		str	r5, [r3, #40]
 1277              	.L111:
5745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1278              		.loc 1 5745 3 is_stmt 1 view .LVU376
5745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1279              		.loc 1 5745 7 is_stmt 0 view .LVU377
 1280 002e 079B     		ldr	r3, [sp, #28]
 1281 0030 0093     		str	r3, [sp]
 1282 0032 069B     		ldr	r3, [sp, #24]
 1283 0034 0022     		movs	r2, #0
 1284 0036 4021     		movs	r1, #64
 1285 0038 2000     		movs	r0, r4
 1286 003a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1287              	.LVL111:
5745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1288              		.loc 1 5745 6 view .LVU378
 1289 003e 0028     		cmp	r0, #0
 1290 0040 13D1     		bne	.L115
 1291              	.L109:
5751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1292              		.loc 1 5751 1 view .LVU379
 1293 0042 02B0     		add	sp, sp, #8
 1294              		@ sp needed
 1295              	.LVL112:
5751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1296              		.loc 1 5751 1 view .LVU380
 1297 0044 70BD     		pop	{r4, r5, r6, pc}
 1298              	.LVL113:
 1299              	.L110:
5732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1300              		.loc 1 5732 5 is_stmt 1 view .LVU381
5732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1301              		.loc 1 5732 9 is_stmt 0 view .LVU382
 1302 0046 2368     		ldr	r3, [r4]
5732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1303              		.loc 1 5732 28 view .LVU383
 1304 0048 2A0A     		lsrs	r2, r5, #8
5732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1305              		.loc 1 5732 26 view .LVU384
 1306 004a 9A62     		str	r2, [r3, #40]
5735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1307              		.loc 1 5735 5 is_stmt 1 view .LVU385
5735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1308              		.loc 1 5735 9 is_stmt 0 view .LVU386
 1309 004c 079A     		ldr	r2, [sp, #28]
 1310 004e 0699     		ldr	r1, [sp, #24]
 1311 0050 2000     		movs	r0, r4
 1312 0052 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1313              	.LVL114:
5735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 156


 1314              		.loc 1 5735 8 view .LVU387
 1315 0056 0028     		cmp	r0, #0
 1316 0058 05D1     		bne	.L113
5741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1317              		.loc 1 5741 5 is_stmt 1 view .LVU388
5741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1318              		.loc 1 5741 9 is_stmt 0 view .LVU389
 1319 005a 2368     		ldr	r3, [r4]
5741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1320              		.loc 1 5741 28 view .LVU390
 1321 005c EDB2     		uxtb	r5, r5
5741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1322              		.loc 1 5741 26 view .LVU391
 1323 005e 9D62     		str	r5, [r3, #40]
 1324 0060 E5E7     		b	.L111
 1325              	.L112:
5719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1326              		.loc 1 5719 12 view .LVU392
 1327 0062 0120     		movs	r0, #1
 1328 0064 EDE7     		b	.L109
 1329              	.L113:
5737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 1330              		.loc 1 5737 14 view .LVU393
 1331 0066 0120     		movs	r0, #1
 1332 0068 EBE7     		b	.L109
 1333              	.L115:
5747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1334              		.loc 1 5747 12 view .LVU394
 1335 006a 0120     		movs	r0, #1
 1336 006c E9E7     		b	.L109
 1337              	.L117:
 1338 006e C046     		.align	2
 1339              	.L116:
 1340 0070 00200080 		.word	-2147475456
 1341              		.cfi_endproc
 1342              	.LFE96:
 1344              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 1345              		.align	1
 1346              		.syntax unified
 1347              		.code	16
 1348              		.thumb_func
 1350              	I2C_WaitOnSTOPFlagUntilTimeout:
 1351              	.LVL115:
 1352              	.LFB114:
6810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 1353              		.loc 1 6810 1 is_stmt 1 view -0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
6810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 1357              		.loc 1 6810 1 is_stmt 0 view .LVU396
 1358 0000 70B5     		push	{r4, r5, r6, lr}
 1359              	.LCFI13:
 1360              		.cfi_def_cfa_offset 16
 1361              		.cfi_offset 4, -16
 1362              		.cfi_offset 5, -12
 1363              		.cfi_offset 6, -8
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 157


 1364              		.cfi_offset 14, -4
 1365 0002 0400     		movs	r4, r0
 1366 0004 0D00     		movs	r5, r1
 1367 0006 1600     		movs	r6, r2
6811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1368              		.loc 1 6811 3 is_stmt 1 view .LVU397
6811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1369              		.loc 1 6811 9 is_stmt 0 view .LVU398
 1370 0008 03E0     		b	.L119
 1371              	.LVL116:
 1372              	.L121:
6822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1373              		.loc 1 6822 7 is_stmt 1 view .LVU399
6822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1374              		.loc 1 6822 12 is_stmt 0 view .LVU400
 1375 000a 2368     		ldr	r3, [r4]
 1376 000c 9B69     		ldr	r3, [r3, #24]
6822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1377              		.loc 1 6822 10 view .LVU401
 1378 000e 9B06     		lsls	r3, r3, #26
 1379 0010 12D5     		bpl	.L125
 1380              	.L119:
6811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1381              		.loc 1 6811 51 is_stmt 1 view .LVU402
6811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1382              		.loc 1 6811 10 is_stmt 0 view .LVU403
 1383 0012 2368     		ldr	r3, [r4]
 1384 0014 9B69     		ldr	r3, [r3, #24]
6811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1385              		.loc 1 6811 51 view .LVU404
 1386 0016 9B06     		lsls	r3, r3, #26
 1387 0018 1BD4     		bmi	.L126
6814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1388              		.loc 1 6814 5 is_stmt 1 view .LVU405
6814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1389              		.loc 1 6814 9 is_stmt 0 view .LVU406
 1390 001a 3200     		movs	r2, r6
 1391 001c 2900     		movs	r1, r5
 1392 001e 2000     		movs	r0, r4
 1393 0020 FFF7FEFF 		bl	I2C_IsErrorOccurred
 1394              	.LVL117:
6814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1395              		.loc 1 6814 8 view .LVU407
 1396 0024 0028     		cmp	r0, #0
 1397 0026 16D1     		bne	.L123
6820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1398              		.loc 1 6820 5 is_stmt 1 view .LVU408
6820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1399              		.loc 1 6820 11 is_stmt 0 view .LVU409
 1400 0028 FFF7FEFF 		bl	HAL_GetTick
 1401              	.LVL118:
6820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1402              		.loc 1 6820 25 view .LVU410
 1403 002c 801B     		subs	r0, r0, r6
6820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1404              		.loc 1 6820 8 view .LVU411
 1405 002e A842     		cmp	r0, r5
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 158


 1406 0030 EBD8     		bhi	.L121
6820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1407              		.loc 1 6820 49 discriminator 1 view .LVU412
 1408 0032 002D     		cmp	r5, #0
 1409 0034 EDD1     		bne	.L119
 1410 0036 E8E7     		b	.L121
 1411              	.L125:
6824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 1412              		.loc 1 6824 9 is_stmt 1 view .LVU413
6824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 1413              		.loc 1 6824 25 is_stmt 0 view .LVU414
 1414 0038 636C     		ldr	r3, [r4, #68]
 1415 003a 2022     		movs	r2, #32
 1416 003c 1343     		orrs	r3, r2
 1417 003e 6364     		str	r3, [r4, #68]
6825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 1418              		.loc 1 6825 9 is_stmt 1 view .LVU415
6825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 1419              		.loc 1 6825 21 is_stmt 0 view .LVU416
 1420 0040 4123     		movs	r3, #65
 1421 0042 E254     		strb	r2, [r4, r3]
6826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1422              		.loc 1 6826 9 is_stmt 1 view .LVU417
6826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1423              		.loc 1 6826 20 is_stmt 0 view .LVU418
 1424 0044 0023     		movs	r3, #0
 1425 0046 2232     		adds	r2, r2, #34
 1426 0048 A354     		strb	r3, [r4, r2]
6829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1427              		.loc 1 6829 9 is_stmt 1 view .LVU419
6829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1428              		.loc 1 6829 9 view .LVU420
 1429 004a 023A     		subs	r2, r2, #2
 1430 004c A354     		strb	r3, [r4, r2]
6829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1431              		.loc 1 6829 9 view .LVU421
6831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 1432              		.loc 1 6831 9 view .LVU422
6831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 1433              		.loc 1 6831 16 is_stmt 0 view .LVU423
 1434 004e 0120     		movs	r0, #1
 1435 0050 00E0     		b	.L120
 1436              	.L126:
6835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 1437              		.loc 1 6835 10 view .LVU424
 1438 0052 0020     		movs	r0, #0
 1439              	.L120:
6836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1440              		.loc 1 6836 1 view .LVU425
 1441              		@ sp needed
 1442              	.LVL119:
 1443              	.LVL120:
 1444              	.LVL121:
6836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1445              		.loc 1 6836 1 view .LVU426
 1446 0054 70BD     		pop	{r4, r5, r6, pc}
 1447              	.LVL122:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 159


 1448              	.L123:
6816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 1449              		.loc 1 6816 14 view .LVU427
 1450 0056 0120     		movs	r0, #1
 1451 0058 FCE7     		b	.L120
 1452              		.cfi_endproc
 1453              	.LFE114:
 1455              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 1456              		.align	1
 1457              		.syntax unified
 1458              		.code	16
 1459              		.thumb_func
 1461              	I2C_WaitOnRXNEFlagUntilTimeout:
 1462              	.LVL123:
 1463              	.LFB115:
6848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 1464              		.loc 1 6848 1 is_stmt 1 view -0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 0
 1467              		@ frame_needed = 0, uses_anonymous_args = 0
6848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 1468              		.loc 1 6848 1 is_stmt 0 view .LVU429
 1469 0000 70B5     		push	{r4, r5, r6, lr}
 1470              	.LCFI14:
 1471              		.cfi_def_cfa_offset 16
 1472              		.cfi_offset 4, -16
 1473              		.cfi_offset 5, -12
 1474              		.cfi_offset 6, -8
 1475              		.cfi_offset 14, -4
 1476 0002 0400     		movs	r4, r0
 1477 0004 0D00     		movs	r5, r1
 1478 0006 1600     		movs	r6, r2
6849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1479              		.loc 1 6849 3 is_stmt 1 view .LVU430
6849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1480              		.loc 1 6849 9 is_stmt 0 view .LVU431
 1481 0008 24E0     		b	.L128
 1482              	.LVL124:
 1483              	.L141:
6862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1484              		.loc 1 6862 7 is_stmt 1 view .LVU432
6862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1485              		.loc 1 6862 12 is_stmt 0 view .LVU433
 1486 000a 9369     		ldr	r3, [r2, #24]
6862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1487              		.loc 1 6862 10 view .LVU434
 1488 000c 5B07     		lsls	r3, r3, #29
 1489 000e 02D5     		bpl	.L131
6862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1490              		.loc 1 6862 68 discriminator 1 view .LVU435
 1491 0010 238D     		ldrh	r3, [r4, #40]
6862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1492              		.loc 1 6862 60 discriminator 1 view .LVU436
 1493 0012 002B     		cmp	r3, #0
 1494 0014 41D1     		bne	.L129
 1495              	.L131:
6870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 160


 1496              		.loc 1 6870 9 is_stmt 1 view .LVU437
6870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 1497              		.loc 1 6870 13 is_stmt 0 view .LVU438
 1498 0016 9369     		ldr	r3, [r2, #24]
6870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 1499              		.loc 1 6870 12 view .LVU439
 1500 0018 DB06     		lsls	r3, r3, #27
 1501 001a 14D5     		bpl	.L132
6872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 1502              		.loc 1 6872 11 is_stmt 1 view .LVU440
 1503 001c 1023     		movs	r3, #16
 1504 001e D361     		str	r3, [r2, #28]
6873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 1505              		.loc 1 6873 11 view .LVU441
6873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 1506              		.loc 1 6873 27 is_stmt 0 view .LVU442
 1507 0020 0C3B     		subs	r3, r3, #12
 1508 0022 6364     		str	r3, [r4, #68]
 1509              	.L133:
6881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1510              		.loc 1 6881 9 is_stmt 1 view .LVU443
 1511 0024 2368     		ldr	r3, [r4]
 1512 0026 2022     		movs	r2, #32
 1513 0028 DA61     		str	r2, [r3, #28]
6884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1514              		.loc 1 6884 9 view .LVU444
 1515 002a 2168     		ldr	r1, [r4]
 1516 002c 4B68     		ldr	r3, [r1, #4]
 1517 002e 1C48     		ldr	r0, .L142
 1518 0030 0340     		ands	r3, r0
 1519 0032 4B60     		str	r3, [r1, #4]
6886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 1520              		.loc 1 6886 9 view .LVU445
6886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 1521              		.loc 1 6886 21 is_stmt 0 view .LVU446
 1522 0034 4123     		movs	r3, #65
 1523 0036 E254     		strb	r2, [r4, r3]
6887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1524              		.loc 1 6887 9 is_stmt 1 view .LVU447
6887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1525              		.loc 1 6887 20 is_stmt 0 view .LVU448
 1526 0038 0023     		movs	r3, #0
 1527 003a 2232     		adds	r2, r2, #34
 1528 003c A354     		strb	r3, [r4, r2]
6890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1529              		.loc 1 6890 9 is_stmt 1 view .LVU449
6890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1530              		.loc 1 6890 9 view .LVU450
 1531 003e 023A     		subs	r2, r2, #2
 1532 0040 A354     		strb	r3, [r4, r2]
6890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1533              		.loc 1 6890 9 view .LVU451
6892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 1534              		.loc 1 6892 9 view .LVU452
6892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 1535              		.loc 1 6892 16 is_stmt 0 view .LVU453
 1536 0042 0120     		movs	r0, #1
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 161


 1537 0044 29E0     		b	.L129
 1538              	.L132:
6877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 1539              		.loc 1 6877 11 is_stmt 1 view .LVU454
6877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 1540              		.loc 1 6877 27 is_stmt 0 view .LVU455
 1541 0046 0023     		movs	r3, #0
 1542 0048 6364     		str	r3, [r4, #68]
 1543 004a EBE7     		b	.L133
 1544              	.L134:
6899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1545              		.loc 1 6899 7 is_stmt 1 view .LVU456
6899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1546              		.loc 1 6899 12 is_stmt 0 view .LVU457
 1547 004c 2368     		ldr	r3, [r4]
 1548 004e 9B69     		ldr	r3, [r3, #24]
6899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 1549              		.loc 1 6899 10 view .LVU458
 1550 0050 5B07     		lsls	r3, r3, #29
 1551 0052 16D5     		bpl	.L139
 1552              	.L128:
6849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1553              		.loc 1 6849 50 is_stmt 1 view .LVU459
6849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1554              		.loc 1 6849 10 is_stmt 0 view .LVU460
 1555 0054 2368     		ldr	r3, [r4]
 1556 0056 9B69     		ldr	r3, [r3, #24]
6849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1557              		.loc 1 6849 50 view .LVU461
 1558 0058 5B07     		lsls	r3, r3, #29
 1559 005a 1DD4     		bmi	.L140
6852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1560              		.loc 1 6852 5 is_stmt 1 view .LVU462
6852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1561              		.loc 1 6852 9 is_stmt 0 view .LVU463
 1562 005c 3200     		movs	r2, r6
 1563 005e 2900     		movs	r1, r5
 1564 0060 2000     		movs	r0, r4
 1565 0062 FFF7FEFF 		bl	I2C_IsErrorOccurred
 1566              	.LVL125:
6852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1567              		.loc 1 6852 8 view .LVU464
 1568 0066 0028     		cmp	r0, #0
 1569 0068 18D1     		bne	.L136
6858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1570              		.loc 1 6858 5 is_stmt 1 view .LVU465
6858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1571              		.loc 1 6858 9 is_stmt 0 view .LVU466
 1572 006a 2268     		ldr	r2, [r4]
 1573 006c 9369     		ldr	r3, [r2, #24]
6858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1574              		.loc 1 6858 8 view .LVU467
 1575 006e 9B06     		lsls	r3, r3, #26
 1576 0070 CBD4     		bmi	.L141
6897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1577              		.loc 1 6897 5 is_stmt 1 view .LVU468
6897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 162


 1578              		.loc 1 6897 11 is_stmt 0 view .LVU469
 1579 0072 FFF7FEFF 		bl	HAL_GetTick
 1580              	.LVL126:
6897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1581              		.loc 1 6897 25 view .LVU470
 1582 0076 801B     		subs	r0, r0, r6
6897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1583              		.loc 1 6897 8 view .LVU471
 1584 0078 A842     		cmp	r0, r5
 1585 007a E7D8     		bhi	.L134
6897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1586              		.loc 1 6897 49 discriminator 1 view .LVU472
 1587 007c 002D     		cmp	r5, #0
 1588 007e E9D1     		bne	.L128
 1589 0080 E4E7     		b	.L134
 1590              	.L139:
6901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 1591              		.loc 1 6901 9 is_stmt 1 view .LVU473
6901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 1592              		.loc 1 6901 25 is_stmt 0 view .LVU474
 1593 0082 636C     		ldr	r3, [r4, #68]
 1594 0084 2022     		movs	r2, #32
 1595 0086 1343     		orrs	r3, r2
 1596 0088 6364     		str	r3, [r4, #68]
6902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1597              		.loc 1 6902 9 is_stmt 1 view .LVU475
6902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1598              		.loc 1 6902 21 is_stmt 0 view .LVU476
 1599 008a 4123     		movs	r3, #65
 1600 008c E254     		strb	r2, [r4, r3]
6905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1601              		.loc 1 6905 9 is_stmt 1 view .LVU477
6905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1602              		.loc 1 6905 9 view .LVU478
 1603 008e 013B     		subs	r3, r3, #1
 1604 0090 0022     		movs	r2, #0
 1605 0092 E254     		strb	r2, [r4, r3]
6905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1606              		.loc 1 6905 9 view .LVU479
6907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 1607              		.loc 1 6907 9 view .LVU480
6907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 1608              		.loc 1 6907 16 is_stmt 0 view .LVU481
 1609 0094 0120     		movs	r0, #1
 1610 0096 00E0     		b	.L129
 1611              	.L140:
6911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 1612              		.loc 1 6911 10 view .LVU482
 1613 0098 0020     		movs	r0, #0
 1614              	.L129:
6912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1615              		.loc 1 6912 1 view .LVU483
 1616              		@ sp needed
 1617              	.LVL127:
 1618              	.LVL128:
 1619              	.LVL129:
6912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 163


 1620              		.loc 1 6912 1 view .LVU484
 1621 009a 70BD     		pop	{r4, r5, r6, pc}
 1622              	.LVL130:
 1623              	.L136:
6854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 1624              		.loc 1 6854 14 view .LVU485
 1625 009c 0120     		movs	r0, #1
 1626 009e FCE7     		b	.L129
 1627              	.L143:
 1628              		.align	2
 1629              	.L142:
 1630 00a0 00E800FE 		.word	-33495040
 1631              		.cfi_endproc
 1632              	.LFE115:
 1634              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 1635              		.align	1
 1636              		.weak	HAL_I2C_MspInit
 1637              		.syntax unified
 1638              		.code	16
 1639              		.thumb_func
 1641              	HAL_I2C_MspInit:
 1642              	.LVL131:
 1643              	.LFB42:
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1644              		.loc 1 692 1 is_stmt 1 view -0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 0
 1647              		@ frame_needed = 0, uses_anonymous_args = 0
 1648              		@ link register save eliminated.
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1649              		.loc 1 694 3 view .LVU487
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1650              		.loc 1 699 1 is_stmt 0 view .LVU488
 1651              		@ sp needed
 1652 0000 7047     		bx	lr
 1653              		.cfi_endproc
 1654              	.LFE42:
 1656              		.section	.text.HAL_I2C_Init,"ax",%progbits
 1657              		.align	1
 1658              		.global	HAL_I2C_Init
 1659              		.syntax unified
 1660              		.code	16
 1661              		.thumb_func
 1663              	HAL_I2C_Init:
 1664              	.LVL132:
 1665              	.LFB40:
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1666              		.loc 1 536 1 is_stmt 1 view -0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 0
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1670              		.loc 1 536 1 is_stmt 0 view .LVU490
 1671 0000 10B5     		push	{r4, lr}
 1672              	.LCFI15:
 1673              		.cfi_def_cfa_offset 8
 1674              		.cfi_offset 4, -8
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 164


 1675              		.cfi_offset 14, -4
 1676 0002 041E     		subs	r4, r0, #0
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1677              		.loc 1 538 3 is_stmt 1 view .LVU491
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1678              		.loc 1 538 6 is_stmt 0 view .LVU492
 1679 0004 59D0     		beq	.L151
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 1680              		.loc 1 544 3 is_stmt 1 view .LVU493
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 1681              		.loc 1 545 3 view .LVU494
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 1682              		.loc 1 546 3 view .LVU495
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 1683              		.loc 1 547 3 view .LVU496
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 1684              		.loc 1 548 3 view .LVU497
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 1685              		.loc 1 549 3 view .LVU498
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 1686              		.loc 1 550 3 view .LVU499
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1687              		.loc 1 551 3 view .LVU500
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1688              		.loc 1 553 3 view .LVU501
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1689              		.loc 1 553 11 is_stmt 0 view .LVU502
 1690 0006 4123     		movs	r3, #65
 1691 0008 C35C     		ldrb	r3, [r0, r3]
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1692              		.loc 1 553 6 view .LVU503
 1693 000a 002B     		cmp	r3, #0
 1694 000c 43D0     		beq	.L152
 1695              	.LVL133:
 1696              	.L147:
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1697              		.loc 1 584 3 is_stmt 1 view .LVU504
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1698              		.loc 1 584 15 is_stmt 0 view .LVU505
 1699 000e 4123     		movs	r3, #65
 1700 0010 2422     		movs	r2, #36
 1701 0012 E254     		strb	r2, [r4, r3]
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1702              		.loc 1 587 3 is_stmt 1 view .LVU506
 1703 0014 2268     		ldr	r2, [r4]
 1704 0016 1368     		ldr	r3, [r2]
 1705 0018 0121     		movs	r1, #1
 1706 001a 8B43     		bics	r3, r1
 1707 001c 1360     		str	r3, [r2]
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1708              		.loc 1 591 3 view .LVU507
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1709              		.loc 1 591 39 is_stmt 0 view .LVU508
 1710 001e 6368     		ldr	r3, [r4, #4]
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1711              		.loc 1 591 7 view .LVU509
 1712 0020 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 165


 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1713              		.loc 1 591 47 view .LVU510
 1714 0022 2749     		ldr	r1, .L155
 1715 0024 0B40     		ands	r3, r1
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1716              		.loc 1 591 27 view .LVU511
 1717 0026 1361     		str	r3, [r2, #16]
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1718              		.loc 1 595 3 is_stmt 1 view .LVU512
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1719              		.loc 1 595 7 is_stmt 0 view .LVU513
 1720 0028 2268     		ldr	r2, [r4]
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1721              		.loc 1 595 24 view .LVU514
 1722 002a 9368     		ldr	r3, [r2, #8]
 1723 002c 2549     		ldr	r1, .L155+4
 1724 002e 0B40     		ands	r3, r1
 1725 0030 9360     		str	r3, [r2, #8]
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1726              		.loc 1 598 3 is_stmt 1 view .LVU515
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1727              		.loc 1 598 17 is_stmt 0 view .LVU516
 1728 0032 E368     		ldr	r3, [r4, #12]
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1729              		.loc 1 598 6 view .LVU517
 1730 0034 012B     		cmp	r3, #1
 1731 0036 34D0     		beq	.L153
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1732              		.loc 1 604 5 is_stmt 1 view .LVU518
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1733              		.loc 1 604 75 is_stmt 0 view .LVU519
 1734 0038 A168     		ldr	r1, [r4, #8]
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1735              		.loc 1 604 9 view .LVU520
 1736 003a 2268     		ldr	r2, [r4]
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1737              		.loc 1 604 63 view .LVU521
 1738 003c 8423     		movs	r3, #132
 1739 003e 1B02     		lsls	r3, r3, #8
 1740 0040 0B43     		orrs	r3, r1
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1741              		.loc 1 604 26 view .LVU522
 1742 0042 9360     		str	r3, [r2, #8]
 1743              	.L149:
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1744              		.loc 1 609 3 is_stmt 1 view .LVU523
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1745              		.loc 1 609 17 is_stmt 0 view .LVU524
 1746 0044 E368     		ldr	r3, [r4, #12]
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1747              		.loc 1 609 6 view .LVU525
 1748 0046 022B     		cmp	r3, #2
 1749 0048 32D0     		beq	.L154
 1750              	.L150:
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1751              		.loc 1 614 3 is_stmt 1 view .LVU526
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 166


 1752              		.loc 1 614 7 is_stmt 0 view .LVU527
 1753 004a 2268     		ldr	r2, [r4]
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1754              		.loc 1 614 23 view .LVU528
 1755 004c 5168     		ldr	r1, [r2, #4]
 1756 004e 1E4B     		ldr	r3, .L155+8
 1757 0050 0B43     		orrs	r3, r1
 1758 0052 5360     		str	r3, [r2, #4]
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1759              		.loc 1 618 3 is_stmt 1 view .LVU529
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1760              		.loc 1 618 7 is_stmt 0 view .LVU530
 1761 0054 2268     		ldr	r2, [r4]
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1762              		.loc 1 618 24 view .LVU531
 1763 0056 D368     		ldr	r3, [r2, #12]
 1764 0058 1A49     		ldr	r1, .L155+4
 1765 005a 0B40     		ands	r3, r1
 1766 005c D360     		str	r3, [r2, #12]
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                           (hi2c->Init.OwnAddress2Masks << 8));
 1767              		.loc 1 621 3 is_stmt 1 view .LVU532
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                           (hi2c->Init.OwnAddress2Masks << 8));
 1768              		.loc 1 621 37 is_stmt 0 view .LVU533
 1769 005e 2369     		ldr	r3, [r4, #16]
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                           (hi2c->Init.OwnAddress2Masks << 8));
 1770              		.loc 1 621 66 view .LVU534
 1771 0060 6269     		ldr	r2, [r4, #20]
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                           (hi2c->Init.OwnAddress2Masks << 8));
 1772              		.loc 1 621 54 view .LVU535
 1773 0062 1343     		orrs	r3, r2
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1774              		.loc 1 622 38 view .LVU536
 1775 0064 A269     		ldr	r2, [r4, #24]
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1776              		.loc 1 622 56 view .LVU537
 1777 0066 1202     		lsls	r2, r2, #8
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                           (hi2c->Init.OwnAddress2Masks << 8));
 1778              		.loc 1 621 7 view .LVU538
 1779 0068 2168     		ldr	r1, [r4]
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                           (hi2c->Init.OwnAddress2Masks << 8));
 1780              		.loc 1 621 79 view .LVU539
 1781 006a 1343     		orrs	r3, r2
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                           (hi2c->Init.OwnAddress2Masks << 8));
 1782              		.loc 1 621 24 view .LVU540
 1783 006c CB60     		str	r3, [r1, #12]
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1784              		.loc 1 626 3 is_stmt 1 view .LVU541
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1785              		.loc 1 626 36 is_stmt 0 view .LVU542
 1786 006e E369     		ldr	r3, [r4, #28]
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1787              		.loc 1 626 65 view .LVU543
 1788 0070 216A     		ldr	r1, [r4, #32]
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1789              		.loc 1 626 7 view .LVU544
 1790 0072 2268     		ldr	r2, [r4]
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 167


 1791              		.loc 1 626 53 view .LVU545
 1792 0074 0B43     		orrs	r3, r1
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1793              		.loc 1 626 23 view .LVU546
 1794 0076 1360     		str	r3, [r2]
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1795              		.loc 1 629 3 is_stmt 1 view .LVU547
 1796 0078 2268     		ldr	r2, [r4]
 1797 007a 1368     		ldr	r3, [r2]
 1798 007c 0121     		movs	r1, #1
 1799 007e 0B43     		orrs	r3, r1
 1800 0080 1360     		str	r3, [r2]
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1801              		.loc 1 631 3 view .LVU548
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1802              		.loc 1 631 19 is_stmt 0 view .LVU549
 1803 0082 0023     		movs	r3, #0
 1804 0084 6364     		str	r3, [r4, #68]
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1805              		.loc 1 632 3 is_stmt 1 view .LVU550
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1806              		.loc 1 632 15 is_stmt 0 view .LVU551
 1807 0086 4122     		movs	r2, #65
 1808 0088 1F31     		adds	r1, r1, #31
 1809 008a A154     		strb	r1, [r4, r2]
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1810              		.loc 1 633 3 is_stmt 1 view .LVU552
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1811              		.loc 1 633 23 is_stmt 0 view .LVU553
 1812 008c 2363     		str	r3, [r4, #48]
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1813              		.loc 1 634 3 is_stmt 1 view .LVU554
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1814              		.loc 1 634 14 is_stmt 0 view .LVU555
 1815 008e 0132     		adds	r2, r2, #1
 1816 0090 A354     		strb	r3, [r4, r2]
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 1817              		.loc 1 636 3 is_stmt 1 view .LVU556
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 1818              		.loc 1 636 10 is_stmt 0 view .LVU557
 1819 0092 0020     		movs	r0, #0
 1820              	.L146:
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1821              		.loc 1 637 1 view .LVU558
 1822              		@ sp needed
 1823              	.LVL134:
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1824              		.loc 1 637 1 view .LVU559
 1825 0094 10BD     		pop	{r4, pc}
 1826              	.LVL135:
 1827              	.L152:
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1828              		.loc 1 556 5 is_stmt 1 view .LVU560
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1829              		.loc 1 556 16 is_stmt 0 view .LVU561
 1830 0096 4033     		adds	r3, r3, #64
 1831 0098 0022     		movs	r2, #0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 168


 1832 009a C254     		strb	r2, [r0, r3]
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1833              		.loc 1 580 5 is_stmt 1 view .LVU562
 1834 009c FFF7FEFF 		bl	HAL_I2C_MspInit
 1835              	.LVL136:
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1836              		.loc 1 580 5 is_stmt 0 view .LVU563
 1837 00a0 B5E7     		b	.L147
 1838              	.L153:
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1839              		.loc 1 600 5 is_stmt 1 view .LVU564
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1840              		.loc 1 600 56 is_stmt 0 view .LVU565
 1841 00a2 A168     		ldr	r1, [r4, #8]
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1842              		.loc 1 600 9 view .LVU566
 1843 00a4 2268     		ldr	r2, [r4]
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1844              		.loc 1 600 44 view .LVU567
 1845 00a6 8023     		movs	r3, #128
 1846 00a8 1B02     		lsls	r3, r3, #8
 1847 00aa 0B43     		orrs	r3, r1
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1848              		.loc 1 600 26 view .LVU568
 1849 00ac 9360     		str	r3, [r2, #8]
 1850 00ae C9E7     		b	.L149
 1851              	.L154:
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1852              		.loc 1 611 5 is_stmt 1 view .LVU569
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1853              		.loc 1 611 9 is_stmt 0 view .LVU570
 1854 00b0 2368     		ldr	r3, [r4]
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1855              		.loc 1 611 25 view .LVU571
 1856 00b2 8022     		movs	r2, #128
 1857 00b4 1201     		lsls	r2, r2, #4
 1858 00b6 5A60     		str	r2, [r3, #4]
 1859 00b8 C7E7     		b	.L150
 1860              	.LVL137:
 1861              	.L151:
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1862              		.loc 1 540 12 view .LVU572
 1863 00ba 0120     		movs	r0, #1
 1864              	.LVL138:
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1865              		.loc 1 540 12 view .LVU573
 1866 00bc EAE7     		b	.L146
 1867              	.L156:
 1868 00be C046     		.align	2
 1869              	.L155:
 1870 00c0 FFFFFFF0 		.word	-251658241
 1871 00c4 FF7FFFFF 		.word	-32769
 1872 00c8 00800002 		.word	33587200
 1873              		.cfi_endproc
 1874              	.LFE40:
 1876              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 1877              		.align	1
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 169


 1878              		.weak	HAL_I2C_MspDeInit
 1879              		.syntax unified
 1880              		.code	16
 1881              		.thumb_func
 1883              	HAL_I2C_MspDeInit:
 1884              	.LVL139:
 1885              	.LFB43:
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1886              		.loc 1 708 1 is_stmt 1 view -0
 1887              		.cfi_startproc
 1888              		@ args = 0, pretend = 0, frame = 0
 1889              		@ frame_needed = 0, uses_anonymous_args = 0
 1890              		@ link register save eliminated.
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1891              		.loc 1 710 3 view .LVU575
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1892              		.loc 1 715 1 is_stmt 0 view .LVU576
 1893              		@ sp needed
 1894 0000 7047     		bx	lr
 1895              		.cfi_endproc
 1896              	.LFE43:
 1898              		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 1899              		.align	1
 1900              		.global	HAL_I2C_DeInit
 1901              		.syntax unified
 1902              		.code	16
 1903              		.thumb_func
 1905              	HAL_I2C_DeInit:
 1906              	.LVL140:
 1907              	.LFB41:
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1908              		.loc 1 646 1 is_stmt 1 view -0
 1909              		.cfi_startproc
 1910              		@ args = 0, pretend = 0, frame = 0
 1911              		@ frame_needed = 0, uses_anonymous_args = 0
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1912              		.loc 1 646 1 is_stmt 0 view .LVU578
 1913 0000 70B5     		push	{r4, r5, r6, lr}
 1914              	.LCFI16:
 1915              		.cfi_def_cfa_offset 16
 1916              		.cfi_offset 4, -16
 1917              		.cfi_offset 5, -12
 1918              		.cfi_offset 6, -8
 1919              		.cfi_offset 14, -4
 1920 0002 041E     		subs	r4, r0, #0
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1921              		.loc 1 648 3 is_stmt 1 view .LVU579
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 1922              		.loc 1 648 6 is_stmt 0 view .LVU580
 1923 0004 13D0     		beq	.L160
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1924              		.loc 1 654 3 is_stmt 1 view .LVU581
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1925              		.loc 1 656 3 view .LVU582
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1926              		.loc 1 656 15 is_stmt 0 view .LVU583
 1927 0006 4125     		movs	r5, #65
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 170


 1928 0008 2423     		movs	r3, #36
 1929 000a 4355     		strb	r3, [r0, r5]
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1930              		.loc 1 659 3 is_stmt 1 view .LVU584
 1931 000c 0268     		ldr	r2, [r0]
 1932 000e 1368     		ldr	r3, [r2]
 1933 0010 0121     		movs	r1, #1
 1934 0012 8B43     		bics	r3, r1
 1935 0014 1360     		str	r3, [r2]
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1936              		.loc 1 671 3 view .LVU585
 1937 0016 FFF7FEFF 		bl	HAL_I2C_MspDeInit
 1938              	.LVL141:
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1939              		.loc 1 674 3 view .LVU586
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1940              		.loc 1 674 19 is_stmt 0 view .LVU587
 1941 001a 0023     		movs	r3, #0
 1942 001c 6364     		str	r3, [r4, #68]
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1943              		.loc 1 675 3 is_stmt 1 view .LVU588
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1944              		.loc 1 675 15 is_stmt 0 view .LVU589
 1945 001e 6355     		strb	r3, [r4, r5]
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1946              		.loc 1 676 3 is_stmt 1 view .LVU590
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1947              		.loc 1 676 23 is_stmt 0 view .LVU591
 1948 0020 2363     		str	r3, [r4, #48]
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1949              		.loc 1 677 3 is_stmt 1 view .LVU592
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1950              		.loc 1 677 14 is_stmt 0 view .LVU593
 1951 0022 4222     		movs	r2, #66
 1952 0024 A354     		strb	r3, [r4, r2]
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1953              		.loc 1 680 3 is_stmt 1 view .LVU594
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1954              		.loc 1 680 3 view .LVU595
 1955 0026 023A     		subs	r2, r2, #2
 1956 0028 A354     		strb	r3, [r4, r2]
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1957              		.loc 1 680 3 view .LVU596
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 1958              		.loc 1 682 3 view .LVU597
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 1959              		.loc 1 682 10 is_stmt 0 view .LVU598
 1960 002a 0020     		movs	r0, #0
 1961              	.L159:
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1962              		.loc 1 683 1 view .LVU599
 1963              		@ sp needed
 1964              	.LVL142:
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 1965              		.loc 1 683 1 view .LVU600
 1966 002c 70BD     		pop	{r4, r5, r6, pc}
 1967              	.LVL143:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 171


 1968              	.L160:
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1969              		.loc 1 650 12 view .LVU601
 1970 002e 0120     		movs	r0, #1
 1971              	.LVL144:
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 1972              		.loc 1 650 12 view .LVU602
 1973 0030 FCE7     		b	.L159
 1974              		.cfi_endproc
 1975              	.LFE41:
 1977              		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 1978              		.align	1
 1979              		.global	HAL_I2C_Master_Transmit
 1980              		.syntax unified
 1981              		.code	16
 1982              		.thumb_func
 1984              	HAL_I2C_Master_Transmit:
 1985              	.LVL145:
 1986              	.LFB44:
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
 1987              		.loc 1 1116 1 is_stmt 1 view -0
 1988              		.cfi_startproc
 1989              		@ args = 4, pretend = 0, frame = 8
 1990              		@ frame_needed = 0, uses_anonymous_args = 0
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
 1991              		.loc 1 1116 1 is_stmt 0 view .LVU604
 1992 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1993              	.LCFI17:
 1994              		.cfi_def_cfa_offset 20
 1995              		.cfi_offset 4, -20
 1996              		.cfi_offset 5, -16
 1997              		.cfi_offset 6, -12
 1998              		.cfi_offset 7, -8
 1999              		.cfi_offset 14, -4
 2000 0002 85B0     		sub	sp, sp, #20
 2001              	.LCFI18:
 2002              		.cfi_def_cfa_offset 40
 2003 0004 0400     		movs	r4, r0
 2004 0006 0F00     		movs	r7, r1
 2005 0008 0292     		str	r2, [sp, #8]
 2006 000a 0393     		str	r3, [sp, #12]
 2007 000c 0A9D     		ldr	r5, [sp, #40]
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2008              		.loc 1 1117 3 is_stmt 1 view .LVU605
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2009              		.loc 1 1119 3 view .LVU606
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2010              		.loc 1 1119 11 is_stmt 0 view .LVU607
 2011 000e 4123     		movs	r3, #65
 2012              	.LVL146:
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2013              		.loc 1 1119 11 view .LVU608
 2014 0010 C35C     		ldrb	r3, [r0, r3]
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2015              		.loc 1 1119 6 view .LVU609
 2016 0012 202B     		cmp	r3, #32
 2017 0014 00D0     		beq	.LCB1952
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 172


 2018 0016 9BE0     		b	.L169	@long jump
 2019              	.LCB1952:
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2020              		.loc 1 1122 5 is_stmt 1 view .LVU610
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2021              		.loc 1 1122 5 view .LVU611
 2022 0018 2033     		adds	r3, r3, #32
 2023 001a C35C     		ldrb	r3, [r0, r3]
 2024 001c 012B     		cmp	r3, #1
 2025 001e 00D1     		bne	.LCB1958
 2026 0020 99E0     		b	.L170	@long jump
 2027              	.LCB1958:
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2028              		.loc 1 1122 5 discriminator 2 view .LVU612
 2029 0022 4023     		movs	r3, #64
 2030 0024 0122     		movs	r2, #1
 2031              	.LVL147:
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2032              		.loc 1 1122 5 is_stmt 0 discriminator 2 view .LVU613
 2033 0026 C254     		strb	r2, [r0, r3]
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2034              		.loc 1 1122 5 is_stmt 1 discriminator 2 view .LVU614
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2035              		.loc 1 1125 5 discriminator 2 view .LVU615
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2036              		.loc 1 1125 17 is_stmt 0 discriminator 2 view .LVU616
 2037 0028 FFF7FEFF 		bl	HAL_GetTick
 2038              	.LVL148:
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2039              		.loc 1 1125 17 discriminator 2 view .LVU617
 2040 002c 0600     		movs	r6, r0
 2041              	.LVL149:
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2042              		.loc 1 1127 5 is_stmt 1 discriminator 2 view .LVU618
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2043              		.loc 1 1127 9 is_stmt 0 discriminator 2 view .LVU619
 2044 002e 8021     		movs	r1, #128
 2045 0030 0090     		str	r0, [sp]
 2046 0032 1923     		movs	r3, #25
 2047 0034 0122     		movs	r2, #1
 2048 0036 0902     		lsls	r1, r1, #8
 2049 0038 2000     		movs	r0, r4
 2050              	.LVL150:
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2051              		.loc 1 1127 9 discriminator 2 view .LVU620
 2052 003a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2053              	.LVL151:
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2054              		.loc 1 1127 8 discriminator 2 view .LVU621
 2055 003e 0028     		cmp	r0, #0
 2056 0040 00D0     		beq	.LCB1982
 2057 0042 8AE0     		b	.L171	@long jump
 2058              	.LCB1982:
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 2059              		.loc 1 1132 5 is_stmt 1 view .LVU622
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 2060              		.loc 1 1132 21 is_stmt 0 view .LVU623
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 173


 2061 0044 4123     		movs	r3, #65
 2062 0046 2122     		movs	r2, #33
 2063 0048 E254     		strb	r2, [r4, r3]
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2064              		.loc 1 1133 5 is_stmt 1 view .LVU624
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2065              		.loc 1 1133 21 is_stmt 0 view .LVU625
 2066 004a 0133     		adds	r3, r3, #1
 2067 004c 113A     		subs	r2, r2, #17
 2068 004e E254     		strb	r2, [r4, r3]
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2069              		.loc 1 1134 5 is_stmt 1 view .LVU626
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2070              		.loc 1 1134 21 is_stmt 0 view .LVU627
 2071 0050 0023     		movs	r3, #0
 2072 0052 6364     		str	r3, [r4, #68]
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2073              		.loc 1 1137 5 is_stmt 1 view .LVU628
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2074              		.loc 1 1137 21 is_stmt 0 view .LVU629
 2075 0054 029A     		ldr	r2, [sp, #8]
 2076 0056 6262     		str	r2, [r4, #36]
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2077              		.loc 1 1138 5 is_stmt 1 view .LVU630
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2078              		.loc 1 1138 21 is_stmt 0 view .LVU631
 2079 0058 039A     		ldr	r2, [sp, #12]
 2080 005a 6285     		strh	r2, [r4, #42]
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2081              		.loc 1 1139 5 is_stmt 1 view .LVU632
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2082              		.loc 1 1139 21 is_stmt 0 view .LVU633
 2083 005c 6363     		str	r3, [r4, #52]
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2084              		.loc 1 1143 5 is_stmt 1 view .LVU634
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2085              		.loc 1 1143 13 is_stmt 0 view .LVU635
 2086 005e 638D     		ldrh	r3, [r4, #42]
 2087 0060 9BB2     		uxth	r3, r3
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2088              		.loc 1 1143 8 view .LVU636
 2089 0062 FF2B     		cmp	r3, #255
 2090 0064 0BD9     		bls	.L163
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 2091              		.loc 1 1145 7 is_stmt 1 view .LVU637
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 2092              		.loc 1 1145 22 is_stmt 0 view .LVU638
 2093 0066 FF23     		movs	r3, #255
 2094 0068 2385     		strh	r3, [r4, #40]
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_WRITE);
 2095              		.loc 1 1146 7 is_stmt 1 view .LVU639
 2096 006a 7F3B     		subs	r3, r3, #127
 2097 006c 3F4A     		ldr	r2, .L176
 2098 006e 0092     		str	r2, [sp]
 2099 0070 5B04     		lsls	r3, r3, #17
 2100 0072 FF22     		movs	r2, #255
 2101 0074 3900     		movs	r1, r7
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 174


 2102 0076 2000     		movs	r0, r4
 2103 0078 FFF7FEFF 		bl	I2C_TransferConfig
 2104              	.LVL152:
 2105 007c 18E0     		b	.L165
 2106              	.L163:
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2107              		.loc 1 1151 7 view .LVU640
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2108              		.loc 1 1151 28 is_stmt 0 view .LVU641
 2109 007e 628D     		ldrh	r2, [r4, #42]
 2110 0080 92B2     		uxth	r2, r2
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2111              		.loc 1 1151 22 view .LVU642
 2112 0082 2285     		strh	r2, [r4, #40]
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_WRITE);
 2113              		.loc 1 1152 7 is_stmt 1 view .LVU643
 2114 0084 8023     		movs	r3, #128
 2115 0086 D2B2     		uxtb	r2, r2
 2116 0088 3849     		ldr	r1, .L176
 2117 008a 0091     		str	r1, [sp]
 2118 008c 9B04     		lsls	r3, r3, #18
 2119 008e 3900     		movs	r1, r7
 2120 0090 2000     		movs	r0, r4
 2121 0092 FFF7FEFF 		bl	I2C_TransferConfig
 2122              	.LVL153:
 2123 0096 0BE0     		b	.L165
 2124              	.L167:
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2125              		.loc 1 1188 11 view .LVU644
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2126              		.loc 1 1188 32 is_stmt 0 view .LVU645
 2127 0098 628D     		ldrh	r2, [r4, #42]
 2128 009a 92B2     		uxth	r2, r2
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2129              		.loc 1 1188 26 view .LVU646
 2130 009c 2285     		strh	r2, [r4, #40]
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
 2131              		.loc 1 1189 11 is_stmt 1 view .LVU647
 2132 009e 8023     		movs	r3, #128
 2133 00a0 D2B2     		uxtb	r2, r2
 2134 00a2 0021     		movs	r1, #0
 2135 00a4 0091     		str	r1, [sp]
 2136 00a6 9B04     		lsls	r3, r3, #18
 2137 00a8 3900     		movs	r1, r7
 2138 00aa 2000     		movs	r0, r4
 2139 00ac FFF7FEFF 		bl	I2C_TransferConfig
 2140              	.LVL154:
 2141              	.L165:
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2142              		.loc 1 1156 28 view .LVU648
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2143              		.loc 1 1156 16 is_stmt 0 view .LVU649
 2144 00b0 638D     		ldrh	r3, [r4, #42]
 2145 00b2 9BB2     		uxth	r3, r3
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2146              		.loc 1 1156 28 view .LVU650
 2147 00b4 002B     		cmp	r3, #0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 175


 2148 00b6 34D0     		beq	.L175
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2149              		.loc 1 1159 7 is_stmt 1 view .LVU651
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2150              		.loc 1 1159 11 is_stmt 0 view .LVU652
 2151 00b8 3200     		movs	r2, r6
 2152 00ba 2900     		movs	r1, r5
 2153 00bc 2000     		movs	r0, r4
 2154 00be FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 2155              	.LVL155:
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2156              		.loc 1 1159 10 view .LVU653
 2157 00c2 0028     		cmp	r0, #0
 2158 00c4 4BD1     		bne	.L172
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2159              		.loc 1 1164 7 is_stmt 1 view .LVU654
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2160              		.loc 1 1164 35 is_stmt 0 view .LVU655
 2161 00c6 626A     		ldr	r2, [r4, #36]
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2162              		.loc 1 1164 11 view .LVU656
 2163 00c8 2368     		ldr	r3, [r4]
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2164              		.loc 1 1164 30 view .LVU657
 2165 00ca 1278     		ldrb	r2, [r2]
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2166              		.loc 1 1164 28 view .LVU658
 2167 00cc 9A62     		str	r2, [r3, #40]
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2168              		.loc 1 1167 7 is_stmt 1 view .LVU659
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2169              		.loc 1 1167 11 is_stmt 0 view .LVU660
 2170 00ce 636A     		ldr	r3, [r4, #36]
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2171              		.loc 1 1167 21 view .LVU661
 2172 00d0 0133     		adds	r3, r3, #1
 2173 00d2 6362     		str	r3, [r4, #36]
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 2174              		.loc 1 1169 7 is_stmt 1 view .LVU662
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 2175              		.loc 1 1169 11 is_stmt 0 view .LVU663
 2176 00d4 638D     		ldrh	r3, [r4, #42]
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 2177              		.loc 1 1169 22 view .LVU664
 2178 00d6 013B     		subs	r3, r3, #1
 2179 00d8 9BB2     		uxth	r3, r3
 2180 00da 6385     		strh	r3, [r4, #42]
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2181              		.loc 1 1170 7 is_stmt 1 view .LVU665
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2182              		.loc 1 1170 11 is_stmt 0 view .LVU666
 2183 00dc 238D     		ldrh	r3, [r4, #40]
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2184              		.loc 1 1170 21 view .LVU667
 2185 00de 013B     		subs	r3, r3, #1
 2186 00e0 9BB2     		uxth	r3, r3
 2187 00e2 2385     		strh	r3, [r4, #40]
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 176


1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2188              		.loc 1 1172 7 is_stmt 1 view .LVU668
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2189              		.loc 1 1172 16 is_stmt 0 view .LVU669
 2190 00e4 628D     		ldrh	r2, [r4, #42]
 2191 00e6 92B2     		uxth	r2, r2
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2192              		.loc 1 1172 10 view .LVU670
 2193 00e8 002A     		cmp	r2, #0
 2194 00ea E1D0     		beq	.L165
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2195              		.loc 1 1172 35 discriminator 1 view .LVU671
 2196 00ec 002B     		cmp	r3, #0
 2197 00ee DFD1     		bne	.L165
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2198              		.loc 1 1175 9 is_stmt 1 view .LVU672
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2199              		.loc 1 1175 13 is_stmt 0 view .LVU673
 2200 00f0 0096     		str	r6, [sp]
 2201 00f2 2B00     		movs	r3, r5
 2202 00f4 0022     		movs	r2, #0
 2203 00f6 8021     		movs	r1, #128
 2204 00f8 2000     		movs	r0, r4
 2205 00fa FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2206              	.LVL156:
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2207              		.loc 1 1175 12 view .LVU674
 2208 00fe 0028     		cmp	r0, #0
 2209 0100 2FD1     		bne	.L173
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2210              		.loc 1 1180 9 is_stmt 1 view .LVU675
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2211              		.loc 1 1180 17 is_stmt 0 view .LVU676
 2212 0102 638D     		ldrh	r3, [r4, #42]
 2213 0104 9BB2     		uxth	r3, r3
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2214              		.loc 1 1180 12 view .LVU677
 2215 0106 FF2B     		cmp	r3, #255
 2216 0108 C6D9     		bls	.L167
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 2217              		.loc 1 1182 11 is_stmt 1 view .LVU678
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 2218              		.loc 1 1182 26 is_stmt 0 view .LVU679
 2219 010a FF23     		movs	r3, #255
 2220 010c 2385     		strh	r3, [r4, #40]
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
 2221              		.loc 1 1183 11 is_stmt 1 view .LVU680
 2222 010e 7F3B     		subs	r3, r3, #127
 2223 0110 0022     		movs	r2, #0
 2224 0112 0092     		str	r2, [sp]
 2225 0114 5B04     		lsls	r3, r3, #17
 2226 0116 FF32     		adds	r2, r2, #255
 2227 0118 3900     		movs	r1, r7
 2228 011a 2000     		movs	r0, r4
 2229 011c FFF7FEFF 		bl	I2C_TransferConfig
 2230              	.LVL157:
 2231 0120 C6E7     		b	.L165
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 177


 2232              	.L175:
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2233              		.loc 1 1197 5 view .LVU681
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2234              		.loc 1 1197 9 is_stmt 0 view .LVU682
 2235 0122 3200     		movs	r2, r6
 2236 0124 2900     		movs	r1, r5
 2237 0126 2000     		movs	r0, r4
 2238 0128 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2239              	.LVL158:
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2240              		.loc 1 1197 8 view .LVU683
 2241 012c 0028     		cmp	r0, #0
 2242 012e 1AD1     		bne	.L174
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2243              		.loc 1 1203 5 is_stmt 1 view .LVU684
 2244 0130 2368     		ldr	r3, [r4]
 2245 0132 2022     		movs	r2, #32
 2246 0134 DA61     		str	r2, [r3, #28]
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2247              		.loc 1 1206 5 view .LVU685
 2248 0136 2168     		ldr	r1, [r4]
 2249 0138 4B68     		ldr	r3, [r1, #4]
 2250 013a 0D4D     		ldr	r5, .L176+4
 2251 013c 2B40     		ands	r3, r5
 2252 013e 4B60     		str	r3, [r1, #4]
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2253              		.loc 1 1208 5 view .LVU686
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2254              		.loc 1 1208 17 is_stmt 0 view .LVU687
 2255 0140 4123     		movs	r3, #65
 2256 0142 E254     		strb	r2, [r4, r3]
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2257              		.loc 1 1209 5 is_stmt 1 view .LVU688
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2258              		.loc 1 1209 17 is_stmt 0 view .LVU689
 2259 0144 0023     		movs	r3, #0
 2260 0146 2232     		adds	r2, r2, #34
 2261 0148 A354     		strb	r3, [r4, r2]
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2262              		.loc 1 1212 5 is_stmt 1 view .LVU690
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2263              		.loc 1 1212 5 view .LVU691
 2264 014a 023A     		subs	r2, r2, #2
 2265 014c A354     		strb	r3, [r4, r2]
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2266              		.loc 1 1212 5 view .LVU692
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 2267              		.loc 1 1214 5 view .LVU693
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 2268              		.loc 1 1214 12 is_stmt 0 view .LVU694
 2269 014e 00E0     		b	.L162
 2270              	.LVL159:
 2271              	.L169:
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 2272              		.loc 1 1218 12 view .LVU695
 2273 0150 0220     		movs	r0, #2
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 178


 2274              	.LVL160:
 2275              	.L162:
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2276              		.loc 1 1220 1 view .LVU696
 2277 0152 05B0     		add	sp, sp, #20
 2278              		@ sp needed
 2279              	.LVL161:
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2280              		.loc 1 1220 1 view .LVU697
 2281 0154 F0BD     		pop	{r4, r5, r6, r7, pc}
 2282              	.LVL162:
 2283              	.L170:
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2284              		.loc 1 1122 5 view .LVU698
 2285 0156 0220     		movs	r0, #2
 2286              	.LVL163:
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2287              		.loc 1 1122 5 view .LVU699
 2288 0158 FBE7     		b	.L162
 2289              	.LVL164:
 2290              	.L171:
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2291              		.loc 1 1129 14 view .LVU700
 2292 015a 0120     		movs	r0, #1
 2293 015c F9E7     		b	.L162
 2294              	.L172:
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 2295              		.loc 1 1161 16 view .LVU701
 2296 015e 0120     		movs	r0, #1
 2297 0160 F7E7     		b	.L162
 2298              	.L173:
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 2299              		.loc 1 1177 18 view .LVU702
 2300 0162 0120     		movs	r0, #1
 2301 0164 F5E7     		b	.L162
 2302              	.L174:
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2303              		.loc 1 1199 14 view .LVU703
 2304 0166 0120     		movs	r0, #1
 2305 0168 F3E7     		b	.L162
 2306              	.L177:
 2307 016a C046     		.align	2
 2308              	.L176:
 2309 016c 00200080 		.word	-2147475456
 2310 0170 00E800FE 		.word	-33495040
 2311              		.cfi_endproc
 2312              	.LFE44:
 2314              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 2315              		.align	1
 2316              		.global	HAL_I2C_Master_Receive
 2317              		.syntax unified
 2318              		.code	16
 2319              		.thumb_func
 2321              	HAL_I2C_Master_Receive:
 2322              	.LVL165:
 2323              	.LFB45:
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 179


 2324              		.loc 1 1235 1 is_stmt 1 view -0
 2325              		.cfi_startproc
 2326              		@ args = 4, pretend = 0, frame = 8
 2327              		@ frame_needed = 0, uses_anonymous_args = 0
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
 2328              		.loc 1 1235 1 is_stmt 0 view .LVU705
 2329 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2330              	.LCFI19:
 2331              		.cfi_def_cfa_offset 20
 2332              		.cfi_offset 4, -20
 2333              		.cfi_offset 5, -16
 2334              		.cfi_offset 6, -12
 2335              		.cfi_offset 7, -8
 2336              		.cfi_offset 14, -4
 2337 0002 85B0     		sub	sp, sp, #20
 2338              	.LCFI20:
 2339              		.cfi_def_cfa_offset 40
 2340 0004 0400     		movs	r4, r0
 2341 0006 0F00     		movs	r7, r1
 2342 0008 0292     		str	r2, [sp, #8]
 2343 000a 0393     		str	r3, [sp, #12]
 2344 000c 0A9D     		ldr	r5, [sp, #40]
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2345              		.loc 1 1236 3 is_stmt 1 view .LVU706
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2346              		.loc 1 1238 3 view .LVU707
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2347              		.loc 1 1238 11 is_stmt 0 view .LVU708
 2348 000e 4123     		movs	r3, #65
 2349              	.LVL166:
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2350              		.loc 1 1238 11 view .LVU709
 2351 0010 C35C     		ldrb	r3, [r0, r3]
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2352              		.loc 1 1238 6 view .LVU710
 2353 0012 202B     		cmp	r3, #32
 2354 0014 00D0     		beq	.LCB2271
 2355 0016 9BE0     		b	.L186	@long jump
 2356              	.LCB2271:
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2357              		.loc 1 1241 5 is_stmt 1 view .LVU711
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2358              		.loc 1 1241 5 view .LVU712
 2359 0018 2033     		adds	r3, r3, #32
 2360 001a C35C     		ldrb	r3, [r0, r3]
 2361 001c 012B     		cmp	r3, #1
 2362 001e 00D1     		bne	.LCB2277
 2363 0020 99E0     		b	.L187	@long jump
 2364              	.LCB2277:
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2365              		.loc 1 1241 5 discriminator 2 view .LVU713
 2366 0022 4023     		movs	r3, #64
 2367 0024 0122     		movs	r2, #1
 2368              	.LVL167:
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2369              		.loc 1 1241 5 is_stmt 0 discriminator 2 view .LVU714
 2370 0026 C254     		strb	r2, [r0, r3]
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 180


1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2371              		.loc 1 1241 5 is_stmt 1 discriminator 2 view .LVU715
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2372              		.loc 1 1244 5 discriminator 2 view .LVU716
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2373              		.loc 1 1244 17 is_stmt 0 discriminator 2 view .LVU717
 2374 0028 FFF7FEFF 		bl	HAL_GetTick
 2375              	.LVL168:
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2376              		.loc 1 1244 17 discriminator 2 view .LVU718
 2377 002c 0600     		movs	r6, r0
 2378              	.LVL169:
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2379              		.loc 1 1246 5 is_stmt 1 discriminator 2 view .LVU719
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2380              		.loc 1 1246 9 is_stmt 0 discriminator 2 view .LVU720
 2381 002e 8021     		movs	r1, #128
 2382 0030 0090     		str	r0, [sp]
 2383 0032 1923     		movs	r3, #25
 2384 0034 0122     		movs	r2, #1
 2385 0036 0902     		lsls	r1, r1, #8
 2386 0038 2000     		movs	r0, r4
 2387              	.LVL170:
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2388              		.loc 1 1246 9 discriminator 2 view .LVU721
 2389 003a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2390              	.LVL171:
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2391              		.loc 1 1246 8 discriminator 2 view .LVU722
 2392 003e 0028     		cmp	r0, #0
 2393 0040 00D0     		beq	.LCB2301
 2394 0042 8AE0     		b	.L188	@long jump
 2395              	.LCB2301:
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 2396              		.loc 1 1251 5 is_stmt 1 view .LVU723
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 2397              		.loc 1 1251 21 is_stmt 0 view .LVU724
 2398 0044 4123     		movs	r3, #65
 2399 0046 2222     		movs	r2, #34
 2400 0048 E254     		strb	r2, [r4, r3]
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2401              		.loc 1 1252 5 is_stmt 1 view .LVU725
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2402              		.loc 1 1252 21 is_stmt 0 view .LVU726
 2403 004a 0133     		adds	r3, r3, #1
 2404 004c 123A     		subs	r2, r2, #18
 2405 004e E254     		strb	r2, [r4, r3]
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2406              		.loc 1 1253 5 is_stmt 1 view .LVU727
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2407              		.loc 1 1253 21 is_stmt 0 view .LVU728
 2408 0050 0023     		movs	r3, #0
 2409 0052 6364     		str	r3, [r4, #68]
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2410              		.loc 1 1256 5 is_stmt 1 view .LVU729
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2411              		.loc 1 1256 21 is_stmt 0 view .LVU730
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 181


 2412 0054 029A     		ldr	r2, [sp, #8]
 2413 0056 6262     		str	r2, [r4, #36]
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2414              		.loc 1 1257 5 is_stmt 1 view .LVU731
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2415              		.loc 1 1257 21 is_stmt 0 view .LVU732
 2416 0058 039A     		ldr	r2, [sp, #12]
 2417 005a 6285     		strh	r2, [r4, #42]
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2418              		.loc 1 1258 5 is_stmt 1 view .LVU733
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2419              		.loc 1 1258 21 is_stmt 0 view .LVU734
 2420 005c 6363     		str	r3, [r4, #52]
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2421              		.loc 1 1262 5 is_stmt 1 view .LVU735
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2422              		.loc 1 1262 13 is_stmt 0 view .LVU736
 2423 005e 638D     		ldrh	r3, [r4, #42]
 2424 0060 9BB2     		uxth	r3, r3
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2425              		.loc 1 1262 8 view .LVU737
 2426 0062 FF2B     		cmp	r3, #255
 2427 0064 0BD9     		bls	.L180
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 2428              		.loc 1 1264 7 is_stmt 1 view .LVU738
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 2429              		.loc 1 1264 22 is_stmt 0 view .LVU739
 2430 0066 FF23     		movs	r3, #255
 2431 0068 2385     		strh	r3, [r4, #40]
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_READ);
 2432              		.loc 1 1265 7 is_stmt 1 view .LVU740
 2433 006a 7F3B     		subs	r3, r3, #127
 2434 006c 3F4A     		ldr	r2, .L193
 2435 006e 0092     		str	r2, [sp]
 2436 0070 5B04     		lsls	r3, r3, #17
 2437 0072 FF22     		movs	r2, #255
 2438 0074 3900     		movs	r1, r7
 2439 0076 2000     		movs	r0, r4
 2440 0078 FFF7FEFF 		bl	I2C_TransferConfig
 2441              	.LVL172:
 2442 007c 18E0     		b	.L182
 2443              	.L180:
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2444              		.loc 1 1270 7 view .LVU741
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2445              		.loc 1 1270 28 is_stmt 0 view .LVU742
 2446 007e 628D     		ldrh	r2, [r4, #42]
 2447 0080 92B2     		uxth	r2, r2
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2448              		.loc 1 1270 22 view .LVU743
 2449 0082 2285     		strh	r2, [r4, #40]
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                          I2C_GENERATE_START_READ);
 2450              		.loc 1 1271 7 is_stmt 1 view .LVU744
 2451 0084 8023     		movs	r3, #128
 2452 0086 D2B2     		uxtb	r2, r2
 2453 0088 3849     		ldr	r1, .L193
 2454 008a 0091     		str	r1, [sp]
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 182


 2455 008c 9B04     		lsls	r3, r3, #18
 2456 008e 3900     		movs	r1, r7
 2457 0090 2000     		movs	r0, r4
 2458 0092 FFF7FEFF 		bl	I2C_TransferConfig
 2459              	.LVL173:
 2460 0096 0BE0     		b	.L182
 2461              	.L184:
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2462              		.loc 1 1308 11 view .LVU745
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2463              		.loc 1 1308 32 is_stmt 0 view .LVU746
 2464 0098 628D     		ldrh	r2, [r4, #42]
 2465 009a 92B2     		uxth	r2, r2
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 2466              		.loc 1 1308 26 view .LVU747
 2467 009c 2285     		strh	r2, [r4, #40]
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
 2468              		.loc 1 1309 11 is_stmt 1 view .LVU748
 2469 009e 8023     		movs	r3, #128
 2470 00a0 D2B2     		uxtb	r2, r2
 2471 00a2 0021     		movs	r1, #0
 2472 00a4 0091     		str	r1, [sp]
 2473 00a6 9B04     		lsls	r3, r3, #18
 2474 00a8 3900     		movs	r1, r7
 2475 00aa 2000     		movs	r0, r4
 2476 00ac FFF7FEFF 		bl	I2C_TransferConfig
 2477              	.LVL174:
 2478              	.L182:
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2479              		.loc 1 1275 28 view .LVU749
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2480              		.loc 1 1275 16 is_stmt 0 view .LVU750
 2481 00b0 638D     		ldrh	r3, [r4, #42]
 2482 00b2 9BB2     		uxth	r3, r3
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2483              		.loc 1 1275 28 view .LVU751
 2484 00b4 002B     		cmp	r3, #0
 2485 00b6 34D0     		beq	.L192
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2486              		.loc 1 1278 7 is_stmt 1 view .LVU752
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2487              		.loc 1 1278 11 is_stmt 0 view .LVU753
 2488 00b8 3200     		movs	r2, r6
 2489 00ba 2900     		movs	r1, r5
 2490 00bc 2000     		movs	r0, r4
 2491 00be FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 2492              	.LVL175:
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2493              		.loc 1 1278 10 view .LVU754
 2494 00c2 0028     		cmp	r0, #0
 2495 00c4 4BD1     		bne	.L189
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2496              		.loc 1 1284 7 is_stmt 1 view .LVU755
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2497              		.loc 1 1284 38 is_stmt 0 view .LVU756
 2498 00c6 2368     		ldr	r3, [r4]
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 183


 2499              		.loc 1 1284 48 view .LVU757
 2500 00c8 5A6A     		ldr	r2, [r3, #36]
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2501              		.loc 1 1284 12 view .LVU758
 2502 00ca 636A     		ldr	r3, [r4, #36]
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2503              		.loc 1 1284 23 view .LVU759
 2504 00cc 1A70     		strb	r2, [r3]
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2505              		.loc 1 1287 7 is_stmt 1 view .LVU760
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2506              		.loc 1 1287 11 is_stmt 0 view .LVU761
 2507 00ce 636A     		ldr	r3, [r4, #36]
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2508              		.loc 1 1287 21 view .LVU762
 2509 00d0 0133     		adds	r3, r3, #1
 2510 00d2 6362     		str	r3, [r4, #36]
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 2511              		.loc 1 1289 7 is_stmt 1 view .LVU763
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 2512              		.loc 1 1289 11 is_stmt 0 view .LVU764
 2513 00d4 238D     		ldrh	r3, [r4, #40]
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 2514              		.loc 1 1289 21 view .LVU765
 2515 00d6 013B     		subs	r3, r3, #1
 2516 00d8 9BB2     		uxth	r3, r3
 2517 00da 2385     		strh	r3, [r4, #40]
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2518              		.loc 1 1290 7 is_stmt 1 view .LVU766
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2519              		.loc 1 1290 11 is_stmt 0 view .LVU767
 2520 00dc 628D     		ldrh	r2, [r4, #42]
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2521              		.loc 1 1290 22 view .LVU768
 2522 00de 013A     		subs	r2, r2, #1
 2523 00e0 92B2     		uxth	r2, r2
 2524 00e2 6285     		strh	r2, [r4, #42]
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2525              		.loc 1 1292 7 is_stmt 1 view .LVU769
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2526              		.loc 1 1292 16 is_stmt 0 view .LVU770
 2527 00e4 628D     		ldrh	r2, [r4, #42]
 2528 00e6 92B2     		uxth	r2, r2
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2529              		.loc 1 1292 10 view .LVU771
 2530 00e8 002A     		cmp	r2, #0
 2531 00ea E1D0     		beq	.L182
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2532              		.loc 1 1292 35 discriminator 1 view .LVU772
 2533 00ec 002B     		cmp	r3, #0
 2534 00ee DFD1     		bne	.L182
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2535              		.loc 1 1295 9 is_stmt 1 view .LVU773
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2536              		.loc 1 1295 13 is_stmt 0 view .LVU774
 2537 00f0 0096     		str	r6, [sp]
 2538 00f2 2B00     		movs	r3, r5
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 184


 2539 00f4 0022     		movs	r2, #0
 2540 00f6 8021     		movs	r1, #128
 2541 00f8 2000     		movs	r0, r4
 2542 00fa FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2543              	.LVL176:
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2544              		.loc 1 1295 12 view .LVU775
 2545 00fe 0028     		cmp	r0, #0
 2546 0100 2FD1     		bne	.L190
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2547              		.loc 1 1300 9 is_stmt 1 view .LVU776
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2548              		.loc 1 1300 17 is_stmt 0 view .LVU777
 2549 0102 638D     		ldrh	r3, [r4, #42]
 2550 0104 9BB2     		uxth	r3, r3
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 2551              		.loc 1 1300 12 view .LVU778
 2552 0106 FF2B     		cmp	r3, #255
 2553 0108 C6D9     		bls	.L184
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 2554              		.loc 1 1302 11 is_stmt 1 view .LVU779
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 2555              		.loc 1 1302 26 is_stmt 0 view .LVU780
 2556 010a FF23     		movs	r3, #255
 2557 010c 2385     		strh	r3, [r4, #40]
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                              I2C_NO_STARTSTOP);
 2558              		.loc 1 1303 11 is_stmt 1 view .LVU781
 2559 010e 7F3B     		subs	r3, r3, #127
 2560 0110 0022     		movs	r2, #0
 2561 0112 0092     		str	r2, [sp]
 2562 0114 5B04     		lsls	r3, r3, #17
 2563 0116 FF32     		adds	r2, r2, #255
 2564 0118 3900     		movs	r1, r7
 2565 011a 2000     		movs	r0, r4
 2566 011c FFF7FEFF 		bl	I2C_TransferConfig
 2567              	.LVL177:
 2568 0120 C6E7     		b	.L182
 2569              	.L192:
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2570              		.loc 1 1317 5 view .LVU782
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2571              		.loc 1 1317 9 is_stmt 0 view .LVU783
 2572 0122 3200     		movs	r2, r6
 2573 0124 2900     		movs	r1, r5
 2574 0126 2000     		movs	r0, r4
 2575 0128 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2576              	.LVL178:
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2577              		.loc 1 1317 8 view .LVU784
 2578 012c 0028     		cmp	r0, #0
 2579 012e 1AD1     		bne	.L191
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2580              		.loc 1 1323 5 is_stmt 1 view .LVU785
 2581 0130 2368     		ldr	r3, [r4]
 2582 0132 2022     		movs	r2, #32
 2583 0134 DA61     		str	r2, [r3, #28]
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 185


 2584              		.loc 1 1326 5 view .LVU786
 2585 0136 2168     		ldr	r1, [r4]
 2586 0138 4B68     		ldr	r3, [r1, #4]
 2587 013a 0D4D     		ldr	r5, .L193+4
 2588 013c 2B40     		ands	r3, r5
 2589 013e 4B60     		str	r3, [r1, #4]
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2590              		.loc 1 1328 5 view .LVU787
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2591              		.loc 1 1328 17 is_stmt 0 view .LVU788
 2592 0140 4123     		movs	r3, #65
 2593 0142 E254     		strb	r2, [r4, r3]
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2594              		.loc 1 1329 5 is_stmt 1 view .LVU789
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2595              		.loc 1 1329 17 is_stmt 0 view .LVU790
 2596 0144 0023     		movs	r3, #0
 2597 0146 2232     		adds	r2, r2, #34
 2598 0148 A354     		strb	r3, [r4, r2]
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2599              		.loc 1 1332 5 is_stmt 1 view .LVU791
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2600              		.loc 1 1332 5 view .LVU792
 2601 014a 023A     		subs	r2, r2, #2
 2602 014c A354     		strb	r3, [r4, r2]
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2603              		.loc 1 1332 5 view .LVU793
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 2604              		.loc 1 1334 5 view .LVU794
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 2605              		.loc 1 1334 12 is_stmt 0 view .LVU795
 2606 014e 00E0     		b	.L179
 2607              	.LVL179:
 2608              	.L186:
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 2609              		.loc 1 1338 12 view .LVU796
 2610 0150 0220     		movs	r0, #2
 2611              	.LVL180:
 2612              	.L179:
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2613              		.loc 1 1340 1 view .LVU797
 2614 0152 05B0     		add	sp, sp, #20
 2615              		@ sp needed
 2616              	.LVL181:
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2617              		.loc 1 1340 1 view .LVU798
 2618 0154 F0BD     		pop	{r4, r5, r6, r7, pc}
 2619              	.LVL182:
 2620              	.L187:
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2621              		.loc 1 1241 5 view .LVU799
 2622 0156 0220     		movs	r0, #2
 2623              	.LVL183:
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2624              		.loc 1 1241 5 view .LVU800
 2625 0158 FBE7     		b	.L179
 2626              	.LVL184:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 186


 2627              	.L188:
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2628              		.loc 1 1248 14 view .LVU801
 2629 015a 0120     		movs	r0, #1
 2630 015c F9E7     		b	.L179
 2631              	.L189:
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 2632              		.loc 1 1280 16 view .LVU802
 2633 015e 0120     		movs	r0, #1
 2634 0160 F7E7     		b	.L179
 2635              	.L190:
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 2636              		.loc 1 1297 18 view .LVU803
 2637 0162 0120     		movs	r0, #1
 2638 0164 F5E7     		b	.L179
 2639              	.L191:
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2640              		.loc 1 1319 14 view .LVU804
 2641 0166 0120     		movs	r0, #1
 2642 0168 F3E7     		b	.L179
 2643              	.L194:
 2644 016a C046     		.align	2
 2645              	.L193:
 2646 016c 00240080 		.word	-2147474432
 2647 0170 00E800FE 		.word	-33495040
 2648              		.cfi_endproc
 2649              	.LFE45:
 2651              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 2652              		.align	1
 2653              		.global	HAL_I2C_Slave_Transmit
 2654              		.syntax unified
 2655              		.code	16
 2656              		.thumb_func
 2658              	HAL_I2C_Slave_Transmit:
 2659              	.LVL185:
 2660              	.LFB46:
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
 2661              		.loc 1 1353 1 is_stmt 1 view -0
 2662              		.cfi_startproc
 2663              		@ args = 0, pretend = 0, frame = 0
 2664              		@ frame_needed = 0, uses_anonymous_args = 0
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
 2665              		.loc 1 1353 1 is_stmt 0 view .LVU806
 2666 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2667              	.LCFI21:
 2668              		.cfi_def_cfa_offset 20
 2669              		.cfi_offset 4, -20
 2670              		.cfi_offset 5, -16
 2671              		.cfi_offset 6, -12
 2672              		.cfi_offset 7, -8
 2673              		.cfi_offset 14, -4
 2674 0002 C646     		mov	lr, r8
 2675 0004 00B5     		push	{lr}
 2676              	.LCFI22:
 2677              		.cfi_def_cfa_offset 24
 2678              		.cfi_offset 8, -24
 2679 0006 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 187


 2680              	.LCFI23:
 2681              		.cfi_def_cfa_offset 32
 2682 0008 0400     		movs	r4, r0
 2683 000a 0D00     		movs	r5, r1
 2684 000c 9046     		mov	r8, r2
 2685 000e 1E00     		movs	r6, r3
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2686              		.loc 1 1354 3 is_stmt 1 view .LVU807
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2687              		.loc 1 1356 3 view .LVU808
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2688              		.loc 1 1356 11 is_stmt 0 view .LVU809
 2689 0010 4123     		movs	r3, #65
 2690              	.LVL186:
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2691              		.loc 1 1356 11 view .LVU810
 2692 0012 C35C     		ldrb	r3, [r0, r3]
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 2693              		.loc 1 1356 6 view .LVU811
 2694 0014 202B     		cmp	r3, #32
 2695 0016 00D0     		beq	.LCB2592
 2696 0018 DCE0     		b	.L209	@long jump
 2697              	.LCB2592:
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2698              		.loc 1 1358 5 is_stmt 1 view .LVU812
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2699              		.loc 1 1358 8 is_stmt 0 view .LVU813
 2700 001a 0029     		cmp	r1, #0
 2701 001c 52D0     		beq	.L197
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2702              		.loc 1 1358 25 discriminator 1 view .LVU814
 2703 001e 002A     		cmp	r2, #0
 2704 0020 50D0     		beq	.L197
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2705              		.loc 1 1364 5 is_stmt 1 view .LVU815
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2706              		.loc 1 1364 5 view .LVU816
 2707 0022 4023     		movs	r3, #64
 2708 0024 C35C     		ldrb	r3, [r0, r3]
 2709 0026 012B     		cmp	r3, #1
 2710 0028 00D1     		bne	.LCB2603
 2711 002a D8E0     		b	.L210	@long jump
 2712              	.LCB2603:
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2713              		.loc 1 1364 5 discriminator 2 view .LVU817
 2714 002c 4023     		movs	r3, #64
 2715 002e 0122     		movs	r2, #1
 2716              	.LVL187:
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2717              		.loc 1 1364 5 is_stmt 0 discriminator 2 view .LVU818
 2718 0030 C254     		strb	r2, [r0, r3]
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2719              		.loc 1 1364 5 is_stmt 1 discriminator 2 view .LVU819
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2720              		.loc 1 1367 5 discriminator 2 view .LVU820
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2721              		.loc 1 1367 17 is_stmt 0 discriminator 2 view .LVU821
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 188


 2722 0032 FFF7FEFF 		bl	HAL_GetTick
 2723              	.LVL188:
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2724              		.loc 1 1367 17 discriminator 2 view .LVU822
 2725 0036 0700     		movs	r7, r0
 2726              	.LVL189:
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2727              		.loc 1 1369 5 is_stmt 1 discriminator 2 view .LVU823
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2728              		.loc 1 1369 21 is_stmt 0 discriminator 2 view .LVU824
 2729 0038 4123     		movs	r3, #65
 2730 003a 2122     		movs	r2, #33
 2731 003c E254     		strb	r2, [r4, r3]
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2732              		.loc 1 1370 5 is_stmt 1 discriminator 2 view .LVU825
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2733              		.loc 1 1370 21 is_stmt 0 discriminator 2 view .LVU826
 2734 003e 0133     		adds	r3, r3, #1
 2735 0040 013A     		subs	r2, r2, #1
 2736 0042 E254     		strb	r2, [r4, r3]
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2737              		.loc 1 1371 5 is_stmt 1 discriminator 2 view .LVU827
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2738              		.loc 1 1371 21 is_stmt 0 discriminator 2 view .LVU828
 2739 0044 0023     		movs	r3, #0
 2740 0046 6364     		str	r3, [r4, #68]
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2741              		.loc 1 1374 5 is_stmt 1 discriminator 2 view .LVU829
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2742              		.loc 1 1374 21 is_stmt 0 discriminator 2 view .LVU830
 2743 0048 6562     		str	r5, [r4, #36]
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2744              		.loc 1 1375 5 is_stmt 1 discriminator 2 view .LVU831
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2745              		.loc 1 1375 21 is_stmt 0 discriminator 2 view .LVU832
 2746 004a 4246     		mov	r2, r8
 2747 004c 6285     		strh	r2, [r4, #42]
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2748              		.loc 1 1376 5 is_stmt 1 discriminator 2 view .LVU833
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2749              		.loc 1 1376 21 is_stmt 0 discriminator 2 view .LVU834
 2750 004e 6363     		str	r3, [r4, #52]
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2751              		.loc 1 1379 5 is_stmt 1 discriminator 2 view .LVU835
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2752              		.loc 1 1379 9 is_stmt 0 discriminator 2 view .LVU836
 2753 0050 2268     		ldr	r2, [r4]
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2754              		.loc 1 1379 25 discriminator 2 view .LVU837
 2755 0052 5368     		ldr	r3, [r2, #4]
 2756 0054 6349     		ldr	r1, .L218
 2757 0056 0B40     		ands	r3, r1
 2758 0058 5360     		str	r3, [r2, #4]
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2759              		.loc 1 1382 5 is_stmt 1 discriminator 2 view .LVU838
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2760              		.loc 1 1382 9 is_stmt 0 discriminator 2 view .LVU839
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 189


 2761 005a 0090     		str	r0, [sp]
 2762 005c 3300     		movs	r3, r6
 2763 005e 0022     		movs	r2, #0
 2764 0060 0821     		movs	r1, #8
 2765 0062 2000     		movs	r0, r4
 2766              	.LVL190:
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2767              		.loc 1 1382 9 discriminator 2 view .LVU840
 2768 0064 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2769              	.LVL191:
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2770              		.loc 1 1382 8 discriminator 2 view .LVU841
 2771 0068 0028     		cmp	r0, #0
 2772 006a 30D1     		bne	.L211
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2773              		.loc 1 1390 5 is_stmt 1 view .LVU842
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2774              		.loc 1 1390 19 is_stmt 0 view .LVU843
 2775 006c 226A     		ldr	r2, [r4, #32]
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2776              		.loc 1 1390 8 view .LVU844
 2777 006e 8023     		movs	r3, #128
 2778 0070 9B02     		lsls	r3, r3, #10
 2779 0072 9A42     		cmp	r2, r3
 2780 0074 33D0     		beq	.L212
 2781              	.L200:
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2782              		.loc 1 1403 5 is_stmt 1 view .LVU845
 2783 0076 2368     		ldr	r3, [r4]
 2784 0078 0822     		movs	r2, #8
 2785 007a DA61     		str	r2, [r3, #28]
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2786              		.loc 1 1406 5 view .LVU846
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2787              		.loc 1 1406 19 is_stmt 0 view .LVU847
 2788 007c E368     		ldr	r3, [r4, #12]
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2789              		.loc 1 1406 8 view .LVU848
 2790 007e 022B     		cmp	r3, #2
 2791 0080 39D0     		beq	.L213
 2792              	.L201:
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2793              		.loc 1 1421 5 is_stmt 1 view .LVU849
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2794              		.loc 1 1421 9 is_stmt 0 view .LVU850
 2795 0082 8021     		movs	r1, #128
 2796 0084 0097     		str	r7, [sp]
 2797 0086 3300     		movs	r3, r6
 2798 0088 0022     		movs	r2, #0
 2799 008a 4902     		lsls	r1, r1, #9
 2800 008c 2000     		movs	r0, r4
 2801 008e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2802              	.LVL192:
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2803              		.loc 1 1421 8 view .LVU851
 2804 0092 0028     		cmp	r0, #0
 2805 0094 44D1     		bne	.L214
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 190


 2806              	.LVL193:
 2807              	.L203:
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2808              		.loc 1 1428 28 is_stmt 1 view .LVU852
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2809              		.loc 1 1428 16 is_stmt 0 view .LVU853
 2810 0096 638D     		ldrh	r3, [r4, #42]
 2811 0098 9BB2     		uxth	r3, r3
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2812              		.loc 1 1428 28 view .LVU854
 2813 009a 002B     		cmp	r3, #0
 2814 009c 50D0     		beq	.L215
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2815              		.loc 1 1431 7 is_stmt 1 view .LVU855
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2816              		.loc 1 1431 11 is_stmt 0 view .LVU856
 2817 009e 3A00     		movs	r2, r7
 2818 00a0 3100     		movs	r1, r6
 2819 00a2 2000     		movs	r0, r4
 2820 00a4 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 2821              	.LVL194:
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2822              		.loc 1 1431 10 view .LVU857
 2823 00a8 0028     		cmp	r0, #0
 2824 00aa 41D1     		bne	.L216
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2825              		.loc 1 1439 7 is_stmt 1 view .LVU858
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2826              		.loc 1 1439 35 is_stmt 0 view .LVU859
 2827 00ac 626A     		ldr	r2, [r4, #36]
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2828              		.loc 1 1439 11 view .LVU860
 2829 00ae 2368     		ldr	r3, [r4]
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2830              		.loc 1 1439 30 view .LVU861
 2831 00b0 1278     		ldrb	r2, [r2]
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2832              		.loc 1 1439 28 view .LVU862
 2833 00b2 9A62     		str	r2, [r3, #40]
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2834              		.loc 1 1442 7 is_stmt 1 view .LVU863
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2835              		.loc 1 1442 11 is_stmt 0 view .LVU864
 2836 00b4 636A     		ldr	r3, [r4, #36]
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2837              		.loc 1 1442 21 view .LVU865
 2838 00b6 0133     		adds	r3, r3, #1
 2839 00b8 6362     		str	r3, [r4, #36]
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2840              		.loc 1 1444 7 is_stmt 1 view .LVU866
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2841              		.loc 1 1444 11 is_stmt 0 view .LVU867
 2842 00ba 658D     		ldrh	r5, [r4, #42]
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2843              		.loc 1 1444 22 view .LVU868
 2844 00bc 013D     		subs	r5, r5, #1
 2845 00be ADB2     		uxth	r5, r5
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 191


 2846 00c0 6585     		strh	r5, [r4, #42]
 2847 00c2 E8E7     		b	.L203
 2848              	.LVL195:
 2849              	.L197:
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 2850              		.loc 1 1360 7 is_stmt 1 view .LVU869
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 2851              		.loc 1 1360 23 is_stmt 0 view .LVU870
 2852 00c4 8023     		movs	r3, #128
 2853 00c6 9B00     		lsls	r3, r3, #2
 2854 00c8 6364     		str	r3, [r4, #68]
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2855              		.loc 1 1361 7 is_stmt 1 view .LVU871
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2856              		.loc 1 1361 15 is_stmt 0 view .LVU872
 2857 00ca 0120     		movs	r0, #1
 2858              	.LVL196:
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2859              		.loc 1 1361 15 view .LVU873
 2860 00cc 83E0     		b	.L196
 2861              	.LVL197:
 2862              	.L211:
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 2863              		.loc 1 1385 7 is_stmt 1 view .LVU874
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 2864              		.loc 1 1385 11 is_stmt 0 view .LVU875
 2865 00ce 2268     		ldr	r2, [r4]
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 2866              		.loc 1 1385 27 view .LVU876
 2867 00d0 5168     		ldr	r1, [r2, #4]
 2868 00d2 8023     		movs	r3, #128
 2869 00d4 1B02     		lsls	r3, r3, #8
 2870 00d6 0B43     		orrs	r3, r1
 2871 00d8 5360     		str	r3, [r2, #4]
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2872              		.loc 1 1386 7 is_stmt 1 view .LVU877
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2873              		.loc 1 1386 14 is_stmt 0 view .LVU878
 2874 00da 0120     		movs	r0, #1
 2875 00dc 7BE0     		b	.L196
 2876              	.L212:
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2877              		.loc 1 1394 7 is_stmt 1 view .LVU879
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2878              		.loc 1 1394 35 is_stmt 0 view .LVU880
 2879 00de 626A     		ldr	r2, [r4, #36]
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2880              		.loc 1 1394 11 view .LVU881
 2881 00e0 2368     		ldr	r3, [r4]
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2882              		.loc 1 1394 30 view .LVU882
 2883 00e2 1278     		ldrb	r2, [r2]
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2884              		.loc 1 1394 28 view .LVU883
 2885 00e4 9A62     		str	r2, [r3, #40]
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2886              		.loc 1 1397 7 is_stmt 1 view .LVU884
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 192


1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2887              		.loc 1 1397 11 is_stmt 0 view .LVU885
 2888 00e6 636A     		ldr	r3, [r4, #36]
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2889              		.loc 1 1397 21 view .LVU886
 2890 00e8 0133     		adds	r3, r3, #1
 2891 00ea 6362     		str	r3, [r4, #36]
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2892              		.loc 1 1399 7 is_stmt 1 view .LVU887
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2893              		.loc 1 1399 11 is_stmt 0 view .LVU888
 2894 00ec 638D     		ldrh	r3, [r4, #42]
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2895              		.loc 1 1399 22 view .LVU889
 2896 00ee 013B     		subs	r3, r3, #1
 2897 00f0 9BB2     		uxth	r3, r3
 2898 00f2 6385     		strh	r3, [r4, #42]
 2899 00f4 BFE7     		b	.L200
 2900              	.L213:
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2901              		.loc 1 1409 7 is_stmt 1 view .LVU890
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2902              		.loc 1 1409 11 is_stmt 0 view .LVU891
 2903 00f6 0097     		str	r7, [sp]
 2904 00f8 3300     		movs	r3, r6
 2905 00fa 0022     		movs	r2, #0
 2906 00fc 0821     		movs	r1, #8
 2907 00fe 2000     		movs	r0, r4
 2908 0100 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2909              	.LVL198:
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 2910              		.loc 1 1409 10 view .LVU892
 2911 0104 0028     		cmp	r0, #0
 2912 0106 03D1     		bne	.L217
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2913              		.loc 1 1417 7 is_stmt 1 view .LVU893
 2914 0108 2368     		ldr	r3, [r4]
 2915 010a 0822     		movs	r2, #8
 2916 010c DA61     		str	r2, [r3, #28]
 2917 010e B8E7     		b	.L201
 2918              	.L217:
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 2919              		.loc 1 1412 9 view .LVU894
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 2920              		.loc 1 1412 13 is_stmt 0 view .LVU895
 2921 0110 2268     		ldr	r2, [r4]
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 2922              		.loc 1 1412 29 view .LVU896
 2923 0112 5168     		ldr	r1, [r2, #4]
 2924 0114 8023     		movs	r3, #128
 2925 0116 1B02     		lsls	r3, r3, #8
 2926 0118 0B43     		orrs	r3, r1
 2927 011a 5360     		str	r3, [r2, #4]
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 2928              		.loc 1 1413 9 is_stmt 1 view .LVU897
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 2929              		.loc 1 1413 16 is_stmt 0 view .LVU898
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 193


 2930 011c 0120     		movs	r0, #1
 2931 011e 5AE0     		b	.L196
 2932              	.L214:
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 2933              		.loc 1 1424 7 is_stmt 1 view .LVU899
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 2934              		.loc 1 1424 11 is_stmt 0 view .LVU900
 2935 0120 2268     		ldr	r2, [r4]
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 2936              		.loc 1 1424 27 view .LVU901
 2937 0122 5168     		ldr	r1, [r2, #4]
 2938 0124 8023     		movs	r3, #128
 2939 0126 1B02     		lsls	r3, r3, #8
 2940 0128 0B43     		orrs	r3, r1
 2941 012a 5360     		str	r3, [r2, #4]
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2942              		.loc 1 1425 7 is_stmt 1 view .LVU902
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2943              		.loc 1 1425 14 is_stmt 0 view .LVU903
 2944 012c 0120     		movs	r0, #1
 2945 012e 52E0     		b	.L196
 2946              	.LVL199:
 2947              	.L216:
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 2948              		.loc 1 1434 9 is_stmt 1 view .LVU904
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 2949              		.loc 1 1434 13 is_stmt 0 view .LVU905
 2950 0130 2268     		ldr	r2, [r4]
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 2951              		.loc 1 1434 29 view .LVU906
 2952 0132 5168     		ldr	r1, [r2, #4]
 2953 0134 8023     		movs	r3, #128
 2954 0136 1B02     		lsls	r3, r3, #8
 2955 0138 0B43     		orrs	r3, r1
 2956 013a 5360     		str	r3, [r2, #4]
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 2957              		.loc 1 1435 9 is_stmt 1 view .LVU907
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 2958              		.loc 1 1435 16 is_stmt 0 view .LVU908
 2959 013c 0120     		movs	r0, #1
 2960 013e 4AE0     		b	.L196
 2961              	.L215:
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2962              		.loc 1 1448 5 is_stmt 1 view .LVU909
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2963              		.loc 1 1448 9 is_stmt 0 view .LVU910
 2964 0140 0097     		str	r7, [sp]
 2965 0142 3300     		movs	r3, r6
 2966 0144 0022     		movs	r2, #0
 2967 0146 1021     		movs	r1, #16
 2968 0148 2000     		movs	r0, r4
 2969 014a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2970              	.LVL200:
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2971              		.loc 1 1448 8 view .LVU911
 2972 014e 0028     		cmp	r0, #0
 2973 0150 07D0     		beq	.L206
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 194


1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 2974              		.loc 1 1451 7 is_stmt 1 view .LVU912
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 2975              		.loc 1 1451 11 is_stmt 0 view .LVU913
 2976 0152 2268     		ldr	r2, [r4]
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 2977              		.loc 1 1451 27 view .LVU914
 2978 0154 5168     		ldr	r1, [r2, #4]
 2979 0156 8023     		movs	r3, #128
 2980 0158 1B02     		lsls	r3, r3, #8
 2981 015a 0B43     		orrs	r3, r1
 2982 015c 5360     		str	r3, [r2, #4]
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2983              		.loc 1 1452 7 is_stmt 1 view .LVU915
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 2984              		.loc 1 1452 14 is_stmt 0 view .LVU916
 2985 015e 0120     		movs	r0, #1
 2986 0160 39E0     		b	.L196
 2987              	.L206:
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2988              		.loc 1 1456 5 is_stmt 1 view .LVU917
 2989 0162 2000     		movs	r0, r4
 2990 0164 FFF7FEFF 		bl	I2C_Flush_TXDR
 2991              	.LVL201:
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 2992              		.loc 1 1459 5 view .LVU918
 2993 0168 2368     		ldr	r3, [r4]
 2994 016a 1022     		movs	r2, #16
 2995 016c DA61     		str	r2, [r3, #28]
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2996              		.loc 1 1462 5 view .LVU919
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 2997              		.loc 1 1462 9 is_stmt 0 view .LVU920
 2998 016e 3A00     		movs	r2, r7
 2999 0170 3100     		movs	r1, r6
 3000 0172 2000     		movs	r0, r4
 3001 0174 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 3002              	.LVL202:
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3003              		.loc 1 1462 8 view .LVU921
 3004 0178 0028     		cmp	r0, #0
 3005 017a 07D0     		beq	.L207
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3006              		.loc 1 1465 7 is_stmt 1 view .LVU922
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3007              		.loc 1 1465 11 is_stmt 0 view .LVU923
 3008 017c 2268     		ldr	r2, [r4]
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3009              		.loc 1 1465 27 view .LVU924
 3010 017e 5168     		ldr	r1, [r2, #4]
 3011 0180 8023     		movs	r3, #128
 3012 0182 1B02     		lsls	r3, r3, #8
 3013 0184 0B43     		orrs	r3, r1
 3014 0186 5360     		str	r3, [r2, #4]
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3015              		.loc 1 1467 7 is_stmt 1 view .LVU925
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 195


 3016              		.loc 1 1467 14 is_stmt 0 view .LVU926
 3017 0188 0120     		movs	r0, #1
 3018 018a 24E0     		b	.L196
 3019              	.L207:
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3020              		.loc 1 1471 5 is_stmt 1 view .LVU927
 3021 018c 2368     		ldr	r3, [r4]
 3022 018e 2022     		movs	r2, #32
 3023 0190 DA61     		str	r2, [r3, #28]
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3024              		.loc 1 1474 5 view .LVU928
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3025              		.loc 1 1474 9 is_stmt 0 view .LVU929
 3026 0192 8021     		movs	r1, #128
 3027 0194 0097     		str	r7, [sp]
 3028 0196 3300     		movs	r3, r6
 3029 0198 1F3A     		subs	r2, r2, #31
 3030 019a 0902     		lsls	r1, r1, #8
 3031 019c 2000     		movs	r0, r4
 3032 019e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3033              	.LVL203:
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3034              		.loc 1 1474 8 view .LVU930
 3035 01a2 0028     		cmp	r0, #0
 3036 01a4 07D0     		beq	.L208
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3037              		.loc 1 1477 7 is_stmt 1 view .LVU931
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3038              		.loc 1 1477 11 is_stmt 0 view .LVU932
 3039 01a6 2268     		ldr	r2, [r4]
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3040              		.loc 1 1477 27 view .LVU933
 3041 01a8 5168     		ldr	r1, [r2, #4]
 3042 01aa 8023     		movs	r3, #128
 3043 01ac 1B02     		lsls	r3, r3, #8
 3044 01ae 0B43     		orrs	r3, r1
 3045 01b0 5360     		str	r3, [r2, #4]
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3046              		.loc 1 1478 7 is_stmt 1 view .LVU934
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3047              		.loc 1 1478 14 is_stmt 0 view .LVU935
 3048 01b2 0120     		movs	r0, #1
 3049 01b4 0FE0     		b	.L196
 3050              	.L208:
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3051              		.loc 1 1482 5 is_stmt 1 view .LVU936
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3052              		.loc 1 1482 9 is_stmt 0 view .LVU937
 3053 01b6 2268     		ldr	r2, [r4]
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3054              		.loc 1 1482 25 view .LVU938
 3055 01b8 5168     		ldr	r1, [r2, #4]
 3056 01ba 8023     		movs	r3, #128
 3057 01bc 1B02     		lsls	r3, r3, #8
 3058 01be 0B43     		orrs	r3, r1
 3059 01c0 5360     		str	r3, [r2, #4]
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 196


 3060              		.loc 1 1484 5 is_stmt 1 view .LVU939
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 3061              		.loc 1 1484 17 is_stmt 0 view .LVU940
 3062 01c2 4123     		movs	r3, #65
 3063 01c4 2022     		movs	r2, #32
 3064 01c6 E254     		strb	r2, [r4, r3]
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3065              		.loc 1 1485 5 is_stmt 1 view .LVU941
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3066              		.loc 1 1485 17 is_stmt 0 view .LVU942
 3067 01c8 0023     		movs	r3, #0
 3068 01ca 2232     		adds	r2, r2, #34
 3069 01cc A354     		strb	r3, [r4, r2]
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3070              		.loc 1 1488 5 is_stmt 1 view .LVU943
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3071              		.loc 1 1488 5 view .LVU944
 3072 01ce 023A     		subs	r2, r2, #2
 3073 01d0 A354     		strb	r3, [r4, r2]
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3074              		.loc 1 1488 5 view .LVU945
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3075              		.loc 1 1490 5 view .LVU946
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3076              		.loc 1 1490 12 is_stmt 0 view .LVU947
 3077 01d2 00E0     		b	.L196
 3078              	.LVL204:
 3079              	.L209:
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3080              		.loc 1 1494 12 view .LVU948
 3081 01d4 0220     		movs	r0, #2
 3082              	.LVL205:
 3083              	.L196:
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3084              		.loc 1 1496 1 view .LVU949
 3085 01d6 02B0     		add	sp, sp, #8
 3086              		@ sp needed
 3087              	.LVL206:
 3088              	.LVL207:
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3089              		.loc 1 1496 1 view .LVU950
 3090 01d8 80BC     		pop	{r7}
 3091 01da B846     		mov	r8, r7
 3092 01dc F0BD     		pop	{r4, r5, r6, r7, pc}
 3093              	.LVL208:
 3094              	.L210:
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3095              		.loc 1 1364 5 view .LVU951
 3096 01de 0220     		movs	r0, #2
 3097              	.LVL209:
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3098              		.loc 1 1364 5 view .LVU952
 3099 01e0 F9E7     		b	.L196
 3100              	.L219:
 3101 01e2 C046     		.align	2
 3102              	.L218:
 3103 01e4 FF7FFFFF 		.word	-32769
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 197


 3104              		.cfi_endproc
 3105              	.LFE46:
 3107              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
 3108              		.align	1
 3109              		.global	HAL_I2C_Slave_Receive
 3110              		.syntax unified
 3111              		.code	16
 3112              		.thumb_func
 3114              	HAL_I2C_Slave_Receive:
 3115              	.LVL210:
 3116              	.LFB47:
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
 3117              		.loc 1 1509 1 is_stmt 1 view -0
 3118              		.cfi_startproc
 3119              		@ args = 0, pretend = 0, frame = 0
 3120              		@ frame_needed = 0, uses_anonymous_args = 0
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart;
 3121              		.loc 1 1509 1 is_stmt 0 view .LVU954
 3122 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3123              	.LCFI24:
 3124              		.cfi_def_cfa_offset 20
 3125              		.cfi_offset 4, -20
 3126              		.cfi_offset 5, -16
 3127              		.cfi_offset 6, -12
 3128              		.cfi_offset 7, -8
 3129              		.cfi_offset 14, -4
 3130 0002 C646     		mov	lr, r8
 3131 0004 00B5     		push	{lr}
 3132              	.LCFI25:
 3133              		.cfi_def_cfa_offset 24
 3134              		.cfi_offset 8, -24
 3135 0006 82B0     		sub	sp, sp, #8
 3136              	.LCFI26:
 3137              		.cfi_def_cfa_offset 32
 3138 0008 0400     		movs	r4, r0
 3139 000a 0D00     		movs	r5, r1
 3140 000c 9046     		mov	r8, r2
 3141 000e 1E00     		movs	r6, r3
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3142              		.loc 1 1510 3 is_stmt 1 view .LVU955
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3143              		.loc 1 1512 3 view .LVU956
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3144              		.loc 1 1512 11 is_stmt 0 view .LVU957
 3145 0010 4123     		movs	r3, #65
 3146              	.LVL211:
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3147              		.loc 1 1512 11 view .LVU958
 3148 0012 C35C     		ldrb	r3, [r0, r3]
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3149              		.loc 1 1512 6 view .LVU959
 3150 0014 202B     		cmp	r3, #32
 3151 0016 00D0     		beq	.LCB3014
 3152 0018 B1E0     		b	.L231	@long jump
 3153              	.LCB3014:
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3154              		.loc 1 1514 5 is_stmt 1 view .LVU960
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 198


1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3155              		.loc 1 1514 8 is_stmt 0 view .LVU961
 3156 001a 0029     		cmp	r1, #0
 3157 001c 30D0     		beq	.L222
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3158              		.loc 1 1514 25 discriminator 1 view .LVU962
 3159 001e 002A     		cmp	r2, #0
 3160 0020 2ED0     		beq	.L222
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3161              		.loc 1 1520 5 is_stmt 1 view .LVU963
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3162              		.loc 1 1520 5 view .LVU964
 3163 0022 4023     		movs	r3, #64
 3164 0024 C35C     		ldrb	r3, [r0, r3]
 3165 0026 012B     		cmp	r3, #1
 3166 0028 00D1     		bne	.LCB3025
 3167 002a ADE0     		b	.L232	@long jump
 3168              	.LCB3025:
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3169              		.loc 1 1520 5 discriminator 2 view .LVU965
 3170 002c 4023     		movs	r3, #64
 3171 002e 0122     		movs	r2, #1
 3172              	.LVL212:
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3173              		.loc 1 1520 5 is_stmt 0 discriminator 2 view .LVU966
 3174 0030 C254     		strb	r2, [r0, r3]
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3175              		.loc 1 1520 5 is_stmt 1 discriminator 2 view .LVU967
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3176              		.loc 1 1523 5 discriminator 2 view .LVU968
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3177              		.loc 1 1523 17 is_stmt 0 discriminator 2 view .LVU969
 3178 0032 FFF7FEFF 		bl	HAL_GetTick
 3179              	.LVL213:
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3180              		.loc 1 1523 17 discriminator 2 view .LVU970
 3181 0036 0700     		movs	r7, r0
 3182              	.LVL214:
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 3183              		.loc 1 1525 5 is_stmt 1 discriminator 2 view .LVU971
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 3184              		.loc 1 1525 21 is_stmt 0 discriminator 2 view .LVU972
 3185 0038 4123     		movs	r3, #65
 3186 003a 2222     		movs	r2, #34
 3187 003c E254     		strb	r2, [r4, r3]
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3188              		.loc 1 1526 5 is_stmt 1 discriminator 2 view .LVU973
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3189              		.loc 1 1526 21 is_stmt 0 discriminator 2 view .LVU974
 3190 003e 0133     		adds	r3, r3, #1
 3191 0040 023A     		subs	r2, r2, #2
 3192 0042 E254     		strb	r2, [r4, r3]
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3193              		.loc 1 1527 5 is_stmt 1 discriminator 2 view .LVU975
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3194              		.loc 1 1527 21 is_stmt 0 discriminator 2 view .LVU976
 3195 0044 0023     		movs	r3, #0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 199


 3196 0046 6364     		str	r3, [r4, #68]
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3197              		.loc 1 1530 5 is_stmt 1 discriminator 2 view .LVU977
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3198              		.loc 1 1530 21 is_stmt 0 discriminator 2 view .LVU978
 3199 0048 6562     		str	r5, [r4, #36]
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize = hi2c->XferCount;
 3200              		.loc 1 1531 5 is_stmt 1 discriminator 2 view .LVU979
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize = hi2c->XferCount;
 3201              		.loc 1 1531 21 is_stmt 0 discriminator 2 view .LVU980
 3202 004a 4246     		mov	r2, r8
 3203 004c 6285     		strh	r2, [r4, #42]
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3204              		.loc 1 1532 5 is_stmt 1 discriminator 2 view .LVU981
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3205              		.loc 1 1532 26 is_stmt 0 discriminator 2 view .LVU982
 3206 004e 628D     		ldrh	r2, [r4, #42]
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3207              		.loc 1 1532 20 discriminator 2 view .LVU983
 3208 0050 2285     		strh	r2, [r4, #40]
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3209              		.loc 1 1533 5 is_stmt 1 discriminator 2 view .LVU984
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3210              		.loc 1 1533 21 is_stmt 0 discriminator 2 view .LVU985
 3211 0052 6363     		str	r3, [r4, #52]
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3212              		.loc 1 1536 5 is_stmt 1 discriminator 2 view .LVU986
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3213              		.loc 1 1536 9 is_stmt 0 discriminator 2 view .LVU987
 3214 0054 2268     		ldr	r2, [r4]
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3215              		.loc 1 1536 25 discriminator 2 view .LVU988
 3216 0056 5368     		ldr	r3, [r2, #4]
 3217 0058 4C49     		ldr	r1, .L235
 3218 005a 0B40     		ands	r3, r1
 3219 005c 5360     		str	r3, [r2, #4]
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3220              		.loc 1 1539 5 is_stmt 1 discriminator 2 view .LVU989
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3221              		.loc 1 1539 9 is_stmt 0 discriminator 2 view .LVU990
 3222 005e 0090     		str	r0, [sp]
 3223 0060 3300     		movs	r3, r6
 3224 0062 0022     		movs	r2, #0
 3225 0064 0821     		movs	r1, #8
 3226 0066 2000     		movs	r0, r4
 3227              	.LVL215:
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3228              		.loc 1 1539 9 discriminator 2 view .LVU991
 3229 0068 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3230              	.LVL216:
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3231              		.loc 1 1539 8 discriminator 2 view .LVU992
 3232 006c 0028     		cmp	r0, #0
 3233 006e 0CD0     		beq	.L224
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3234              		.loc 1 1542 7 is_stmt 1 view .LVU993
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 200


 3235              		.loc 1 1542 11 is_stmt 0 view .LVU994
 3236 0070 2268     		ldr	r2, [r4]
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3237              		.loc 1 1542 27 view .LVU995
 3238 0072 5168     		ldr	r1, [r2, #4]
 3239 0074 8023     		movs	r3, #128
 3240 0076 1B02     		lsls	r3, r3, #8
 3241 0078 0B43     		orrs	r3, r1
 3242 007a 5360     		str	r3, [r2, #4]
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3243              		.loc 1 1543 7 is_stmt 1 view .LVU996
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3244              		.loc 1 1543 14 is_stmt 0 view .LVU997
 3245 007c 0120     		movs	r0, #1
 3246 007e 7FE0     		b	.L221
 3247              	.LVL217:
 3248              	.L222:
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 3249              		.loc 1 1516 7 is_stmt 1 view .LVU998
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 3250              		.loc 1 1516 23 is_stmt 0 view .LVU999
 3251 0080 8023     		movs	r3, #128
 3252 0082 9B00     		lsls	r3, r3, #2
 3253 0084 6364     		str	r3, [r4, #68]
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3254              		.loc 1 1517 7 is_stmt 1 view .LVU1000
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3255              		.loc 1 1517 15 is_stmt 0 view .LVU1001
 3256 0086 0120     		movs	r0, #1
 3257              	.LVL218:
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3258              		.loc 1 1517 15 view .LVU1002
 3259 0088 7AE0     		b	.L221
 3260              	.LVL219:
 3261              	.L224:
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3262              		.loc 1 1547 5 is_stmt 1 view .LVU1003
 3263 008a 2368     		ldr	r3, [r4]
 3264 008c 0822     		movs	r2, #8
 3265 008e DA61     		str	r2, [r3, #28]
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3266              		.loc 1 1550 5 view .LVU1004
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3267              		.loc 1 1550 9 is_stmt 0 view .LVU1005
 3268 0090 8021     		movs	r1, #128
 3269 0092 0097     		str	r7, [sp]
 3270 0094 3300     		movs	r3, r6
 3271 0096 073A     		subs	r2, r2, #7
 3272 0098 4902     		lsls	r1, r1, #9
 3273 009a 2000     		movs	r0, r4
 3274 009c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3275              	.LVL220:
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3276              		.loc 1 1550 8 view .LVU1006
 3277 00a0 0028     		cmp	r0, #0
 3278 00a2 15D0     		beq	.L225
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 201


 3279              		.loc 1 1553 7 is_stmt 1 view .LVU1007
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3280              		.loc 1 1553 11 is_stmt 0 view .LVU1008
 3281 00a4 2268     		ldr	r2, [r4]
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3282              		.loc 1 1553 27 view .LVU1009
 3283 00a6 5168     		ldr	r1, [r2, #4]
 3284 00a8 8023     		movs	r3, #128
 3285 00aa 1B02     		lsls	r3, r3, #8
 3286 00ac 0B43     		orrs	r3, r1
 3287 00ae 5360     		str	r3, [r2, #4]
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3288              		.loc 1 1554 7 is_stmt 1 view .LVU1010
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3289              		.loc 1 1554 14 is_stmt 0 view .LVU1011
 3290 00b0 0120     		movs	r0, #1
 3291 00b2 65E0     		b	.L221
 3292              	.LVL221:
 3293              	.L226:
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3294              		.loc 1 1582 7 is_stmt 1 view .LVU1012
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3295              		.loc 1 1582 38 is_stmt 0 view .LVU1013
 3296 00b4 2368     		ldr	r3, [r4]
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3297              		.loc 1 1582 48 view .LVU1014
 3298 00b6 5A6A     		ldr	r2, [r3, #36]
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3299              		.loc 1 1582 12 view .LVU1015
 3300 00b8 636A     		ldr	r3, [r4, #36]
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3301              		.loc 1 1582 23 view .LVU1016
 3302 00ba 1A70     		strb	r2, [r3]
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3303              		.loc 1 1585 7 is_stmt 1 view .LVU1017
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3304              		.loc 1 1585 11 is_stmt 0 view .LVU1018
 3305 00bc 636A     		ldr	r3, [r4, #36]
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3306              		.loc 1 1585 21 view .LVU1019
 3307 00be 0133     		adds	r3, r3, #1
 3308 00c0 6362     		str	r3, [r4, #36]
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 3309              		.loc 1 1587 7 is_stmt 1 view .LVU1020
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 3310              		.loc 1 1587 11 is_stmt 0 view .LVU1021
 3311 00c2 658D     		ldrh	r5, [r4, #42]
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 3312              		.loc 1 1587 22 view .LVU1022
 3313 00c4 013D     		subs	r5, r5, #1
 3314 00c6 ADB2     		uxth	r5, r5
 3315 00c8 6585     		strh	r5, [r4, #42]
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3316              		.loc 1 1588 7 is_stmt 1 view .LVU1023
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3317              		.loc 1 1588 11 is_stmt 0 view .LVU1024
 3318 00ca 238D     		ldrh	r3, [r4, #40]
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 202


1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3319              		.loc 1 1588 21 view .LVU1025
 3320 00cc 013B     		subs	r3, r3, #1
 3321 00ce 2385     		strh	r3, [r4, #40]
 3322              	.L225:
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3323              		.loc 1 1557 28 is_stmt 1 view .LVU1026
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3324              		.loc 1 1557 16 is_stmt 0 view .LVU1027
 3325 00d0 638D     		ldrh	r3, [r4, #42]
 3326 00d2 9BB2     		uxth	r3, r3
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3327              		.loc 1 1557 28 view .LVU1028
 3328 00d4 002B     		cmp	r3, #0
 3329 00d6 1FD0     		beq	.L234
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 3330              		.loc 1 1560 7 is_stmt 1 view .LVU1029
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 3331              		.loc 1 1560 11 is_stmt 0 view .LVU1030
 3332 00d8 3A00     		movs	r2, r7
 3333 00da 3100     		movs	r1, r6
 3334 00dc 2000     		movs	r0, r4
 3335 00de FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 3336              	.LVL222:
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 3337              		.loc 1 1560 10 view .LVU1031
 3338 00e2 0028     		cmp	r0, #0
 3339 00e4 E6D0     		beq	.L226
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3340              		.loc 1 1563 9 is_stmt 1 view .LVU1032
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3341              		.loc 1 1563 13 is_stmt 0 view .LVU1033
 3342 00e6 2268     		ldr	r2, [r4]
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3343              		.loc 1 1563 29 view .LVU1034
 3344 00e8 5168     		ldr	r1, [r2, #4]
 3345 00ea 8023     		movs	r3, #128
 3346 00ec 1B02     		lsls	r3, r3, #8
 3347 00ee 0B43     		orrs	r3, r1
 3348 00f0 5360     		str	r3, [r2, #4]
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 3349              		.loc 1 1566 9 is_stmt 1 view .LVU1035
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 3350              		.loc 1 1566 13 is_stmt 0 view .LVU1036
 3351 00f2 2268     		ldr	r2, [r4]
 3352 00f4 9369     		ldr	r3, [r2, #24]
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 3353              		.loc 1 1566 12 view .LVU1037
 3354 00f6 5B07     		lsls	r3, r3, #29
 3355 00f8 0CD5     		bpl	.L227
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3356              		.loc 1 1569 11 is_stmt 1 view .LVU1038
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3357              		.loc 1 1569 52 is_stmt 0 view .LVU1039
 3358 00fa 526A     		ldr	r2, [r2, #36]
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3359              		.loc 1 1569 16 view .LVU1040
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 203


 3360 00fc 636A     		ldr	r3, [r4, #36]
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3361              		.loc 1 1569 27 view .LVU1041
 3362 00fe 1A70     		strb	r2, [r3]
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3363              		.loc 1 1572 11 is_stmt 1 view .LVU1042
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3364              		.loc 1 1572 15 is_stmt 0 view .LVU1043
 3365 0100 636A     		ldr	r3, [r4, #36]
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3366              		.loc 1 1572 25 view .LVU1044
 3367 0102 0133     		adds	r3, r3, #1
 3368 0104 6362     		str	r3, [r4, #36]
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize--;
 3369              		.loc 1 1574 11 is_stmt 1 view .LVU1045
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize--;
 3370              		.loc 1 1574 15 is_stmt 0 view .LVU1046
 3371 0106 638D     		ldrh	r3, [r4, #42]
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize--;
 3372              		.loc 1 1574 26 view .LVU1047
 3373 0108 013B     		subs	r3, r3, #1
 3374 010a 9BB2     		uxth	r3, r3
 3375 010c 6385     		strh	r3, [r4, #42]
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 3376              		.loc 1 1575 11 is_stmt 1 view .LVU1048
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 3377              		.loc 1 1575 15 is_stmt 0 view .LVU1049
 3378 010e 238D     		ldrh	r3, [r4, #40]
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 3379              		.loc 1 1575 25 view .LVU1050
 3380 0110 013B     		subs	r3, r3, #1
 3381 0112 2385     		strh	r3, [r4, #40]
 3382              	.L227:
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 3383              		.loc 1 1578 9 is_stmt 1 view .LVU1051
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 3384              		.loc 1 1578 16 is_stmt 0 view .LVU1052
 3385 0114 0120     		movs	r0, #1
 3386 0116 33E0     		b	.L221
 3387              	.L234:
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3388              		.loc 1 1592 5 is_stmt 1 view .LVU1053
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3389              		.loc 1 1592 9 is_stmt 0 view .LVU1054
 3390 0118 3A00     		movs	r2, r7
 3391 011a 3100     		movs	r1, r6
 3392 011c 2000     		movs	r0, r4
 3393 011e FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 3394              	.LVL223:
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3395              		.loc 1 1592 8 view .LVU1055
 3396 0122 0028     		cmp	r0, #0
 3397 0124 07D0     		beq	.L229
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3398              		.loc 1 1595 7 is_stmt 1 view .LVU1056
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3399              		.loc 1 1595 11 is_stmt 0 view .LVU1057
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 204


 3400 0126 2268     		ldr	r2, [r4]
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3401              		.loc 1 1595 27 view .LVU1058
 3402 0128 5168     		ldr	r1, [r2, #4]
 3403 012a 8023     		movs	r3, #128
 3404 012c 1B02     		lsls	r3, r3, #8
 3405 012e 0B43     		orrs	r3, r1
 3406 0130 5360     		str	r3, [r2, #4]
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3407              		.loc 1 1596 7 is_stmt 1 view .LVU1059
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3408              		.loc 1 1596 14 is_stmt 0 view .LVU1060
 3409 0132 0120     		movs	r0, #1
 3410 0134 24E0     		b	.L221
 3411              	.L229:
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3412              		.loc 1 1600 5 is_stmt 1 view .LVU1061
 3413 0136 2368     		ldr	r3, [r4]
 3414 0138 2022     		movs	r2, #32
 3415 013a DA61     		str	r2, [r3, #28]
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3416              		.loc 1 1603 5 view .LVU1062
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3417              		.loc 1 1603 9 is_stmt 0 view .LVU1063
 3418 013c 8021     		movs	r1, #128
 3419 013e 0097     		str	r7, [sp]
 3420 0140 3300     		movs	r3, r6
 3421 0142 1F3A     		subs	r2, r2, #31
 3422 0144 0902     		lsls	r1, r1, #8
 3423 0146 2000     		movs	r0, r4
 3424 0148 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3425              	.LVL224:
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3426              		.loc 1 1603 8 view .LVU1064
 3427 014c 0028     		cmp	r0, #0
 3428 014e 07D0     		beq	.L230
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3429              		.loc 1 1606 7 is_stmt 1 view .LVU1065
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3430              		.loc 1 1606 11 is_stmt 0 view .LVU1066
 3431 0150 2268     		ldr	r2, [r4]
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 3432              		.loc 1 1606 27 view .LVU1067
 3433 0152 5168     		ldr	r1, [r2, #4]
 3434 0154 8023     		movs	r3, #128
 3435 0156 1B02     		lsls	r3, r3, #8
 3436 0158 0B43     		orrs	r3, r1
 3437 015a 5360     		str	r3, [r2, #4]
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3438              		.loc 1 1607 7 is_stmt 1 view .LVU1068
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3439              		.loc 1 1607 14 is_stmt 0 view .LVU1069
 3440 015c 0120     		movs	r0, #1
 3441 015e 0FE0     		b	.L221
 3442              	.L230:
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3443              		.loc 1 1611 5 is_stmt 1 view .LVU1070
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 205


1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3444              		.loc 1 1611 9 is_stmt 0 view .LVU1071
 3445 0160 2268     		ldr	r2, [r4]
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3446              		.loc 1 1611 25 view .LVU1072
 3447 0162 5168     		ldr	r1, [r2, #4]
 3448 0164 8023     		movs	r3, #128
 3449 0166 1B02     		lsls	r3, r3, #8
 3450 0168 0B43     		orrs	r3, r1
 3451 016a 5360     		str	r3, [r2, #4]
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 3452              		.loc 1 1613 5 is_stmt 1 view .LVU1073
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 3453              		.loc 1 1613 17 is_stmt 0 view .LVU1074
 3454 016c 4123     		movs	r3, #65
 3455 016e 2022     		movs	r2, #32
 3456 0170 E254     		strb	r2, [r4, r3]
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3457              		.loc 1 1614 5 is_stmt 1 view .LVU1075
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3458              		.loc 1 1614 17 is_stmt 0 view .LVU1076
 3459 0172 0023     		movs	r3, #0
 3460 0174 2232     		adds	r2, r2, #34
 3461 0176 A354     		strb	r3, [r4, r2]
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3462              		.loc 1 1617 5 is_stmt 1 view .LVU1077
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3463              		.loc 1 1617 5 view .LVU1078
 3464 0178 023A     		subs	r2, r2, #2
 3465 017a A354     		strb	r3, [r4, r2]
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3466              		.loc 1 1617 5 view .LVU1079
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3467              		.loc 1 1619 5 view .LVU1080
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3468              		.loc 1 1619 12 is_stmt 0 view .LVU1081
 3469 017c 00E0     		b	.L221
 3470              	.LVL225:
 3471              	.L231:
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3472              		.loc 1 1623 12 view .LVU1082
 3473 017e 0220     		movs	r0, #2
 3474              	.LVL226:
 3475              	.L221:
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3476              		.loc 1 1625 1 view .LVU1083
 3477 0180 02B0     		add	sp, sp, #8
 3478              		@ sp needed
 3479              	.LVL227:
 3480              	.LVL228:
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3481              		.loc 1 1625 1 view .LVU1084
 3482 0182 80BC     		pop	{r7}
 3483 0184 B846     		mov	r8, r7
 3484 0186 F0BD     		pop	{r4, r5, r6, r7, pc}
 3485              	.LVL229:
 3486              	.L232:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 206


1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3487              		.loc 1 1520 5 view .LVU1085
 3488 0188 0220     		movs	r0, #2
 3489              	.LVL230:
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3490              		.loc 1 1520 5 view .LVU1086
 3491 018a F9E7     		b	.L221
 3492              	.L236:
 3493              		.align	2
 3494              	.L235:
 3495 018c FF7FFFFF 		.word	-32769
 3496              		.cfi_endproc
 3497              	.LFE47:
 3499              		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 3500              		.align	1
 3501              		.global	HAL_I2C_Master_Transmit_IT
 3502              		.syntax unified
 3503              		.code	16
 3504              		.thumb_func
 3506              	HAL_I2C_Master_Transmit_IT:
 3507              	.LVL231:
 3508              	.LFB48:
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
 3509              		.loc 1 1639 1 is_stmt 1 view -0
 3510              		.cfi_startproc
 3511              		@ args = 0, pretend = 0, frame = 0
 3512              		@ frame_needed = 0, uses_anonymous_args = 0
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
 3513              		.loc 1 1639 1 is_stmt 0 view .LVU1088
 3514 0000 30B5     		push	{r4, r5, lr}
 3515              	.LCFI27:
 3516              		.cfi_def_cfa_offset 12
 3517              		.cfi_offset 4, -12
 3518              		.cfi_offset 5, -8
 3519              		.cfi_offset 14, -4
 3520 0002 83B0     		sub	sp, sp, #12
 3521              	.LCFI28:
 3522              		.cfi_def_cfa_offset 24
 3523 0004 0400     		movs	r4, r0
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3524              		.loc 1 1640 3 is_stmt 1 view .LVU1089
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3525              		.loc 1 1642 3 view .LVU1090
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3526              		.loc 1 1642 11 is_stmt 0 view .LVU1091
 3527 0006 4120     		movs	r0, #65
 3528              	.LVL232:
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3529              		.loc 1 1642 11 view .LVU1092
 3530 0008 205C     		ldrb	r0, [r4, r0]
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3531              		.loc 1 1642 6 view .LVU1093
 3532 000a 2028     		cmp	r0, #32
 3533 000c 36D1     		bne	.L241
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3534              		.loc 1 1644 5 is_stmt 1 view .LVU1094
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 207


 3535              		.loc 1 1644 9 is_stmt 0 view .LVU1095
 3536 000e 2068     		ldr	r0, [r4]
 3537 0010 8069     		ldr	r0, [r0, #24]
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3538              		.loc 1 1644 8 view .LVU1096
 3539 0012 0004     		lsls	r0, r0, #16
 3540 0014 34D4     		bmi	.L242
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3541              		.loc 1 1650 5 is_stmt 1 view .LVU1097
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3542              		.loc 1 1650 5 view .LVU1098
 3543 0016 4020     		movs	r0, #64
 3544 0018 205C     		ldrb	r0, [r4, r0]
 3545 001a 0128     		cmp	r0, #1
 3546 001c 32D0     		beq	.L243
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3547              		.loc 1 1650 5 discriminator 2 view .LVU1099
 3548 001e 4020     		movs	r0, #64
 3549 0020 0125     		movs	r5, #1
 3550 0022 2554     		strb	r5, [r4, r0]
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3551              		.loc 1 1650 5 discriminator 2 view .LVU1100
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3552              		.loc 1 1652 5 discriminator 2 view .LVU1101
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3553              		.loc 1 1652 23 is_stmt 0 discriminator 2 view .LVU1102
 3554 0024 0130     		adds	r0, r0, #1
 3555 0026 2035     		adds	r5, r5, #32
 3556 0028 2554     		strb	r5, [r4, r0]
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3557              		.loc 1 1653 5 is_stmt 1 discriminator 2 view .LVU1103
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3558              		.loc 1 1653 23 is_stmt 0 discriminator 2 view .LVU1104
 3559 002a 0130     		adds	r0, r0, #1
 3560 002c 113D     		subs	r5, r5, #17
 3561 002e 2554     		strb	r5, [r4, r0]
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3562              		.loc 1 1654 5 is_stmt 1 discriminator 2 view .LVU1105
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3563              		.loc 1 1654 23 is_stmt 0 discriminator 2 view .LVU1106
 3564 0030 0020     		movs	r0, #0
 3565 0032 6064     		str	r0, [r4, #68]
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3566              		.loc 1 1657 5 is_stmt 1 discriminator 2 view .LVU1107
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3567              		.loc 1 1657 23 is_stmt 0 discriminator 2 view .LVU1108
 3568 0034 6262     		str	r2, [r4, #36]
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3569              		.loc 1 1658 5 is_stmt 1 discriminator 2 view .LVU1109
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3570              		.loc 1 1658 23 is_stmt 0 discriminator 2 view .LVU1110
 3571 0036 6385     		strh	r3, [r4, #42]
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 3572              		.loc 1 1659 5 is_stmt 1 discriminator 2 view .LVU1111
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 3573              		.loc 1 1659 23 is_stmt 0 discriminator 2 view .LVU1112
 3574 0038 134B     		ldr	r3, .L244
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 208


 3575              	.LVL233:
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 3576              		.loc 1 1659 23 discriminator 2 view .LVU1113
 3577 003a E362     		str	r3, [r4, #44]
 3578              	.LVL234:
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3579              		.loc 1 1660 5 is_stmt 1 discriminator 2 view .LVU1114
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3580              		.loc 1 1660 23 is_stmt 0 discriminator 2 view .LVU1115
 3581 003c 134B     		ldr	r3, .L244+4
 3582 003e 6363     		str	r3, [r4, #52]
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3583              		.loc 1 1662 5 is_stmt 1 discriminator 2 view .LVU1116
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3584              		.loc 1 1662 13 is_stmt 0 discriminator 2 view .LVU1117
 3585 0040 638D     		ldrh	r3, [r4, #42]
 3586 0042 9BB2     		uxth	r3, r3
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3587              		.loc 1 1662 8 discriminator 2 view .LVU1118
 3588 0044 FF2B     		cmp	r3, #255
 3589 0046 14D9     		bls	.L239
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3590              		.loc 1 1664 7 is_stmt 1 view .LVU1119
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3591              		.loc 1 1664 22 is_stmt 0 view .LVU1120
 3592 0048 FF23     		movs	r3, #255
 3593 004a 2385     		strh	r3, [r4, #40]
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3594              		.loc 1 1665 7 is_stmt 1 view .LVU1121
 3595              	.LVL235:
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3596              		.loc 1 1665 16 is_stmt 0 view .LVU1122
 3597 004c 8023     		movs	r3, #128
 3598 004e 5B04     		lsls	r3, r3, #17
 3599              	.LVL236:
 3600              	.L240:
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3601              		.loc 1 1675 5 is_stmt 1 view .LVU1123
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3602              		.loc 1 1675 55 is_stmt 0 view .LVU1124
 3603 0050 228D     		ldrh	r2, [r4, #40]
 3604              	.LVL237:
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3605              		.loc 1 1675 5 view .LVU1125
 3606 0052 D2B2     		uxtb	r2, r2
 3607 0054 0E48     		ldr	r0, .L244+8
 3608 0056 0090     		str	r0, [sp]
 3609              	.LVL238:
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3610              		.loc 1 1675 5 view .LVU1126
 3611 0058 2000     		movs	r0, r4
 3612 005a FFF7FEFF 		bl	I2C_TransferConfig
 3613              	.LVL239:
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3614              		.loc 1 1678 5 is_stmt 1 view .LVU1127
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3615              		.loc 1 1678 5 view .LVU1128
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 209


 3616 005e 4023     		movs	r3, #64
 3617 0060 0022     		movs	r2, #0
 3618 0062 E254     		strb	r2, [r4, r3]
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3619              		.loc 1 1678 5 view .LVU1129
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3620              		.loc 1 1688 5 view .LVU1130
 3621 0064 0121     		movs	r1, #1
 3622 0066 2000     		movs	r0, r4
 3623 0068 FFF7FEFF 		bl	I2C_Enable_IRQ
 3624              	.LVL240:
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3625              		.loc 1 1690 5 view .LVU1131
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3626              		.loc 1 1690 12 is_stmt 0 view .LVU1132
 3627 006c 0020     		movs	r0, #0
 3628              	.L238:
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3629              		.loc 1 1696 1 view .LVU1133
 3630 006e 03B0     		add	sp, sp, #12
 3631              		@ sp needed
 3632              	.LVL241:
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3633              		.loc 1 1696 1 view .LVU1134
 3634 0070 30BD     		pop	{r4, r5, pc}
 3635              	.LVL242:
 3636              	.L239:
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3637              		.loc 1 1669 7 is_stmt 1 view .LVU1135
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3638              		.loc 1 1669 28 is_stmt 0 view .LVU1136
 3639 0072 638D     		ldrh	r3, [r4, #42]
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3640              		.loc 1 1669 22 view .LVU1137
 3641 0074 2385     		strh	r3, [r4, #40]
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3642              		.loc 1 1670 7 is_stmt 1 view .LVU1138
 3643              	.LVL243:
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3644              		.loc 1 1670 16 is_stmt 0 view .LVU1139
 3645 0076 8023     		movs	r3, #128
 3646 0078 9B04     		lsls	r3, r3, #18
 3647 007a E9E7     		b	.L240
 3648              	.LVL244:
 3649              	.L241:
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3650              		.loc 1 1694 12 view .LVU1140
 3651 007c 0220     		movs	r0, #2
 3652 007e F6E7     		b	.L238
 3653              	.L242:
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3654              		.loc 1 1646 14 view .LVU1141
 3655 0080 0220     		movs	r0, #2
 3656 0082 F4E7     		b	.L238
 3657              	.L243:
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3658              		.loc 1 1650 5 view .LVU1142
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 210


 3659 0084 0220     		movs	r0, #2
 3660 0086 F2E7     		b	.L238
 3661              	.L245:
 3662              		.align	2
 3663              	.L244:
 3664 0088 0000FFFF 		.word	-65536
 3665 008c 00000000 		.word	I2C_Master_ISR_IT
 3666 0090 00200080 		.word	-2147475456
 3667              		.cfi_endproc
 3668              	.LFE48:
 3670              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 3671              		.align	1
 3672              		.global	HAL_I2C_Master_Receive_IT
 3673              		.syntax unified
 3674              		.code	16
 3675              		.thumb_func
 3677              	HAL_I2C_Master_Receive_IT:
 3678              	.LVL245:
 3679              	.LFB49:
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
 3680              		.loc 1 1710 1 is_stmt 1 view -0
 3681              		.cfi_startproc
 3682              		@ args = 0, pretend = 0, frame = 0
 3683              		@ frame_needed = 0, uses_anonymous_args = 0
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
 3684              		.loc 1 1710 1 is_stmt 0 view .LVU1144
 3685 0000 30B5     		push	{r4, r5, lr}
 3686              	.LCFI29:
 3687              		.cfi_def_cfa_offset 12
 3688              		.cfi_offset 4, -12
 3689              		.cfi_offset 5, -8
 3690              		.cfi_offset 14, -4
 3691 0002 83B0     		sub	sp, sp, #12
 3692              	.LCFI30:
 3693              		.cfi_def_cfa_offset 24
 3694 0004 0400     		movs	r4, r0
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3695              		.loc 1 1711 3 is_stmt 1 view .LVU1145
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3696              		.loc 1 1713 3 view .LVU1146
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3697              		.loc 1 1713 11 is_stmt 0 view .LVU1147
 3698 0006 4120     		movs	r0, #65
 3699              	.LVL246:
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3700              		.loc 1 1713 11 view .LVU1148
 3701 0008 205C     		ldrb	r0, [r4, r0]
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3702              		.loc 1 1713 6 view .LVU1149
 3703 000a 2028     		cmp	r0, #32
 3704 000c 36D1     		bne	.L250
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3705              		.loc 1 1715 5 is_stmt 1 view .LVU1150
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3706              		.loc 1 1715 9 is_stmt 0 view .LVU1151
 3707 000e 2068     		ldr	r0, [r4]
 3708 0010 8069     		ldr	r0, [r0, #24]
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 211


1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3709              		.loc 1 1715 8 view .LVU1152
 3710 0012 0004     		lsls	r0, r0, #16
 3711 0014 34D4     		bmi	.L251
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3712              		.loc 1 1721 5 is_stmt 1 view .LVU1153
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3713              		.loc 1 1721 5 view .LVU1154
 3714 0016 4020     		movs	r0, #64
 3715 0018 205C     		ldrb	r0, [r4, r0]
 3716 001a 0128     		cmp	r0, #1
 3717 001c 32D0     		beq	.L252
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3718              		.loc 1 1721 5 discriminator 2 view .LVU1155
 3719 001e 4020     		movs	r0, #64
 3720 0020 0125     		movs	r5, #1
 3721 0022 2554     		strb	r5, [r4, r0]
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3722              		.loc 1 1721 5 discriminator 2 view .LVU1156
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3723              		.loc 1 1723 5 discriminator 2 view .LVU1157
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3724              		.loc 1 1723 23 is_stmt 0 discriminator 2 view .LVU1158
 3725 0024 0130     		adds	r0, r0, #1
 3726 0026 2135     		adds	r5, r5, #33
 3727 0028 2554     		strb	r5, [r4, r0]
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3728              		.loc 1 1724 5 is_stmt 1 discriminator 2 view .LVU1159
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3729              		.loc 1 1724 23 is_stmt 0 discriminator 2 view .LVU1160
 3730 002a 0130     		adds	r0, r0, #1
 3731 002c 123D     		subs	r5, r5, #18
 3732 002e 2554     		strb	r5, [r4, r0]
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3733              		.loc 1 1725 5 is_stmt 1 discriminator 2 view .LVU1161
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3734              		.loc 1 1725 23 is_stmt 0 discriminator 2 view .LVU1162
 3735 0030 0020     		movs	r0, #0
 3736 0032 6064     		str	r0, [r4, #68]
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3737              		.loc 1 1728 5 is_stmt 1 discriminator 2 view .LVU1163
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3738              		.loc 1 1728 23 is_stmt 0 discriminator 2 view .LVU1164
 3739 0034 6262     		str	r2, [r4, #36]
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3740              		.loc 1 1729 5 is_stmt 1 discriminator 2 view .LVU1165
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3741              		.loc 1 1729 23 is_stmt 0 discriminator 2 view .LVU1166
 3742 0036 6385     		strh	r3, [r4, #42]
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 3743              		.loc 1 1730 5 is_stmt 1 discriminator 2 view .LVU1167
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 3744              		.loc 1 1730 23 is_stmt 0 discriminator 2 view .LVU1168
 3745 0038 134B     		ldr	r3, .L253
 3746              	.LVL247:
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 3747              		.loc 1 1730 23 discriminator 2 view .LVU1169
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 212


 3748 003a E362     		str	r3, [r4, #44]
 3749              	.LVL248:
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3750              		.loc 1 1731 5 is_stmt 1 discriminator 2 view .LVU1170
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3751              		.loc 1 1731 23 is_stmt 0 discriminator 2 view .LVU1171
 3752 003c 134B     		ldr	r3, .L253+4
 3753 003e 6363     		str	r3, [r4, #52]
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3754              		.loc 1 1733 5 is_stmt 1 discriminator 2 view .LVU1172
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3755              		.loc 1 1733 13 is_stmt 0 discriminator 2 view .LVU1173
 3756 0040 638D     		ldrh	r3, [r4, #42]
 3757 0042 9BB2     		uxth	r3, r3
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3758              		.loc 1 1733 8 discriminator 2 view .LVU1174
 3759 0044 FF2B     		cmp	r3, #255
 3760 0046 14D9     		bls	.L248
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3761              		.loc 1 1735 7 is_stmt 1 view .LVU1175
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3762              		.loc 1 1735 22 is_stmt 0 view .LVU1176
 3763 0048 FF23     		movs	r3, #255
 3764 004a 2385     		strh	r3, [r4, #40]
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3765              		.loc 1 1736 7 is_stmt 1 view .LVU1177
 3766              	.LVL249:
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3767              		.loc 1 1736 16 is_stmt 0 view .LVU1178
 3768 004c 8023     		movs	r3, #128
 3769 004e 5B04     		lsls	r3, r3, #17
 3770              	.LVL250:
 3771              	.L249:
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3772              		.loc 1 1746 5 is_stmt 1 view .LVU1179
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3773              		.loc 1 1746 55 is_stmt 0 view .LVU1180
 3774 0050 228D     		ldrh	r2, [r4, #40]
 3775              	.LVL251:
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3776              		.loc 1 1746 5 view .LVU1181
 3777 0052 D2B2     		uxtb	r2, r2
 3778 0054 0E48     		ldr	r0, .L253+8
 3779 0056 0090     		str	r0, [sp]
 3780              	.LVL252:
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3781              		.loc 1 1746 5 view .LVU1182
 3782 0058 2000     		movs	r0, r4
 3783 005a FFF7FEFF 		bl	I2C_TransferConfig
 3784              	.LVL253:
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3785              		.loc 1 1749 5 is_stmt 1 view .LVU1183
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3786              		.loc 1 1749 5 view .LVU1184
 3787 005e 4023     		movs	r3, #64
 3788 0060 0022     		movs	r2, #0
 3789 0062 E254     		strb	r2, [r4, r3]
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 213


1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3790              		.loc 1 1749 5 view .LVU1185
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3791              		.loc 1 1759 5 view .LVU1186
 3792 0064 0221     		movs	r1, #2
 3793 0066 2000     		movs	r0, r4
 3794 0068 FFF7FEFF 		bl	I2C_Enable_IRQ
 3795              	.LVL254:
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3796              		.loc 1 1761 5 view .LVU1187
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3797              		.loc 1 1761 12 is_stmt 0 view .LVU1188
 3798 006c 0020     		movs	r0, #0
 3799              	.L247:
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3800              		.loc 1 1767 1 view .LVU1189
 3801 006e 03B0     		add	sp, sp, #12
 3802              		@ sp needed
 3803              	.LVL255:
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3804              		.loc 1 1767 1 view .LVU1190
 3805 0070 30BD     		pop	{r4, r5, pc}
 3806              	.LVL256:
 3807              	.L248:
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3808              		.loc 1 1740 7 is_stmt 1 view .LVU1191
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3809              		.loc 1 1740 28 is_stmt 0 view .LVU1192
 3810 0072 638D     		ldrh	r3, [r4, #42]
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3811              		.loc 1 1740 22 view .LVU1193
 3812 0074 2385     		strh	r3, [r4, #40]
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3813              		.loc 1 1741 7 is_stmt 1 view .LVU1194
 3814              	.LVL257:
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3815              		.loc 1 1741 16 is_stmt 0 view .LVU1195
 3816 0076 8023     		movs	r3, #128
 3817 0078 9B04     		lsls	r3, r3, #18
 3818 007a E9E7     		b	.L249
 3819              	.LVL258:
 3820              	.L250:
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3821              		.loc 1 1765 12 view .LVU1196
 3822 007c 0220     		movs	r0, #2
 3823 007e F6E7     		b	.L247
 3824              	.L251:
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3825              		.loc 1 1717 14 view .LVU1197
 3826 0080 0220     		movs	r0, #2
 3827 0082 F4E7     		b	.L247
 3828              	.L252:
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3829              		.loc 1 1721 5 view .LVU1198
 3830 0084 0220     		movs	r0, #2
 3831 0086 F2E7     		b	.L247
 3832              	.L254:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 214


 3833              		.align	2
 3834              	.L253:
 3835 0088 0000FFFF 		.word	-65536
 3836 008c 00000000 		.word	I2C_Master_ISR_IT
 3837 0090 00240080 		.word	-2147474432
 3838              		.cfi_endproc
 3839              	.LFE49:
 3841              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 3842              		.align	1
 3843              		.global	HAL_I2C_Slave_Transmit_IT
 3844              		.syntax unified
 3845              		.code	16
 3846              		.thumb_func
 3848              	HAL_I2C_Slave_Transmit_IT:
 3849              	.LVL259:
 3850              	.LFB50:
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 3851              		.loc 1 1778 1 is_stmt 1 view -0
 3852              		.cfi_startproc
 3853              		@ args = 0, pretend = 0, frame = 0
 3854              		@ frame_needed = 0, uses_anonymous_args = 0
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 3855              		.loc 1 1778 1 is_stmt 0 view .LVU1200
 3856 0000 70B5     		push	{r4, r5, r6, lr}
 3857              	.LCFI31:
 3858              		.cfi_def_cfa_offset 16
 3859              		.cfi_offset 4, -16
 3860              		.cfi_offset 5, -12
 3861              		.cfi_offset 6, -8
 3862              		.cfi_offset 14, -4
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3863              		.loc 1 1779 3 is_stmt 1 view .LVU1201
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3864              		.loc 1 1779 11 is_stmt 0 view .LVU1202
 3865 0002 4123     		movs	r3, #65
 3866 0004 C35C     		ldrb	r3, [r0, r3]
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 3867              		.loc 1 1779 6 view .LVU1203
 3868 0006 202B     		cmp	r3, #32
 3869 0008 36D1     		bne	.L258
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3870              		.loc 1 1782 5 is_stmt 1 view .LVU1204
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3871              		.loc 1 1782 5 view .LVU1205
 3872 000a 2033     		adds	r3, r3, #32
 3873 000c C35C     		ldrb	r3, [r0, r3]
 3874 000e 012B     		cmp	r3, #1
 3875 0010 34D0     		beq	.L259
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3876              		.loc 1 1782 5 discriminator 2 view .LVU1206
 3877 0012 4023     		movs	r3, #64
 3878 0014 0124     		movs	r4, #1
 3879 0016 C454     		strb	r4, [r0, r3]
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3880              		.loc 1 1782 5 discriminator 2 view .LVU1207
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3881              		.loc 1 1784 5 discriminator 2 view .LVU1208
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 215


1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3882              		.loc 1 1784 23 is_stmt 0 discriminator 2 view .LVU1209
 3883 0018 0133     		adds	r3, r3, #1
 3884 001a 2034     		adds	r4, r4, #32
 3885 001c C454     		strb	r4, [r0, r3]
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3886              		.loc 1 1785 5 is_stmt 1 discriminator 2 view .LVU1210
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3887              		.loc 1 1785 23 is_stmt 0 discriminator 2 view .LVU1211
 3888 001e 0133     		adds	r3, r3, #1
 3889 0020 013C     		subs	r4, r4, #1
 3890 0022 C454     		strb	r4, [r0, r3]
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3891              		.loc 1 1786 5 is_stmt 1 discriminator 2 view .LVU1212
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3892              		.loc 1 1786 23 is_stmt 0 discriminator 2 view .LVU1213
 3893 0024 0023     		movs	r3, #0
 3894 0026 4364     		str	r3, [r0, #68]
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3895              		.loc 1 1789 5 is_stmt 1 discriminator 2 view .LVU1214
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3896              		.loc 1 1789 9 is_stmt 0 discriminator 2 view .LVU1215
 3897 0028 0468     		ldr	r4, [r0]
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3898              		.loc 1 1789 25 discriminator 2 view .LVU1216
 3899 002a 6368     		ldr	r3, [r4, #4]
 3900 002c 144D     		ldr	r5, .L261
 3901 002e 2B40     		ands	r3, r5
 3902 0030 6360     		str	r3, [r4, #4]
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3903              		.loc 1 1792 5 is_stmt 1 discriminator 2 view .LVU1217
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3904              		.loc 1 1792 23 is_stmt 0 discriminator 2 view .LVU1218
 3905 0032 4162     		str	r1, [r0, #36]
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3906              		.loc 1 1793 5 is_stmt 1 discriminator 2 view .LVU1219
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3907              		.loc 1 1793 23 is_stmt 0 discriminator 2 view .LVU1220
 3908 0034 4285     		strh	r2, [r0, #42]
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3909              		.loc 1 1794 5 is_stmt 1 discriminator 2 view .LVU1221
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3910              		.loc 1 1794 29 is_stmt 0 discriminator 2 view .LVU1222
 3911 0036 438D     		ldrh	r3, [r0, #42]
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3912              		.loc 1 1794 23 discriminator 2 view .LVU1223
 3913 0038 0385     		strh	r3, [r0, #40]
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 3914              		.loc 1 1795 5 is_stmt 1 discriminator 2 view .LVU1224
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 3915              		.loc 1 1795 23 is_stmt 0 discriminator 2 view .LVU1225
 3916 003a 124B     		ldr	r3, .L261+4
 3917 003c C362     		str	r3, [r0, #44]
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3918              		.loc 1 1796 5 is_stmt 1 discriminator 2 view .LVU1226
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3919              		.loc 1 1796 23 is_stmt 0 discriminator 2 view .LVU1227
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 216


 3920 003e 124B     		ldr	r3, .L261+8
 3921 0040 4363     		str	r3, [r0, #52]
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3922              		.loc 1 1799 5 is_stmt 1 discriminator 2 view .LVU1228
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3923              		.loc 1 1799 19 is_stmt 0 discriminator 2 view .LVU1229
 3924 0042 026A     		ldr	r2, [r0, #32]
 3925              	.LVL260:
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 3926              		.loc 1 1799 8 discriminator 2 view .LVU1230
 3927 0044 8023     		movs	r3, #128
 3928 0046 9B02     		lsls	r3, r3, #10
 3929 0048 9A42     		cmp	r2, r3
 3930 004a 07D0     		beq	.L260
 3931              	.L257:
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3932              		.loc 1 1813 5 is_stmt 1 view .LVU1231
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3933              		.loc 1 1813 5 view .LVU1232
 3934 004c 4023     		movs	r3, #64
 3935 004e 0022     		movs	r2, #0
 3936 0050 C254     		strb	r2, [r0, r3]
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3937              		.loc 1 1813 5 view .LVU1233
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3938              		.loc 1 1823 5 view .LVU1234
 3939 0052 0E49     		ldr	r1, .L261+12
 3940              	.LVL261:
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3941              		.loc 1 1823 5 is_stmt 0 view .LVU1235
 3942 0054 FFF7FEFF 		bl	I2C_Enable_IRQ
 3943              	.LVL262:
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3944              		.loc 1 1825 5 is_stmt 1 view .LVU1236
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3945              		.loc 1 1825 12 is_stmt 0 view .LVU1237
 3946 0058 0020     		movs	r0, #0
 3947              	.L256:
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3948              		.loc 1 1831 1 view .LVU1238
 3949              		@ sp needed
 3950 005a 70BD     		pop	{r4, r5, r6, pc}
 3951              	.LVL263:
 3952              	.L260:
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3953              		.loc 1 1803 7 is_stmt 1 view .LVU1239
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3954              		.loc 1 1803 11 is_stmt 0 view .LVU1240
 3955 005c 0368     		ldr	r3, [r0]
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3956              		.loc 1 1803 30 view .LVU1241
 3957 005e 0A78     		ldrb	r2, [r1]
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3958              		.loc 1 1803 28 view .LVU1242
 3959 0060 9A62     		str	r2, [r3, #40]
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3960              		.loc 1 1806 7 is_stmt 1 view .LVU1243
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 217


1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3961              		.loc 1 1806 11 is_stmt 0 view .LVU1244
 3962 0062 436A     		ldr	r3, [r0, #36]
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3963              		.loc 1 1806 21 view .LVU1245
 3964 0064 0133     		adds	r3, r3, #1
 3965 0066 4362     		str	r3, [r0, #36]
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 3966              		.loc 1 1808 7 is_stmt 1 view .LVU1246
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 3967              		.loc 1 1808 11 is_stmt 0 view .LVU1247
 3968 0068 438D     		ldrh	r3, [r0, #42]
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 3969              		.loc 1 1808 22 view .LVU1248
 3970 006a 013B     		subs	r3, r3, #1
 3971 006c 9BB2     		uxth	r3, r3
 3972 006e 4385     		strh	r3, [r0, #42]
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3973              		.loc 1 1809 7 is_stmt 1 view .LVU1249
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3974              		.loc 1 1809 11 is_stmt 0 view .LVU1250
 3975 0070 038D     		ldrh	r3, [r0, #40]
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 3976              		.loc 1 1809 21 view .LVU1251
 3977 0072 013B     		subs	r3, r3, #1
 3978 0074 0385     		strh	r3, [r0, #40]
 3979 0076 E9E7     		b	.L257
 3980              	.LVL264:
 3981              	.L258:
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3982              		.loc 1 1829 12 view .LVU1252
 3983 0078 0220     		movs	r0, #2
 3984              	.LVL265:
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 3985              		.loc 1 1829 12 view .LVU1253
 3986 007a EEE7     		b	.L256
 3987              	.LVL266:
 3988              	.L259:
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3989              		.loc 1 1782 5 view .LVU1254
 3990 007c 0220     		movs	r0, #2
 3991              	.LVL267:
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 3992              		.loc 1 1782 5 view .LVU1255
 3993 007e ECE7     		b	.L256
 3994              	.L262:
 3995              		.align	2
 3996              	.L261:
 3997 0080 FF7FFFFF 		.word	-32769
 3998 0084 0000FFFF 		.word	-65536
 3999 0088 00000000 		.word	I2C_Slave_ISR_IT
 4000 008c 01800000 		.word	32769
 4001              		.cfi_endproc
 4002              	.LFE50:
 4004              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
 4005              		.align	1
 4006              		.global	HAL_I2C_Slave_Receive_IT
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 218


 4007              		.syntax unified
 4008              		.code	16
 4009              		.thumb_func
 4011              	HAL_I2C_Slave_Receive_IT:
 4012              	.LVL268:
 4013              	.LFB51:
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 4014              		.loc 1 1842 1 is_stmt 1 view -0
 4015              		.cfi_startproc
 4016              		@ args = 0, pretend = 0, frame = 0
 4017              		@ frame_needed = 0, uses_anonymous_args = 0
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 4018              		.loc 1 1842 1 is_stmt 0 view .LVU1257
 4019 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4020              	.LCFI32:
 4021              		.cfi_def_cfa_offset 24
 4022              		.cfi_offset 3, -24
 4023              		.cfi_offset 4, -20
 4024              		.cfi_offset 5, -16
 4025              		.cfi_offset 6, -12
 4026              		.cfi_offset 7, -8
 4027              		.cfi_offset 14, -4
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 4028              		.loc 1 1843 3 is_stmt 1 view .LVU1258
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 4029              		.loc 1 1843 11 is_stmt 0 view .LVU1259
 4030 0002 4123     		movs	r3, #65
 4031 0004 C35C     		ldrb	r3, [r0, r3]
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 4032              		.loc 1 1843 6 view .LVU1260
 4033 0006 202B     		cmp	r3, #32
 4034 0008 21D1     		bne	.L265
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4035              		.loc 1 1846 5 is_stmt 1 view .LVU1261
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4036              		.loc 1 1846 5 view .LVU1262
 4037 000a 2033     		adds	r3, r3, #32
 4038 000c C35C     		ldrb	r3, [r0, r3]
 4039 000e 012B     		cmp	r3, #1
 4040 0010 1FD0     		beq	.L266
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4041              		.loc 1 1846 5 discriminator 2 view .LVU1263
 4042 0012 4024     		movs	r4, #64
 4043 0014 0123     		movs	r3, #1
 4044 0016 0355     		strb	r3, [r0, r4]
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4045              		.loc 1 1846 5 discriminator 2 view .LVU1264
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 4046              		.loc 1 1848 5 discriminator 2 view .LVU1265
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 4047              		.loc 1 1848 23 is_stmt 0 discriminator 2 view .LVU1266
 4048 0018 4033     		adds	r3, r3, #64
 4049 001a 2225     		movs	r5, #34
 4050 001c C554     		strb	r5, [r0, r3]
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4051              		.loc 1 1849 5 is_stmt 1 discriminator 2 view .LVU1267
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 219


 4052              		.loc 1 1849 23 is_stmt 0 discriminator 2 view .LVU1268
 4053 001e 0133     		adds	r3, r3, #1
 4054 0020 023D     		subs	r5, r5, #2
 4055 0022 C554     		strb	r5, [r0, r3]
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4056              		.loc 1 1850 5 is_stmt 1 discriminator 2 view .LVU1269
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4057              		.loc 1 1850 23 is_stmt 0 discriminator 2 view .LVU1270
 4058 0024 0025     		movs	r5, #0
 4059 0026 4564     		str	r5, [r0, #68]
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4060              		.loc 1 1853 5 is_stmt 1 discriminator 2 view .LVU1271
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4061              		.loc 1 1853 9 is_stmt 0 discriminator 2 view .LVU1272
 4062 0028 0668     		ldr	r6, [r0]
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4063              		.loc 1 1853 25 discriminator 2 view .LVU1273
 4064 002a 7368     		ldr	r3, [r6, #4]
 4065 002c 0A4F     		ldr	r7, .L267
 4066 002e 3B40     		ands	r3, r7
 4067 0030 7360     		str	r3, [r6, #4]
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4068              		.loc 1 1856 5 is_stmt 1 discriminator 2 view .LVU1274
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4069              		.loc 1 1856 23 is_stmt 0 discriminator 2 view .LVU1275
 4070 0032 4162     		str	r1, [r0, #36]
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 4071              		.loc 1 1857 5 is_stmt 1 discriminator 2 view .LVU1276
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 4072              		.loc 1 1857 23 is_stmt 0 discriminator 2 view .LVU1277
 4073 0034 4285     		strh	r2, [r0, #42]
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4074              		.loc 1 1858 5 is_stmt 1 discriminator 2 view .LVU1278
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4075              		.loc 1 1858 29 is_stmt 0 discriminator 2 view .LVU1279
 4076 0036 438D     		ldrh	r3, [r0, #42]
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4077              		.loc 1 1858 23 discriminator 2 view .LVU1280
 4078 0038 0385     		strh	r3, [r0, #40]
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 4079              		.loc 1 1859 5 is_stmt 1 discriminator 2 view .LVU1281
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 4080              		.loc 1 1859 23 is_stmt 0 discriminator 2 view .LVU1282
 4081 003a 084B     		ldr	r3, .L267+4
 4082 003c C362     		str	r3, [r0, #44]
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4083              		.loc 1 1860 5 is_stmt 1 discriminator 2 view .LVU1283
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4084              		.loc 1 1860 23 is_stmt 0 discriminator 2 view .LVU1284
 4085 003e 084B     		ldr	r3, .L267+8
 4086 0040 4363     		str	r3, [r0, #52]
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4087              		.loc 1 1863 5 is_stmt 1 discriminator 2 view .LVU1285
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4088              		.loc 1 1863 5 discriminator 2 view .LVU1286
 4089 0042 0555     		strb	r5, [r0, r4]
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 220


 4090              		.loc 1 1863 5 discriminator 2 view .LVU1287
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4091              		.loc 1 1873 5 discriminator 2 view .LVU1288
 4092 0044 0749     		ldr	r1, .L267+12
 4093              	.LVL269:
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4094              		.loc 1 1873 5 is_stmt 0 discriminator 2 view .LVU1289
 4095 0046 FFF7FEFF 		bl	I2C_Enable_IRQ
 4096              	.LVL270:
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 4097              		.loc 1 1875 5 is_stmt 1 discriminator 2 view .LVU1290
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 4098              		.loc 1 1875 12 is_stmt 0 discriminator 2 view .LVU1291
 4099 004a 0020     		movs	r0, #0
 4100              	.L264:
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4101              		.loc 1 1881 1 view .LVU1292
 4102              		@ sp needed
 4103 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4104              	.LVL271:
 4105              	.L265:
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 4106              		.loc 1 1879 12 view .LVU1293
 4107 004e 0220     		movs	r0, #2
 4108              	.LVL272:
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 4109              		.loc 1 1879 12 view .LVU1294
 4110 0050 FCE7     		b	.L264
 4111              	.LVL273:
 4112              	.L266:
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4113              		.loc 1 1846 5 view .LVU1295
 4114 0052 0220     		movs	r0, #2
 4115              	.LVL274:
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4116              		.loc 1 1846 5 view .LVU1296
 4117 0054 FAE7     		b	.L264
 4118              	.L268:
 4119 0056 C046     		.align	2
 4120              	.L267:
 4121 0058 FF7FFFFF 		.word	-32769
 4122 005c 0000FFFF 		.word	-65536
 4123 0060 00000000 		.word	I2C_Slave_ISR_IT
 4124 0064 02800000 		.word	32770
 4125              		.cfi_endproc
 4126              	.LFE51:
 4128              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
 4129              		.align	1
 4130              		.global	HAL_I2C_Master_Transmit_DMA
 4131              		.syntax unified
 4132              		.code	16
 4133              		.thumb_func
 4135              	HAL_I2C_Master_Transmit_DMA:
 4136              	.LVL275:
 4137              	.LFB52:
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
 4138              		.loc 1 1895 1 is_stmt 1 view -0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 221


 4139              		.cfi_startproc
 4140              		@ args = 0, pretend = 0, frame = 0
 4141              		@ frame_needed = 0, uses_anonymous_args = 0
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode;
 4142              		.loc 1 1895 1 is_stmt 0 view .LVU1298
 4143 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4144              	.LCFI33:
 4145              		.cfi_def_cfa_offset 20
 4146              		.cfi_offset 4, -20
 4147              		.cfi_offset 5, -16
 4148              		.cfi_offset 6, -12
 4149              		.cfi_offset 7, -8
 4150              		.cfi_offset 14, -4
 4151 0002 83B0     		sub	sp, sp, #12
 4152              	.LCFI34:
 4153              		.cfi_def_cfa_offset 32
 4154 0004 0400     		movs	r4, r0
 4155 0006 0E00     		movs	r6, r1
 4156 0008 1500     		movs	r5, r2
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 4157              		.loc 1 1896 3 is_stmt 1 view .LVU1299
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4158              		.loc 1 1897 3 view .LVU1300
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 4159              		.loc 1 1899 3 view .LVU1301
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 4160              		.loc 1 1899 11 is_stmt 0 view .LVU1302
 4161 000a 4122     		movs	r2, #65
 4162              	.LVL276:
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 4163              		.loc 1 1899 11 view .LVU1303
 4164 000c 825C     		ldrb	r2, [r0, r2]
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 4165              		.loc 1 1899 6 view .LVU1304
 4166 000e 202A     		cmp	r2, #32
 4167 0010 00D0     		beq	.LCB3952
 4168 0012 8CE0     		b	.L278	@long jump
 4169              	.LCB3952:
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 4170              		.loc 1 1901 5 is_stmt 1 view .LVU1305
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 4171              		.loc 1 1901 9 is_stmt 0 view .LVU1306
 4172 0014 0268     		ldr	r2, [r0]
 4173 0016 9269     		ldr	r2, [r2, #24]
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 4174              		.loc 1 1901 8 view .LVU1307
 4175 0018 1204     		lsls	r2, r2, #16
 4176 001a 00D5     		bpl	.LCB3959
 4177 001c 8AE0     		b	.L279	@long jump
 4178              	.LCB3959:
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4179              		.loc 1 1907 5 is_stmt 1 view .LVU1308
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4180              		.loc 1 1907 5 view .LVU1309
 4181 001e 4022     		movs	r2, #64
 4182 0020 825C     		ldrb	r2, [r0, r2]
 4183 0022 012A     		cmp	r2, #1
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccj5u1qx.s 			page 222


 4184 0024 00D1     		bne	.LCB3965
 4185 0026 87E0     		b	.L280	@long jump
 4186              	.LCB3965:
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4187              		.loc 1 1907 5 discriminator 2 view .LVU1310
 4188 0028 4022     		movs	r2, #64
 4189 002a 0121     		movs	r1, #1
 4190              	.LVL277:
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 4191              		.loc 1 1907 5 is_stmt 0 discriminator 2 view .LVU1311
 4192 002c 8154     		strb	r1, [r0, r2]
1907:Drivers/STM32F0xx_HAL_D